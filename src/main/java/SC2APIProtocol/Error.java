// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: error.proto

package SC2APIProtocol;

public final class Error {
  private Error() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code SC2APIProtocol.ActionResult}
   */
  public enum ActionResult
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Success = 1;</code>
     */
    Success(1),
    /**
     * <code>NotSupported = 2;</code>
     */
    NotSupported(2),
    /**
     * <code>Error = 3;</code>
     */
    Error(3),
    /**
     * <code>CantQueueThatOrder = 4;</code>
     */
    CantQueueThatOrder(4),
    /**
     * <code>Retry = 5;</code>
     */
    Retry(5),
    /**
     * <code>Cooldown = 6;</code>
     */
    Cooldown(6),
    /**
     * <code>QueueIsFull = 7;</code>
     */
    QueueIsFull(7),
    /**
     * <code>RallyQueueIsFull = 8;</code>
     */
    RallyQueueIsFull(8),
    /**
     * <code>NotEnoughMinerals = 9;</code>
     */
    NotEnoughMinerals(9),
    /**
     * <code>NotEnoughVespene = 10;</code>
     */
    NotEnoughVespene(10),
    /**
     * <code>NotEnoughTerrazine = 11;</code>
     */
    NotEnoughTerrazine(11),
    /**
     * <code>NotEnoughCustom = 12;</code>
     */
    NotEnoughCustom(12),
    /**
     * <code>NotEnoughFood = 13;</code>
     */
    NotEnoughFood(13),
    /**
     * <code>FoodUsageImpossible = 14;</code>
     */
    FoodUsageImpossible(14),
    /**
     * <code>NotEnoughLife = 15;</code>
     */
    NotEnoughLife(15),
    /**
     * <code>NotEnoughShields = 16;</code>
     */
    NotEnoughShields(16),
    /**
     * <code>NotEnoughEnergy = 17;</code>
     */
    NotEnoughEnergy(17),
    /**
     * <code>LifeSuppressed = 18;</code>
     */
    LifeSuppressed(18),
    /**
     * <code>ShieldsSuppressed = 19;</code>
     */
    ShieldsSuppressed(19),
    /**
     * <code>EnergySuppressed = 20;</code>
     */
    EnergySuppressed(20),
    /**
     * <code>NotEnoughCharges = 21;</code>
     */
    NotEnoughCharges(21),
    /**
     * <code>CantAddMoreCharges = 22;</code>
     */
    CantAddMoreCharges(22),
    /**
     * <code>TooMuchMinerals = 23;</code>
     */
    TooMuchMinerals(23),
    /**
     * <code>TooMuchVespene = 24;</code>
     */
    TooMuchVespene(24),
    /**
     * <code>TooMuchTerrazine = 25;</code>
     */
    TooMuchTerrazine(25),
    /**
     * <code>TooMuchCustom = 26;</code>
     */
    TooMuchCustom(26),
    /**
     * <code>TooMuchFood = 27;</code>
     */
    TooMuchFood(27),
    /**
     * <code>TooMuchLife = 28;</code>
     */
    TooMuchLife(28),
    /**
     * <code>TooMuchShields = 29;</code>
     */
    TooMuchShields(29),
    /**
     * <code>TooMuchEnergy = 30;</code>
     */
    TooMuchEnergy(30),
    /**
     * <code>MustTargetUnitWithLife = 31;</code>
     */
    MustTargetUnitWithLife(31),
    /**
     * <code>MustTargetUnitWithShields = 32;</code>
     */
    MustTargetUnitWithShields(32),
    /**
     * <code>MustTargetUnitWithEnergy = 33;</code>
     */
    MustTargetUnitWithEnergy(33),
    /**
     * <code>CantTrade = 34;</code>
     */
    CantTrade(34),
    /**
     * <code>CantSpend = 35;</code>
     */
    CantSpend(35),
    /**
     * <code>CantTargetThatUnit = 36;</code>
     */
    CantTargetThatUnit(36),
    /**
     * <code>CouldntAllocateUnit = 37;</code>
     */
    CouldntAllocateUnit(37),
    /**
     * <code>UnitCantMove = 38;</code>
     */
    UnitCantMove(38),
    /**
     * <code>TransportIsHoldingPosition = 39;</code>
     */
    TransportIsHoldingPosition(39),
    /**
     * <code>BuildTechRequirementsNotMet = 40;</code>
     */
    BuildTechRequirementsNotMet(40),
    /**
     * <code>CantFindPlacementLocation = 41;</code>
     */
    CantFindPlacementLocation(41),
    /**
     * <code>CantBuildOnThat = 42;</code>
     */
    CantBuildOnThat(42),
    /**
     * <code>CantBuildTooCloseToDropOff = 43;</code>
     */
    CantBuildTooCloseToDropOff(43),
    /**
     * <code>CantBuildLocationInvalid = 44;</code>
     */
    CantBuildLocationInvalid(44),
    /**
     * <code>CantSeeBuildLocation = 45;</code>
     */
    CantSeeBuildLocation(45),
    /**
     * <code>CantBuildTooCloseToCreepSource = 46;</code>
     */
    CantBuildTooCloseToCreepSource(46),
    /**
     * <code>CantBuildTooCloseToResources = 47;</code>
     */
    CantBuildTooCloseToResources(47),
    /**
     * <code>CantBuildTooFarFromWater = 48;</code>
     */
    CantBuildTooFarFromWater(48),
    /**
     * <code>CantBuildTooFarFromCreepSource = 49;</code>
     */
    CantBuildTooFarFromCreepSource(49),
    /**
     * <code>CantBuildTooFarFromBuildPowerSource = 50;</code>
     */
    CantBuildTooFarFromBuildPowerSource(50),
    /**
     * <code>CantBuildOnDenseTerrain = 51;</code>
     */
    CantBuildOnDenseTerrain(51),
    /**
     * <code>CantTrainTooFarFromTrainPowerSource = 52;</code>
     */
    CantTrainTooFarFromTrainPowerSource(52),
    /**
     * <code>CantLandLocationInvalid = 53;</code>
     */
    CantLandLocationInvalid(53),
    /**
     * <code>CantSeeLandLocation = 54;</code>
     */
    CantSeeLandLocation(54),
    /**
     * <code>CantLandTooCloseToCreepSource = 55;</code>
     */
    CantLandTooCloseToCreepSource(55),
    /**
     * <code>CantLandTooCloseToResources = 56;</code>
     */
    CantLandTooCloseToResources(56),
    /**
     * <code>CantLandTooFarFromWater = 57;</code>
     */
    CantLandTooFarFromWater(57),
    /**
     * <code>CantLandTooFarFromCreepSource = 58;</code>
     */
    CantLandTooFarFromCreepSource(58),
    /**
     * <code>CantLandTooFarFromBuildPowerSource = 59;</code>
     */
    CantLandTooFarFromBuildPowerSource(59),
    /**
     * <code>CantLandTooFarFromTrainPowerSource = 60;</code>
     */
    CantLandTooFarFromTrainPowerSource(60),
    /**
     * <code>CantLandOnDenseTerrain = 61;</code>
     */
    CantLandOnDenseTerrain(61),
    /**
     * <code>AddOnTooFarFromBuilding = 62;</code>
     */
    AddOnTooFarFromBuilding(62),
    /**
     * <code>MustBuildRefineryFirst = 63;</code>
     */
    MustBuildRefineryFirst(63),
    /**
     * <code>BuildingIsUnderConstruction = 64;</code>
     */
    BuildingIsUnderConstruction(64),
    /**
     * <code>CantFindDropOff = 65;</code>
     */
    CantFindDropOff(65),
    /**
     * <code>CantLoadOtherPlayersUnits = 66;</code>
     */
    CantLoadOtherPlayersUnits(66),
    /**
     * <code>NotEnoughRoomToLoadUnit = 67;</code>
     */
    NotEnoughRoomToLoadUnit(67),
    /**
     * <code>CantUnloadUnitsThere = 68;</code>
     */
    CantUnloadUnitsThere(68),
    /**
     * <code>CantWarpInUnitsThere = 69;</code>
     */
    CantWarpInUnitsThere(69),
    /**
     * <code>CantLoadImmobileUnits = 70;</code>
     */
    CantLoadImmobileUnits(70),
    /**
     * <code>CantRechargeImmobileUnits = 71;</code>
     */
    CantRechargeImmobileUnits(71),
    /**
     * <code>CantRechargeUnderConstructionUnits = 72;</code>
     */
    CantRechargeUnderConstructionUnits(72),
    /**
     * <code>CantLoadThatUnit = 73;</code>
     */
    CantLoadThatUnit(73),
    /**
     * <code>NoCargoToUnload = 74;</code>
     */
    NoCargoToUnload(74),
    /**
     * <code>LoadAllNoTargetsFound = 75;</code>
     */
    LoadAllNoTargetsFound(75),
    /**
     * <code>NotWhileOccupied = 76;</code>
     */
    NotWhileOccupied(76),
    /**
     * <code>CantAttackWithoutAmmo = 77;</code>
     */
    CantAttackWithoutAmmo(77),
    /**
     * <code>CantHoldAnyMoreAmmo = 78;</code>
     */
    CantHoldAnyMoreAmmo(78),
    /**
     * <code>TechRequirementsNotMet = 79;</code>
     */
    TechRequirementsNotMet(79),
    /**
     * <code>MustLockdownUnitFirst = 80;</code>
     */
    MustLockdownUnitFirst(80),
    /**
     * <code>MustTargetUnit = 81;</code>
     */
    MustTargetUnit(81),
    /**
     * <code>MustTargetInventory = 82;</code>
     */
    MustTargetInventory(82),
    /**
     * <code>MustTargetVisibleUnit = 83;</code>
     */
    MustTargetVisibleUnit(83),
    /**
     * <code>MustTargetVisibleLocation = 84;</code>
     */
    MustTargetVisibleLocation(84),
    /**
     * <code>MustTargetWalkableLocation = 85;</code>
     */
    MustTargetWalkableLocation(85),
    /**
     * <code>MustTargetPawnableUnit = 86;</code>
     */
    MustTargetPawnableUnit(86),
    /**
     * <code>YouCantControlThatUnit = 87;</code>
     */
    YouCantControlThatUnit(87),
    /**
     * <code>YouCantIssueCommandsToThatUnit = 88;</code>
     */
    YouCantIssueCommandsToThatUnit(88),
    /**
     * <code>MustTargetResources = 89;</code>
     */
    MustTargetResources(89),
    /**
     * <code>RequiresHealTarget = 90;</code>
     */
    RequiresHealTarget(90),
    /**
     * <code>RequiresRepairTarget = 91;</code>
     */
    RequiresRepairTarget(91),
    /**
     * <code>NoItemsToDrop = 92;</code>
     */
    NoItemsToDrop(92),
    /**
     * <code>CantHoldAnyMoreItems = 93;</code>
     */
    CantHoldAnyMoreItems(93),
    /**
     * <code>CantHoldThat = 94;</code>
     */
    CantHoldThat(94),
    /**
     * <code>TargetHasNoInventory = 95;</code>
     */
    TargetHasNoInventory(95),
    /**
     * <code>CantDropThisItem = 96;</code>
     */
    CantDropThisItem(96),
    /**
     * <code>CantMoveThisItem = 97;</code>
     */
    CantMoveThisItem(97),
    /**
     * <code>CantPawnThisUnit = 98;</code>
     */
    CantPawnThisUnit(98),
    /**
     * <code>MustTargetCaster = 99;</code>
     */
    MustTargetCaster(99),
    /**
     * <code>CantTargetCaster = 100;</code>
     */
    CantTargetCaster(100),
    /**
     * <code>MustTargetOuter = 101;</code>
     */
    MustTargetOuter(101),
    /**
     * <code>CantTargetOuter = 102;</code>
     */
    CantTargetOuter(102),
    /**
     * <code>MustTargetYourOwnUnits = 103;</code>
     */
    MustTargetYourOwnUnits(103),
    /**
     * <code>CantTargetYourOwnUnits = 104;</code>
     */
    CantTargetYourOwnUnits(104),
    /**
     * <code>MustTargetFriendlyUnits = 105;</code>
     */
    MustTargetFriendlyUnits(105),
    /**
     * <code>CantTargetFriendlyUnits = 106;</code>
     */
    CantTargetFriendlyUnits(106),
    /**
     * <code>MustTargetNeutralUnits = 107;</code>
     */
    MustTargetNeutralUnits(107),
    /**
     * <code>CantTargetNeutralUnits = 108;</code>
     */
    CantTargetNeutralUnits(108),
    /**
     * <code>MustTargetEnemyUnits = 109;</code>
     */
    MustTargetEnemyUnits(109),
    /**
     * <code>CantTargetEnemyUnits = 110;</code>
     */
    CantTargetEnemyUnits(110),
    /**
     * <code>MustTargetAirUnits = 111;</code>
     */
    MustTargetAirUnits(111),
    /**
     * <code>CantTargetAirUnits = 112;</code>
     */
    CantTargetAirUnits(112),
    /**
     * <code>MustTargetGroundUnits = 113;</code>
     */
    MustTargetGroundUnits(113),
    /**
     * <code>CantTargetGroundUnits = 114;</code>
     */
    CantTargetGroundUnits(114),
    /**
     * <code>MustTargetStructures = 115;</code>
     */
    MustTargetStructures(115),
    /**
     * <code>CantTargetStructures = 116;</code>
     */
    CantTargetStructures(116),
    /**
     * <code>MustTargetLightUnits = 117;</code>
     */
    MustTargetLightUnits(117),
    /**
     * <code>CantTargetLightUnits = 118;</code>
     */
    CantTargetLightUnits(118),
    /**
     * <code>MustTargetArmoredUnits = 119;</code>
     */
    MustTargetArmoredUnits(119),
    /**
     * <code>CantTargetArmoredUnits = 120;</code>
     */
    CantTargetArmoredUnits(120),
    /**
     * <code>MustTargetBiologicalUnits = 121;</code>
     */
    MustTargetBiologicalUnits(121),
    /**
     * <code>CantTargetBiologicalUnits = 122;</code>
     */
    CantTargetBiologicalUnits(122),
    /**
     * <code>MustTargetHeroicUnits = 123;</code>
     */
    MustTargetHeroicUnits(123),
    /**
     * <code>CantTargetHeroicUnits = 124;</code>
     */
    CantTargetHeroicUnits(124),
    /**
     * <code>MustTargetRoboticUnits = 125;</code>
     */
    MustTargetRoboticUnits(125),
    /**
     * <code>CantTargetRoboticUnits = 126;</code>
     */
    CantTargetRoboticUnits(126),
    /**
     * <code>MustTargetMechanicalUnits = 127;</code>
     */
    MustTargetMechanicalUnits(127),
    /**
     * <code>CantTargetMechanicalUnits = 128;</code>
     */
    CantTargetMechanicalUnits(128),
    /**
     * <code>MustTargetPsionicUnits = 129;</code>
     */
    MustTargetPsionicUnits(129),
    /**
     * <code>CantTargetPsionicUnits = 130;</code>
     */
    CantTargetPsionicUnits(130),
    /**
     * <code>MustTargetMassiveUnits = 131;</code>
     */
    MustTargetMassiveUnits(131),
    /**
     * <code>CantTargetMassiveUnits = 132;</code>
     */
    CantTargetMassiveUnits(132),
    /**
     * <code>MustTargetMissile = 133;</code>
     */
    MustTargetMissile(133),
    /**
     * <code>CantTargetMissile = 134;</code>
     */
    CantTargetMissile(134),
    /**
     * <code>MustTargetWorkerUnits = 135;</code>
     */
    MustTargetWorkerUnits(135),
    /**
     * <code>CantTargetWorkerUnits = 136;</code>
     */
    CantTargetWorkerUnits(136),
    /**
     * <code>MustTargetEnergyCapableUnits = 137;</code>
     */
    MustTargetEnergyCapableUnits(137),
    /**
     * <code>CantTargetEnergyCapableUnits = 138;</code>
     */
    CantTargetEnergyCapableUnits(138),
    /**
     * <code>MustTargetShieldCapableUnits = 139;</code>
     */
    MustTargetShieldCapableUnits(139),
    /**
     * <code>CantTargetShieldCapableUnits = 140;</code>
     */
    CantTargetShieldCapableUnits(140),
    /**
     * <code>MustTargetFlyers = 141;</code>
     */
    MustTargetFlyers(141),
    /**
     * <code>CantTargetFlyers = 142;</code>
     */
    CantTargetFlyers(142),
    /**
     * <code>MustTargetBuriedUnits = 143;</code>
     */
    MustTargetBuriedUnits(143),
    /**
     * <code>CantTargetBuriedUnits = 144;</code>
     */
    CantTargetBuriedUnits(144),
    /**
     * <code>MustTargetCloakedUnits = 145;</code>
     */
    MustTargetCloakedUnits(145),
    /**
     * <code>CantTargetCloakedUnits = 146;</code>
     */
    CantTargetCloakedUnits(146),
    /**
     * <code>MustTargetUnitsInAStasisField = 147;</code>
     */
    MustTargetUnitsInAStasisField(147),
    /**
     * <code>CantTargetUnitsInAStasisField = 148;</code>
     */
    CantTargetUnitsInAStasisField(148),
    /**
     * <code>MustTargetUnderConstructionUnits = 149;</code>
     */
    MustTargetUnderConstructionUnits(149),
    /**
     * <code>CantTargetUnderConstructionUnits = 150;</code>
     */
    CantTargetUnderConstructionUnits(150),
    /**
     * <code>MustTargetDeadUnits = 151;</code>
     */
    MustTargetDeadUnits(151),
    /**
     * <code>CantTargetDeadUnits = 152;</code>
     */
    CantTargetDeadUnits(152),
    /**
     * <code>MustTargetRevivableUnits = 153;</code>
     */
    MustTargetRevivableUnits(153),
    /**
     * <code>CantTargetRevivableUnits = 154;</code>
     */
    CantTargetRevivableUnits(154),
    /**
     * <code>MustTargetHiddenUnits = 155;</code>
     */
    MustTargetHiddenUnits(155),
    /**
     * <code>CantTargetHiddenUnits = 156;</code>
     */
    CantTargetHiddenUnits(156),
    /**
     * <code>CantRechargeOtherPlayersUnits = 157;</code>
     */
    CantRechargeOtherPlayersUnits(157),
    /**
     * <code>MustTargetHallucinations = 158;</code>
     */
    MustTargetHallucinations(158),
    /**
     * <code>CantTargetHallucinations = 159;</code>
     */
    CantTargetHallucinations(159),
    /**
     * <code>MustTargetInvulnerableUnits = 160;</code>
     */
    MustTargetInvulnerableUnits(160),
    /**
     * <code>CantTargetInvulnerableUnits = 161;</code>
     */
    CantTargetInvulnerableUnits(161),
    /**
     * <code>MustTargetDetectedUnits = 162;</code>
     */
    MustTargetDetectedUnits(162),
    /**
     * <code>CantTargetDetectedUnits = 163;</code>
     */
    CantTargetDetectedUnits(163),
    /**
     * <code>CantTargetUnitWithEnergy = 164;</code>
     */
    CantTargetUnitWithEnergy(164),
    /**
     * <code>CantTargetUnitWithShields = 165;</code>
     */
    CantTargetUnitWithShields(165),
    /**
     * <code>MustTargetUncommandableUnits = 166;</code>
     */
    MustTargetUncommandableUnits(166),
    /**
     * <code>CantTargetUncommandableUnits = 167;</code>
     */
    CantTargetUncommandableUnits(167),
    /**
     * <code>MustTargetPreventDefeatUnits = 168;</code>
     */
    MustTargetPreventDefeatUnits(168),
    /**
     * <code>CantTargetPreventDefeatUnits = 169;</code>
     */
    CantTargetPreventDefeatUnits(169),
    /**
     * <code>MustTargetPreventRevealUnits = 170;</code>
     */
    MustTargetPreventRevealUnits(170),
    /**
     * <code>CantTargetPreventRevealUnits = 171;</code>
     */
    CantTargetPreventRevealUnits(171),
    /**
     * <code>MustTargetPassiveUnits = 172;</code>
     */
    MustTargetPassiveUnits(172),
    /**
     * <code>CantTargetPassiveUnits = 173;</code>
     */
    CantTargetPassiveUnits(173),
    /**
     * <code>MustTargetStunnedUnits = 174;</code>
     */
    MustTargetStunnedUnits(174),
    /**
     * <code>CantTargetStunnedUnits = 175;</code>
     */
    CantTargetStunnedUnits(175),
    /**
     * <code>MustTargetSummonedUnits = 176;</code>
     */
    MustTargetSummonedUnits(176),
    /**
     * <code>CantTargetSummonedUnits = 177;</code>
     */
    CantTargetSummonedUnits(177),
    /**
     * <code>MustTargetUser1 = 178;</code>
     */
    MustTargetUser1(178),
    /**
     * <code>CantTargetUser1 = 179;</code>
     */
    CantTargetUser1(179),
    /**
     * <code>MustTargetUnstoppableUnits = 180;</code>
     */
    MustTargetUnstoppableUnits(180),
    /**
     * <code>CantTargetUnstoppableUnits = 181;</code>
     */
    CantTargetUnstoppableUnits(181),
    /**
     * <code>MustTargetResistantUnits = 182;</code>
     */
    MustTargetResistantUnits(182),
    /**
     * <code>CantTargetResistantUnits = 183;</code>
     */
    CantTargetResistantUnits(183),
    /**
     * <code>MustTargetDazedUnits = 184;</code>
     */
    MustTargetDazedUnits(184),
    /**
     * <code>CantTargetDazedUnits = 185;</code>
     */
    CantTargetDazedUnits(185),
    /**
     * <code>CantLockdown = 186;</code>
     */
    CantLockdown(186),
    /**
     * <code>CantMindControl = 187;</code>
     */
    CantMindControl(187),
    /**
     * <code>MustTargetDestructibles = 188;</code>
     */
    MustTargetDestructibles(188),
    /**
     * <code>CantTargetDestructibles = 189;</code>
     */
    CantTargetDestructibles(189),
    /**
     * <code>MustTargetItems = 190;</code>
     */
    MustTargetItems(190),
    /**
     * <code>CantTargetItems = 191;</code>
     */
    CantTargetItems(191),
    /**
     * <code>NoCalldownAvailable = 192;</code>
     */
    NoCalldownAvailable(192),
    /**
     * <code>WaypointListFull = 193;</code>
     */
    WaypointListFull(193),
    /**
     * <code>MustTargetRace = 194;</code>
     */
    MustTargetRace(194),
    /**
     * <code>CantTargetRace = 195;</code>
     */
    CantTargetRace(195),
    /**
     * <code>MustTargetSimilarUnits = 196;</code>
     */
    MustTargetSimilarUnits(196),
    /**
     * <code>CantTargetSimilarUnits = 197;</code>
     */
    CantTargetSimilarUnits(197),
    /**
     * <code>CantFindEnoughTargets = 198;</code>
     */
    CantFindEnoughTargets(198),
    /**
     * <code>AlreadySpawningLarva = 199;</code>
     */
    AlreadySpawningLarva(199),
    /**
     * <code>CantTargetExhaustedResources = 200;</code>
     */
    CantTargetExhaustedResources(200),
    /**
     * <code>CantUseMinimap = 201;</code>
     */
    CantUseMinimap(201),
    /**
     * <code>CantUseInfoPanel = 202;</code>
     */
    CantUseInfoPanel(202),
    /**
     * <code>OrderQueueIsFull = 203;</code>
     */
    OrderQueueIsFull(203),
    /**
     * <code>CantHarvestThatResource = 204;</code>
     */
    CantHarvestThatResource(204),
    /**
     * <code>HarvestersNotRequired = 205;</code>
     */
    HarvestersNotRequired(205),
    /**
     * <code>AlreadyTargeted = 206;</code>
     */
    AlreadyTargeted(206),
    /**
     * <code>CantAttackWeaponsDisabled = 207;</code>
     */
    CantAttackWeaponsDisabled(207),
    /**
     * <code>CouldntReachTarget = 208;</code>
     */
    CouldntReachTarget(208),
    /**
     * <code>TargetIsOutOfRange = 209;</code>
     */
    TargetIsOutOfRange(209),
    /**
     * <code>TargetIsTooClose = 210;</code>
     */
    TargetIsTooClose(210),
    /**
     * <code>TargetIsOutOfArc = 211;</code>
     */
    TargetIsOutOfArc(211),
    /**
     * <code>CantFindTeleportLocation = 212;</code>
     */
    CantFindTeleportLocation(212),
    /**
     * <code>InvalidItemClass = 213;</code>
     */
    InvalidItemClass(213),
    /**
     * <code>CantFindCancelOrder = 214;</code>
     */
    CantFindCancelOrder(214),
    ;

    /**
     * <code>Success = 1;</code>
     */
    public static final int Success_VALUE = 1;
    /**
     * <code>NotSupported = 2;</code>
     */
    public static final int NotSupported_VALUE = 2;
    /**
     * <code>Error = 3;</code>
     */
    public static final int Error_VALUE = 3;
    /**
     * <code>CantQueueThatOrder = 4;</code>
     */
    public static final int CantQueueThatOrder_VALUE = 4;
    /**
     * <code>Retry = 5;</code>
     */
    public static final int Retry_VALUE = 5;
    /**
     * <code>Cooldown = 6;</code>
     */
    public static final int Cooldown_VALUE = 6;
    /**
     * <code>QueueIsFull = 7;</code>
     */
    public static final int QueueIsFull_VALUE = 7;
    /**
     * <code>RallyQueueIsFull = 8;</code>
     */
    public static final int RallyQueueIsFull_VALUE = 8;
    /**
     * <code>NotEnoughMinerals = 9;</code>
     */
    public static final int NotEnoughMinerals_VALUE = 9;
    /**
     * <code>NotEnoughVespene = 10;</code>
     */
    public static final int NotEnoughVespene_VALUE = 10;
    /**
     * <code>NotEnoughTerrazine = 11;</code>
     */
    public static final int NotEnoughTerrazine_VALUE = 11;
    /**
     * <code>NotEnoughCustom = 12;</code>
     */
    public static final int NotEnoughCustom_VALUE = 12;
    /**
     * <code>NotEnoughFood = 13;</code>
     */
    public static final int NotEnoughFood_VALUE = 13;
    /**
     * <code>FoodUsageImpossible = 14;</code>
     */
    public static final int FoodUsageImpossible_VALUE = 14;
    /**
     * <code>NotEnoughLife = 15;</code>
     */
    public static final int NotEnoughLife_VALUE = 15;
    /**
     * <code>NotEnoughShields = 16;</code>
     */
    public static final int NotEnoughShields_VALUE = 16;
    /**
     * <code>NotEnoughEnergy = 17;</code>
     */
    public static final int NotEnoughEnergy_VALUE = 17;
    /**
     * <code>LifeSuppressed = 18;</code>
     */
    public static final int LifeSuppressed_VALUE = 18;
    /**
     * <code>ShieldsSuppressed = 19;</code>
     */
    public static final int ShieldsSuppressed_VALUE = 19;
    /**
     * <code>EnergySuppressed = 20;</code>
     */
    public static final int EnergySuppressed_VALUE = 20;
    /**
     * <code>NotEnoughCharges = 21;</code>
     */
    public static final int NotEnoughCharges_VALUE = 21;
    /**
     * <code>CantAddMoreCharges = 22;</code>
     */
    public static final int CantAddMoreCharges_VALUE = 22;
    /**
     * <code>TooMuchMinerals = 23;</code>
     */
    public static final int TooMuchMinerals_VALUE = 23;
    /**
     * <code>TooMuchVespene = 24;</code>
     */
    public static final int TooMuchVespene_VALUE = 24;
    /**
     * <code>TooMuchTerrazine = 25;</code>
     */
    public static final int TooMuchTerrazine_VALUE = 25;
    /**
     * <code>TooMuchCustom = 26;</code>
     */
    public static final int TooMuchCustom_VALUE = 26;
    /**
     * <code>TooMuchFood = 27;</code>
     */
    public static final int TooMuchFood_VALUE = 27;
    /**
     * <code>TooMuchLife = 28;</code>
     */
    public static final int TooMuchLife_VALUE = 28;
    /**
     * <code>TooMuchShields = 29;</code>
     */
    public static final int TooMuchShields_VALUE = 29;
    /**
     * <code>TooMuchEnergy = 30;</code>
     */
    public static final int TooMuchEnergy_VALUE = 30;
    /**
     * <code>MustTargetUnitWithLife = 31;</code>
     */
    public static final int MustTargetUnitWithLife_VALUE = 31;
    /**
     * <code>MustTargetUnitWithShields = 32;</code>
     */
    public static final int MustTargetUnitWithShields_VALUE = 32;
    /**
     * <code>MustTargetUnitWithEnergy = 33;</code>
     */
    public static final int MustTargetUnitWithEnergy_VALUE = 33;
    /**
     * <code>CantTrade = 34;</code>
     */
    public static final int CantTrade_VALUE = 34;
    /**
     * <code>CantSpend = 35;</code>
     */
    public static final int CantSpend_VALUE = 35;
    /**
     * <code>CantTargetThatUnit = 36;</code>
     */
    public static final int CantTargetThatUnit_VALUE = 36;
    /**
     * <code>CouldntAllocateUnit = 37;</code>
     */
    public static final int CouldntAllocateUnit_VALUE = 37;
    /**
     * <code>UnitCantMove = 38;</code>
     */
    public static final int UnitCantMove_VALUE = 38;
    /**
     * <code>TransportIsHoldingPosition = 39;</code>
     */
    public static final int TransportIsHoldingPosition_VALUE = 39;
    /**
     * <code>BuildTechRequirementsNotMet = 40;</code>
     */
    public static final int BuildTechRequirementsNotMet_VALUE = 40;
    /**
     * <code>CantFindPlacementLocation = 41;</code>
     */
    public static final int CantFindPlacementLocation_VALUE = 41;
    /**
     * <code>CantBuildOnThat = 42;</code>
     */
    public static final int CantBuildOnThat_VALUE = 42;
    /**
     * <code>CantBuildTooCloseToDropOff = 43;</code>
     */
    public static final int CantBuildTooCloseToDropOff_VALUE = 43;
    /**
     * <code>CantBuildLocationInvalid = 44;</code>
     */
    public static final int CantBuildLocationInvalid_VALUE = 44;
    /**
     * <code>CantSeeBuildLocation = 45;</code>
     */
    public static final int CantSeeBuildLocation_VALUE = 45;
    /**
     * <code>CantBuildTooCloseToCreepSource = 46;</code>
     */
    public static final int CantBuildTooCloseToCreepSource_VALUE = 46;
    /**
     * <code>CantBuildTooCloseToResources = 47;</code>
     */
    public static final int CantBuildTooCloseToResources_VALUE = 47;
    /**
     * <code>CantBuildTooFarFromWater = 48;</code>
     */
    public static final int CantBuildTooFarFromWater_VALUE = 48;
    /**
     * <code>CantBuildTooFarFromCreepSource = 49;</code>
     */
    public static final int CantBuildTooFarFromCreepSource_VALUE = 49;
    /**
     * <code>CantBuildTooFarFromBuildPowerSource = 50;</code>
     */
    public static final int CantBuildTooFarFromBuildPowerSource_VALUE = 50;
    /**
     * <code>CantBuildOnDenseTerrain = 51;</code>
     */
    public static final int CantBuildOnDenseTerrain_VALUE = 51;
    /**
     * <code>CantTrainTooFarFromTrainPowerSource = 52;</code>
     */
    public static final int CantTrainTooFarFromTrainPowerSource_VALUE = 52;
    /**
     * <code>CantLandLocationInvalid = 53;</code>
     */
    public static final int CantLandLocationInvalid_VALUE = 53;
    /**
     * <code>CantSeeLandLocation = 54;</code>
     */
    public static final int CantSeeLandLocation_VALUE = 54;
    /**
     * <code>CantLandTooCloseToCreepSource = 55;</code>
     */
    public static final int CantLandTooCloseToCreepSource_VALUE = 55;
    /**
     * <code>CantLandTooCloseToResources = 56;</code>
     */
    public static final int CantLandTooCloseToResources_VALUE = 56;
    /**
     * <code>CantLandTooFarFromWater = 57;</code>
     */
    public static final int CantLandTooFarFromWater_VALUE = 57;
    /**
     * <code>CantLandTooFarFromCreepSource = 58;</code>
     */
    public static final int CantLandTooFarFromCreepSource_VALUE = 58;
    /**
     * <code>CantLandTooFarFromBuildPowerSource = 59;</code>
     */
    public static final int CantLandTooFarFromBuildPowerSource_VALUE = 59;
    /**
     * <code>CantLandTooFarFromTrainPowerSource = 60;</code>
     */
    public static final int CantLandTooFarFromTrainPowerSource_VALUE = 60;
    /**
     * <code>CantLandOnDenseTerrain = 61;</code>
     */
    public static final int CantLandOnDenseTerrain_VALUE = 61;
    /**
     * <code>AddOnTooFarFromBuilding = 62;</code>
     */
    public static final int AddOnTooFarFromBuilding_VALUE = 62;
    /**
     * <code>MustBuildRefineryFirst = 63;</code>
     */
    public static final int MustBuildRefineryFirst_VALUE = 63;
    /**
     * <code>BuildingIsUnderConstruction = 64;</code>
     */
    public static final int BuildingIsUnderConstruction_VALUE = 64;
    /**
     * <code>CantFindDropOff = 65;</code>
     */
    public static final int CantFindDropOff_VALUE = 65;
    /**
     * <code>CantLoadOtherPlayersUnits = 66;</code>
     */
    public static final int CantLoadOtherPlayersUnits_VALUE = 66;
    /**
     * <code>NotEnoughRoomToLoadUnit = 67;</code>
     */
    public static final int NotEnoughRoomToLoadUnit_VALUE = 67;
    /**
     * <code>CantUnloadUnitsThere = 68;</code>
     */
    public static final int CantUnloadUnitsThere_VALUE = 68;
    /**
     * <code>CantWarpInUnitsThere = 69;</code>
     */
    public static final int CantWarpInUnitsThere_VALUE = 69;
    /**
     * <code>CantLoadImmobileUnits = 70;</code>
     */
    public static final int CantLoadImmobileUnits_VALUE = 70;
    /**
     * <code>CantRechargeImmobileUnits = 71;</code>
     */
    public static final int CantRechargeImmobileUnits_VALUE = 71;
    /**
     * <code>CantRechargeUnderConstructionUnits = 72;</code>
     */
    public static final int CantRechargeUnderConstructionUnits_VALUE = 72;
    /**
     * <code>CantLoadThatUnit = 73;</code>
     */
    public static final int CantLoadThatUnit_VALUE = 73;
    /**
     * <code>NoCargoToUnload = 74;</code>
     */
    public static final int NoCargoToUnload_VALUE = 74;
    /**
     * <code>LoadAllNoTargetsFound = 75;</code>
     */
    public static final int LoadAllNoTargetsFound_VALUE = 75;
    /**
     * <code>NotWhileOccupied = 76;</code>
     */
    public static final int NotWhileOccupied_VALUE = 76;
    /**
     * <code>CantAttackWithoutAmmo = 77;</code>
     */
    public static final int CantAttackWithoutAmmo_VALUE = 77;
    /**
     * <code>CantHoldAnyMoreAmmo = 78;</code>
     */
    public static final int CantHoldAnyMoreAmmo_VALUE = 78;
    /**
     * <code>TechRequirementsNotMet = 79;</code>
     */
    public static final int TechRequirementsNotMet_VALUE = 79;
    /**
     * <code>MustLockdownUnitFirst = 80;</code>
     */
    public static final int MustLockdownUnitFirst_VALUE = 80;
    /**
     * <code>MustTargetUnit = 81;</code>
     */
    public static final int MustTargetUnit_VALUE = 81;
    /**
     * <code>MustTargetInventory = 82;</code>
     */
    public static final int MustTargetInventory_VALUE = 82;
    /**
     * <code>MustTargetVisibleUnit = 83;</code>
     */
    public static final int MustTargetVisibleUnit_VALUE = 83;
    /**
     * <code>MustTargetVisibleLocation = 84;</code>
     */
    public static final int MustTargetVisibleLocation_VALUE = 84;
    /**
     * <code>MustTargetWalkableLocation = 85;</code>
     */
    public static final int MustTargetWalkableLocation_VALUE = 85;
    /**
     * <code>MustTargetPawnableUnit = 86;</code>
     */
    public static final int MustTargetPawnableUnit_VALUE = 86;
    /**
     * <code>YouCantControlThatUnit = 87;</code>
     */
    public static final int YouCantControlThatUnit_VALUE = 87;
    /**
     * <code>YouCantIssueCommandsToThatUnit = 88;</code>
     */
    public static final int YouCantIssueCommandsToThatUnit_VALUE = 88;
    /**
     * <code>MustTargetResources = 89;</code>
     */
    public static final int MustTargetResources_VALUE = 89;
    /**
     * <code>RequiresHealTarget = 90;</code>
     */
    public static final int RequiresHealTarget_VALUE = 90;
    /**
     * <code>RequiresRepairTarget = 91;</code>
     */
    public static final int RequiresRepairTarget_VALUE = 91;
    /**
     * <code>NoItemsToDrop = 92;</code>
     */
    public static final int NoItemsToDrop_VALUE = 92;
    /**
     * <code>CantHoldAnyMoreItems = 93;</code>
     */
    public static final int CantHoldAnyMoreItems_VALUE = 93;
    /**
     * <code>CantHoldThat = 94;</code>
     */
    public static final int CantHoldThat_VALUE = 94;
    /**
     * <code>TargetHasNoInventory = 95;</code>
     */
    public static final int TargetHasNoInventory_VALUE = 95;
    /**
     * <code>CantDropThisItem = 96;</code>
     */
    public static final int CantDropThisItem_VALUE = 96;
    /**
     * <code>CantMoveThisItem = 97;</code>
     */
    public static final int CantMoveThisItem_VALUE = 97;
    /**
     * <code>CantPawnThisUnit = 98;</code>
     */
    public static final int CantPawnThisUnit_VALUE = 98;
    /**
     * <code>MustTargetCaster = 99;</code>
     */
    public static final int MustTargetCaster_VALUE = 99;
    /**
     * <code>CantTargetCaster = 100;</code>
     */
    public static final int CantTargetCaster_VALUE = 100;
    /**
     * <code>MustTargetOuter = 101;</code>
     */
    public static final int MustTargetOuter_VALUE = 101;
    /**
     * <code>CantTargetOuter = 102;</code>
     */
    public static final int CantTargetOuter_VALUE = 102;
    /**
     * <code>MustTargetYourOwnUnits = 103;</code>
     */
    public static final int MustTargetYourOwnUnits_VALUE = 103;
    /**
     * <code>CantTargetYourOwnUnits = 104;</code>
     */
    public static final int CantTargetYourOwnUnits_VALUE = 104;
    /**
     * <code>MustTargetFriendlyUnits = 105;</code>
     */
    public static final int MustTargetFriendlyUnits_VALUE = 105;
    /**
     * <code>CantTargetFriendlyUnits = 106;</code>
     */
    public static final int CantTargetFriendlyUnits_VALUE = 106;
    /**
     * <code>MustTargetNeutralUnits = 107;</code>
     */
    public static final int MustTargetNeutralUnits_VALUE = 107;
    /**
     * <code>CantTargetNeutralUnits = 108;</code>
     */
    public static final int CantTargetNeutralUnits_VALUE = 108;
    /**
     * <code>MustTargetEnemyUnits = 109;</code>
     */
    public static final int MustTargetEnemyUnits_VALUE = 109;
    /**
     * <code>CantTargetEnemyUnits = 110;</code>
     */
    public static final int CantTargetEnemyUnits_VALUE = 110;
    /**
     * <code>MustTargetAirUnits = 111;</code>
     */
    public static final int MustTargetAirUnits_VALUE = 111;
    /**
     * <code>CantTargetAirUnits = 112;</code>
     */
    public static final int CantTargetAirUnits_VALUE = 112;
    /**
     * <code>MustTargetGroundUnits = 113;</code>
     */
    public static final int MustTargetGroundUnits_VALUE = 113;
    /**
     * <code>CantTargetGroundUnits = 114;</code>
     */
    public static final int CantTargetGroundUnits_VALUE = 114;
    /**
     * <code>MustTargetStructures = 115;</code>
     */
    public static final int MustTargetStructures_VALUE = 115;
    /**
     * <code>CantTargetStructures = 116;</code>
     */
    public static final int CantTargetStructures_VALUE = 116;
    /**
     * <code>MustTargetLightUnits = 117;</code>
     */
    public static final int MustTargetLightUnits_VALUE = 117;
    /**
     * <code>CantTargetLightUnits = 118;</code>
     */
    public static final int CantTargetLightUnits_VALUE = 118;
    /**
     * <code>MustTargetArmoredUnits = 119;</code>
     */
    public static final int MustTargetArmoredUnits_VALUE = 119;
    /**
     * <code>CantTargetArmoredUnits = 120;</code>
     */
    public static final int CantTargetArmoredUnits_VALUE = 120;
    /**
     * <code>MustTargetBiologicalUnits = 121;</code>
     */
    public static final int MustTargetBiologicalUnits_VALUE = 121;
    /**
     * <code>CantTargetBiologicalUnits = 122;</code>
     */
    public static final int CantTargetBiologicalUnits_VALUE = 122;
    /**
     * <code>MustTargetHeroicUnits = 123;</code>
     */
    public static final int MustTargetHeroicUnits_VALUE = 123;
    /**
     * <code>CantTargetHeroicUnits = 124;</code>
     */
    public static final int CantTargetHeroicUnits_VALUE = 124;
    /**
     * <code>MustTargetRoboticUnits = 125;</code>
     */
    public static final int MustTargetRoboticUnits_VALUE = 125;
    /**
     * <code>CantTargetRoboticUnits = 126;</code>
     */
    public static final int CantTargetRoboticUnits_VALUE = 126;
    /**
     * <code>MustTargetMechanicalUnits = 127;</code>
     */
    public static final int MustTargetMechanicalUnits_VALUE = 127;
    /**
     * <code>CantTargetMechanicalUnits = 128;</code>
     */
    public static final int CantTargetMechanicalUnits_VALUE = 128;
    /**
     * <code>MustTargetPsionicUnits = 129;</code>
     */
    public static final int MustTargetPsionicUnits_VALUE = 129;
    /**
     * <code>CantTargetPsionicUnits = 130;</code>
     */
    public static final int CantTargetPsionicUnits_VALUE = 130;
    /**
     * <code>MustTargetMassiveUnits = 131;</code>
     */
    public static final int MustTargetMassiveUnits_VALUE = 131;
    /**
     * <code>CantTargetMassiveUnits = 132;</code>
     */
    public static final int CantTargetMassiveUnits_VALUE = 132;
    /**
     * <code>MustTargetMissile = 133;</code>
     */
    public static final int MustTargetMissile_VALUE = 133;
    /**
     * <code>CantTargetMissile = 134;</code>
     */
    public static final int CantTargetMissile_VALUE = 134;
    /**
     * <code>MustTargetWorkerUnits = 135;</code>
     */
    public static final int MustTargetWorkerUnits_VALUE = 135;
    /**
     * <code>CantTargetWorkerUnits = 136;</code>
     */
    public static final int CantTargetWorkerUnits_VALUE = 136;
    /**
     * <code>MustTargetEnergyCapableUnits = 137;</code>
     */
    public static final int MustTargetEnergyCapableUnits_VALUE = 137;
    /**
     * <code>CantTargetEnergyCapableUnits = 138;</code>
     */
    public static final int CantTargetEnergyCapableUnits_VALUE = 138;
    /**
     * <code>MustTargetShieldCapableUnits = 139;</code>
     */
    public static final int MustTargetShieldCapableUnits_VALUE = 139;
    /**
     * <code>CantTargetShieldCapableUnits = 140;</code>
     */
    public static final int CantTargetShieldCapableUnits_VALUE = 140;
    /**
     * <code>MustTargetFlyers = 141;</code>
     */
    public static final int MustTargetFlyers_VALUE = 141;
    /**
     * <code>CantTargetFlyers = 142;</code>
     */
    public static final int CantTargetFlyers_VALUE = 142;
    /**
     * <code>MustTargetBuriedUnits = 143;</code>
     */
    public static final int MustTargetBuriedUnits_VALUE = 143;
    /**
     * <code>CantTargetBuriedUnits = 144;</code>
     */
    public static final int CantTargetBuriedUnits_VALUE = 144;
    /**
     * <code>MustTargetCloakedUnits = 145;</code>
     */
    public static final int MustTargetCloakedUnits_VALUE = 145;
    /**
     * <code>CantTargetCloakedUnits = 146;</code>
     */
    public static final int CantTargetCloakedUnits_VALUE = 146;
    /**
     * <code>MustTargetUnitsInAStasisField = 147;</code>
     */
    public static final int MustTargetUnitsInAStasisField_VALUE = 147;
    /**
     * <code>CantTargetUnitsInAStasisField = 148;</code>
     */
    public static final int CantTargetUnitsInAStasisField_VALUE = 148;
    /**
     * <code>MustTargetUnderConstructionUnits = 149;</code>
     */
    public static final int MustTargetUnderConstructionUnits_VALUE = 149;
    /**
     * <code>CantTargetUnderConstructionUnits = 150;</code>
     */
    public static final int CantTargetUnderConstructionUnits_VALUE = 150;
    /**
     * <code>MustTargetDeadUnits = 151;</code>
     */
    public static final int MustTargetDeadUnits_VALUE = 151;
    /**
     * <code>CantTargetDeadUnits = 152;</code>
     */
    public static final int CantTargetDeadUnits_VALUE = 152;
    /**
     * <code>MustTargetRevivableUnits = 153;</code>
     */
    public static final int MustTargetRevivableUnits_VALUE = 153;
    /**
     * <code>CantTargetRevivableUnits = 154;</code>
     */
    public static final int CantTargetRevivableUnits_VALUE = 154;
    /**
     * <code>MustTargetHiddenUnits = 155;</code>
     */
    public static final int MustTargetHiddenUnits_VALUE = 155;
    /**
     * <code>CantTargetHiddenUnits = 156;</code>
     */
    public static final int CantTargetHiddenUnits_VALUE = 156;
    /**
     * <code>CantRechargeOtherPlayersUnits = 157;</code>
     */
    public static final int CantRechargeOtherPlayersUnits_VALUE = 157;
    /**
     * <code>MustTargetHallucinations = 158;</code>
     */
    public static final int MustTargetHallucinations_VALUE = 158;
    /**
     * <code>CantTargetHallucinations = 159;</code>
     */
    public static final int CantTargetHallucinations_VALUE = 159;
    /**
     * <code>MustTargetInvulnerableUnits = 160;</code>
     */
    public static final int MustTargetInvulnerableUnits_VALUE = 160;
    /**
     * <code>CantTargetInvulnerableUnits = 161;</code>
     */
    public static final int CantTargetInvulnerableUnits_VALUE = 161;
    /**
     * <code>MustTargetDetectedUnits = 162;</code>
     */
    public static final int MustTargetDetectedUnits_VALUE = 162;
    /**
     * <code>CantTargetDetectedUnits = 163;</code>
     */
    public static final int CantTargetDetectedUnits_VALUE = 163;
    /**
     * <code>CantTargetUnitWithEnergy = 164;</code>
     */
    public static final int CantTargetUnitWithEnergy_VALUE = 164;
    /**
     * <code>CantTargetUnitWithShields = 165;</code>
     */
    public static final int CantTargetUnitWithShields_VALUE = 165;
    /**
     * <code>MustTargetUncommandableUnits = 166;</code>
     */
    public static final int MustTargetUncommandableUnits_VALUE = 166;
    /**
     * <code>CantTargetUncommandableUnits = 167;</code>
     */
    public static final int CantTargetUncommandableUnits_VALUE = 167;
    /**
     * <code>MustTargetPreventDefeatUnits = 168;</code>
     */
    public static final int MustTargetPreventDefeatUnits_VALUE = 168;
    /**
     * <code>CantTargetPreventDefeatUnits = 169;</code>
     */
    public static final int CantTargetPreventDefeatUnits_VALUE = 169;
    /**
     * <code>MustTargetPreventRevealUnits = 170;</code>
     */
    public static final int MustTargetPreventRevealUnits_VALUE = 170;
    /**
     * <code>CantTargetPreventRevealUnits = 171;</code>
     */
    public static final int CantTargetPreventRevealUnits_VALUE = 171;
    /**
     * <code>MustTargetPassiveUnits = 172;</code>
     */
    public static final int MustTargetPassiveUnits_VALUE = 172;
    /**
     * <code>CantTargetPassiveUnits = 173;</code>
     */
    public static final int CantTargetPassiveUnits_VALUE = 173;
    /**
     * <code>MustTargetStunnedUnits = 174;</code>
     */
    public static final int MustTargetStunnedUnits_VALUE = 174;
    /**
     * <code>CantTargetStunnedUnits = 175;</code>
     */
    public static final int CantTargetStunnedUnits_VALUE = 175;
    /**
     * <code>MustTargetSummonedUnits = 176;</code>
     */
    public static final int MustTargetSummonedUnits_VALUE = 176;
    /**
     * <code>CantTargetSummonedUnits = 177;</code>
     */
    public static final int CantTargetSummonedUnits_VALUE = 177;
    /**
     * <code>MustTargetUser1 = 178;</code>
     */
    public static final int MustTargetUser1_VALUE = 178;
    /**
     * <code>CantTargetUser1 = 179;</code>
     */
    public static final int CantTargetUser1_VALUE = 179;
    /**
     * <code>MustTargetUnstoppableUnits = 180;</code>
     */
    public static final int MustTargetUnstoppableUnits_VALUE = 180;
    /**
     * <code>CantTargetUnstoppableUnits = 181;</code>
     */
    public static final int CantTargetUnstoppableUnits_VALUE = 181;
    /**
     * <code>MustTargetResistantUnits = 182;</code>
     */
    public static final int MustTargetResistantUnits_VALUE = 182;
    /**
     * <code>CantTargetResistantUnits = 183;</code>
     */
    public static final int CantTargetResistantUnits_VALUE = 183;
    /**
     * <code>MustTargetDazedUnits = 184;</code>
     */
    public static final int MustTargetDazedUnits_VALUE = 184;
    /**
     * <code>CantTargetDazedUnits = 185;</code>
     */
    public static final int CantTargetDazedUnits_VALUE = 185;
    /**
     * <code>CantLockdown = 186;</code>
     */
    public static final int CantLockdown_VALUE = 186;
    /**
     * <code>CantMindControl = 187;</code>
     */
    public static final int CantMindControl_VALUE = 187;
    /**
     * <code>MustTargetDestructibles = 188;</code>
     */
    public static final int MustTargetDestructibles_VALUE = 188;
    /**
     * <code>CantTargetDestructibles = 189;</code>
     */
    public static final int CantTargetDestructibles_VALUE = 189;
    /**
     * <code>MustTargetItems = 190;</code>
     */
    public static final int MustTargetItems_VALUE = 190;
    /**
     * <code>CantTargetItems = 191;</code>
     */
    public static final int CantTargetItems_VALUE = 191;
    /**
     * <code>NoCalldownAvailable = 192;</code>
     */
    public static final int NoCalldownAvailable_VALUE = 192;
    /**
     * <code>WaypointListFull = 193;</code>
     */
    public static final int WaypointListFull_VALUE = 193;
    /**
     * <code>MustTargetRace = 194;</code>
     */
    public static final int MustTargetRace_VALUE = 194;
    /**
     * <code>CantTargetRace = 195;</code>
     */
    public static final int CantTargetRace_VALUE = 195;
    /**
     * <code>MustTargetSimilarUnits = 196;</code>
     */
    public static final int MustTargetSimilarUnits_VALUE = 196;
    /**
     * <code>CantTargetSimilarUnits = 197;</code>
     */
    public static final int CantTargetSimilarUnits_VALUE = 197;
    /**
     * <code>CantFindEnoughTargets = 198;</code>
     */
    public static final int CantFindEnoughTargets_VALUE = 198;
    /**
     * <code>AlreadySpawningLarva = 199;</code>
     */
    public static final int AlreadySpawningLarva_VALUE = 199;
    /**
     * <code>CantTargetExhaustedResources = 200;</code>
     */
    public static final int CantTargetExhaustedResources_VALUE = 200;
    /**
     * <code>CantUseMinimap = 201;</code>
     */
    public static final int CantUseMinimap_VALUE = 201;
    /**
     * <code>CantUseInfoPanel = 202;</code>
     */
    public static final int CantUseInfoPanel_VALUE = 202;
    /**
     * <code>OrderQueueIsFull = 203;</code>
     */
    public static final int OrderQueueIsFull_VALUE = 203;
    /**
     * <code>CantHarvestThatResource = 204;</code>
     */
    public static final int CantHarvestThatResource_VALUE = 204;
    /**
     * <code>HarvestersNotRequired = 205;</code>
     */
    public static final int HarvestersNotRequired_VALUE = 205;
    /**
     * <code>AlreadyTargeted = 206;</code>
     */
    public static final int AlreadyTargeted_VALUE = 206;
    /**
     * <code>CantAttackWeaponsDisabled = 207;</code>
     */
    public static final int CantAttackWeaponsDisabled_VALUE = 207;
    /**
     * <code>CouldntReachTarget = 208;</code>
     */
    public static final int CouldntReachTarget_VALUE = 208;
    /**
     * <code>TargetIsOutOfRange = 209;</code>
     */
    public static final int TargetIsOutOfRange_VALUE = 209;
    /**
     * <code>TargetIsTooClose = 210;</code>
     */
    public static final int TargetIsTooClose_VALUE = 210;
    /**
     * <code>TargetIsOutOfArc = 211;</code>
     */
    public static final int TargetIsOutOfArc_VALUE = 211;
    /**
     * <code>CantFindTeleportLocation = 212;</code>
     */
    public static final int CantFindTeleportLocation_VALUE = 212;
    /**
     * <code>InvalidItemClass = 213;</code>
     */
    public static final int InvalidItemClass_VALUE = 213;
    /**
     * <code>CantFindCancelOrder = 214;</code>
     */
    public static final int CantFindCancelOrder_VALUE = 214;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ActionResult valueOf(int value) {
      return forNumber(value);
    }

    public static ActionResult forNumber(int value) {
      switch (value) {
        case 1: return Success;
        case 2: return NotSupported;
        case 3: return Error;
        case 4: return CantQueueThatOrder;
        case 5: return Retry;
        case 6: return Cooldown;
        case 7: return QueueIsFull;
        case 8: return RallyQueueIsFull;
        case 9: return NotEnoughMinerals;
        case 10: return NotEnoughVespene;
        case 11: return NotEnoughTerrazine;
        case 12: return NotEnoughCustom;
        case 13: return NotEnoughFood;
        case 14: return FoodUsageImpossible;
        case 15: return NotEnoughLife;
        case 16: return NotEnoughShields;
        case 17: return NotEnoughEnergy;
        case 18: return LifeSuppressed;
        case 19: return ShieldsSuppressed;
        case 20: return EnergySuppressed;
        case 21: return NotEnoughCharges;
        case 22: return CantAddMoreCharges;
        case 23: return TooMuchMinerals;
        case 24: return TooMuchVespene;
        case 25: return TooMuchTerrazine;
        case 26: return TooMuchCustom;
        case 27: return TooMuchFood;
        case 28: return TooMuchLife;
        case 29: return TooMuchShields;
        case 30: return TooMuchEnergy;
        case 31: return MustTargetUnitWithLife;
        case 32: return MustTargetUnitWithShields;
        case 33: return MustTargetUnitWithEnergy;
        case 34: return CantTrade;
        case 35: return CantSpend;
        case 36: return CantTargetThatUnit;
        case 37: return CouldntAllocateUnit;
        case 38: return UnitCantMove;
        case 39: return TransportIsHoldingPosition;
        case 40: return BuildTechRequirementsNotMet;
        case 41: return CantFindPlacementLocation;
        case 42: return CantBuildOnThat;
        case 43: return CantBuildTooCloseToDropOff;
        case 44: return CantBuildLocationInvalid;
        case 45: return CantSeeBuildLocation;
        case 46: return CantBuildTooCloseToCreepSource;
        case 47: return CantBuildTooCloseToResources;
        case 48: return CantBuildTooFarFromWater;
        case 49: return CantBuildTooFarFromCreepSource;
        case 50: return CantBuildTooFarFromBuildPowerSource;
        case 51: return CantBuildOnDenseTerrain;
        case 52: return CantTrainTooFarFromTrainPowerSource;
        case 53: return CantLandLocationInvalid;
        case 54: return CantSeeLandLocation;
        case 55: return CantLandTooCloseToCreepSource;
        case 56: return CantLandTooCloseToResources;
        case 57: return CantLandTooFarFromWater;
        case 58: return CantLandTooFarFromCreepSource;
        case 59: return CantLandTooFarFromBuildPowerSource;
        case 60: return CantLandTooFarFromTrainPowerSource;
        case 61: return CantLandOnDenseTerrain;
        case 62: return AddOnTooFarFromBuilding;
        case 63: return MustBuildRefineryFirst;
        case 64: return BuildingIsUnderConstruction;
        case 65: return CantFindDropOff;
        case 66: return CantLoadOtherPlayersUnits;
        case 67: return NotEnoughRoomToLoadUnit;
        case 68: return CantUnloadUnitsThere;
        case 69: return CantWarpInUnitsThere;
        case 70: return CantLoadImmobileUnits;
        case 71: return CantRechargeImmobileUnits;
        case 72: return CantRechargeUnderConstructionUnits;
        case 73: return CantLoadThatUnit;
        case 74: return NoCargoToUnload;
        case 75: return LoadAllNoTargetsFound;
        case 76: return NotWhileOccupied;
        case 77: return CantAttackWithoutAmmo;
        case 78: return CantHoldAnyMoreAmmo;
        case 79: return TechRequirementsNotMet;
        case 80: return MustLockdownUnitFirst;
        case 81: return MustTargetUnit;
        case 82: return MustTargetInventory;
        case 83: return MustTargetVisibleUnit;
        case 84: return MustTargetVisibleLocation;
        case 85: return MustTargetWalkableLocation;
        case 86: return MustTargetPawnableUnit;
        case 87: return YouCantControlThatUnit;
        case 88: return YouCantIssueCommandsToThatUnit;
        case 89: return MustTargetResources;
        case 90: return RequiresHealTarget;
        case 91: return RequiresRepairTarget;
        case 92: return NoItemsToDrop;
        case 93: return CantHoldAnyMoreItems;
        case 94: return CantHoldThat;
        case 95: return TargetHasNoInventory;
        case 96: return CantDropThisItem;
        case 97: return CantMoveThisItem;
        case 98: return CantPawnThisUnit;
        case 99: return MustTargetCaster;
        case 100: return CantTargetCaster;
        case 101: return MustTargetOuter;
        case 102: return CantTargetOuter;
        case 103: return MustTargetYourOwnUnits;
        case 104: return CantTargetYourOwnUnits;
        case 105: return MustTargetFriendlyUnits;
        case 106: return CantTargetFriendlyUnits;
        case 107: return MustTargetNeutralUnits;
        case 108: return CantTargetNeutralUnits;
        case 109: return MustTargetEnemyUnits;
        case 110: return CantTargetEnemyUnits;
        case 111: return MustTargetAirUnits;
        case 112: return CantTargetAirUnits;
        case 113: return MustTargetGroundUnits;
        case 114: return CantTargetGroundUnits;
        case 115: return MustTargetStructures;
        case 116: return CantTargetStructures;
        case 117: return MustTargetLightUnits;
        case 118: return CantTargetLightUnits;
        case 119: return MustTargetArmoredUnits;
        case 120: return CantTargetArmoredUnits;
        case 121: return MustTargetBiologicalUnits;
        case 122: return CantTargetBiologicalUnits;
        case 123: return MustTargetHeroicUnits;
        case 124: return CantTargetHeroicUnits;
        case 125: return MustTargetRoboticUnits;
        case 126: return CantTargetRoboticUnits;
        case 127: return MustTargetMechanicalUnits;
        case 128: return CantTargetMechanicalUnits;
        case 129: return MustTargetPsionicUnits;
        case 130: return CantTargetPsionicUnits;
        case 131: return MustTargetMassiveUnits;
        case 132: return CantTargetMassiveUnits;
        case 133: return MustTargetMissile;
        case 134: return CantTargetMissile;
        case 135: return MustTargetWorkerUnits;
        case 136: return CantTargetWorkerUnits;
        case 137: return MustTargetEnergyCapableUnits;
        case 138: return CantTargetEnergyCapableUnits;
        case 139: return MustTargetShieldCapableUnits;
        case 140: return CantTargetShieldCapableUnits;
        case 141: return MustTargetFlyers;
        case 142: return CantTargetFlyers;
        case 143: return MustTargetBuriedUnits;
        case 144: return CantTargetBuriedUnits;
        case 145: return MustTargetCloakedUnits;
        case 146: return CantTargetCloakedUnits;
        case 147: return MustTargetUnitsInAStasisField;
        case 148: return CantTargetUnitsInAStasisField;
        case 149: return MustTargetUnderConstructionUnits;
        case 150: return CantTargetUnderConstructionUnits;
        case 151: return MustTargetDeadUnits;
        case 152: return CantTargetDeadUnits;
        case 153: return MustTargetRevivableUnits;
        case 154: return CantTargetRevivableUnits;
        case 155: return MustTargetHiddenUnits;
        case 156: return CantTargetHiddenUnits;
        case 157: return CantRechargeOtherPlayersUnits;
        case 158: return MustTargetHallucinations;
        case 159: return CantTargetHallucinations;
        case 160: return MustTargetInvulnerableUnits;
        case 161: return CantTargetInvulnerableUnits;
        case 162: return MustTargetDetectedUnits;
        case 163: return CantTargetDetectedUnits;
        case 164: return CantTargetUnitWithEnergy;
        case 165: return CantTargetUnitWithShields;
        case 166: return MustTargetUncommandableUnits;
        case 167: return CantTargetUncommandableUnits;
        case 168: return MustTargetPreventDefeatUnits;
        case 169: return CantTargetPreventDefeatUnits;
        case 170: return MustTargetPreventRevealUnits;
        case 171: return CantTargetPreventRevealUnits;
        case 172: return MustTargetPassiveUnits;
        case 173: return CantTargetPassiveUnits;
        case 174: return MustTargetStunnedUnits;
        case 175: return CantTargetStunnedUnits;
        case 176: return MustTargetSummonedUnits;
        case 177: return CantTargetSummonedUnits;
        case 178: return MustTargetUser1;
        case 179: return CantTargetUser1;
        case 180: return MustTargetUnstoppableUnits;
        case 181: return CantTargetUnstoppableUnits;
        case 182: return MustTargetResistantUnits;
        case 183: return CantTargetResistantUnits;
        case 184: return MustTargetDazedUnits;
        case 185: return CantTargetDazedUnits;
        case 186: return CantLockdown;
        case 187: return CantMindControl;
        case 188: return MustTargetDestructibles;
        case 189: return CantTargetDestructibles;
        case 190: return MustTargetItems;
        case 191: return CantTargetItems;
        case 192: return NoCalldownAvailable;
        case 193: return WaypointListFull;
        case 194: return MustTargetRace;
        case 195: return CantTargetRace;
        case 196: return MustTargetSimilarUnits;
        case 197: return CantTargetSimilarUnits;
        case 198: return CantFindEnoughTargets;
        case 199: return AlreadySpawningLarva;
        case 200: return CantTargetExhaustedResources;
        case 201: return CantUseMinimap;
        case 202: return CantUseInfoPanel;
        case 203: return OrderQueueIsFull;
        case 204: return CantHarvestThatResource;
        case 205: return HarvestersNotRequired;
        case 206: return AlreadyTargeted;
        case 207: return CantAttackWeaponsDisabled;
        case 208: return CouldntReachTarget;
        case 209: return TargetIsOutOfRange;
        case 210: return TargetIsTooClose;
        case 211: return TargetIsOutOfArc;
        case 212: return CantFindTeleportLocation;
        case 213: return InvalidItemClass;
        case 214: return CantFindCancelOrder;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ActionResult>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ActionResult> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ActionResult>() {
            public ActionResult findValueByNumber(int number) {
              return ActionResult.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return SC2APIProtocol.Error.getDescriptor().getEnumTypes().get(0);
    }

    private static final ActionResult[] VALUES = values();

    public static ActionResult valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ActionResult(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SC2APIProtocol.ActionResult)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013error.proto\022\016SC2APIProtocol*\250-\n\014Action" +
      "Result\022\013\n\007Success\020\001\022\020\n\014NotSupported\020\002\022\t\n" +
      "\005Error\020\003\022\026\n\022CantQueueThatOrder\020\004\022\t\n\005Retr" +
      "y\020\005\022\014\n\010Cooldown\020\006\022\017\n\013QueueIsFull\020\007\022\024\n\020Ra" +
      "llyQueueIsFull\020\010\022\025\n\021NotEnoughMinerals\020\t\022" +
      "\024\n\020NotEnoughVespene\020\n\022\026\n\022NotEnoughTerraz" +
      "ine\020\013\022\023\n\017NotEnoughCustom\020\014\022\021\n\rNotEnoughF" +
      "ood\020\r\022\027\n\023FoodUsageImpossible\020\016\022\021\n\rNotEno" +
      "ughLife\020\017\022\024\n\020NotEnoughShields\020\020\022\023\n\017NotEn" +
      "oughEnergy\020\021\022\022\n\016LifeSuppressed\020\022\022\025\n\021Shie",
      "ldsSuppressed\020\023\022\024\n\020EnergySuppressed\020\024\022\024\n" +
      "\020NotEnoughCharges\020\025\022\026\n\022CantAddMoreCharge" +
      "s\020\026\022\023\n\017TooMuchMinerals\020\027\022\022\n\016TooMuchVespe" +
      "ne\020\030\022\024\n\020TooMuchTerrazine\020\031\022\021\n\rTooMuchCus" +
      "tom\020\032\022\017\n\013TooMuchFood\020\033\022\017\n\013TooMuchLife\020\034\022" +
      "\022\n\016TooMuchShields\020\035\022\021\n\rTooMuchEnergy\020\036\022\032" +
      "\n\026MustTargetUnitWithLife\020\037\022\035\n\031MustTarget" +
      "UnitWithShields\020 \022\034\n\030MustTargetUnitWithE" +
      "nergy\020!\022\r\n\tCantTrade\020\"\022\r\n\tCantSpend\020#\022\026\n" +
      "\022CantTargetThatUnit\020$\022\027\n\023CouldntAllocate",
      "Unit\020%\022\020\n\014UnitCantMove\020&\022\036\n\032TransportIsH" +
      "oldingPosition\020\'\022\037\n\033BuildTechRequirement" +
      "sNotMet\020(\022\035\n\031CantFindPlacementLocation\020)" +
      "\022\023\n\017CantBuildOnThat\020*\022\036\n\032CantBuildTooClo" +
      "seToDropOff\020+\022\034\n\030CantBuildLocationInvali" +
      "d\020,\022\030\n\024CantSeeBuildLocation\020-\022\"\n\036CantBui" +
      "ldTooCloseToCreepSource\020.\022 \n\034CantBuildTo" +
      "oCloseToResources\020/\022\034\n\030CantBuildTooFarFr" +
      "omWater\0200\022\"\n\036CantBuildTooFarFromCreepSou" +
      "rce\0201\022\'\n#CantBuildTooFarFromBuildPowerSo",
      "urce\0202\022\033\n\027CantBuildOnDenseTerrain\0203\022\'\n#C" +
      "antTrainTooFarFromTrainPowerSource\0204\022\033\n\027" +
      "CantLandLocationInvalid\0205\022\027\n\023CantSeeLand" +
      "Location\0206\022!\n\035CantLandTooCloseToCreepSou" +
      "rce\0207\022\037\n\033CantLandTooCloseToResources\0208\022\033" +
      "\n\027CantLandTooFarFromWater\0209\022!\n\035CantLandT" +
      "ooFarFromCreepSource\020:\022&\n\"CantLandTooFar" +
      "FromBuildPowerSource\020;\022&\n\"CantLandTooFar" +
      "FromTrainPowerSource\020<\022\032\n\026CantLandOnDens" +
      "eTerrain\020=\022\033\n\027AddOnTooFarFromBuilding\020>\022",
      "\032\n\026MustBuildRefineryFirst\020?\022\037\n\033BuildingI" +
      "sUnderConstruction\020@\022\023\n\017CantFindDropOff\020" +
      "A\022\035\n\031CantLoadOtherPlayersUnits\020B\022\033\n\027NotE" +
      "noughRoomToLoadUnit\020C\022\030\n\024CantUnloadUnits" +
      "There\020D\022\030\n\024CantWarpInUnitsThere\020E\022\031\n\025Can" +
      "tLoadImmobileUnits\020F\022\035\n\031CantRechargeImmo" +
      "bileUnits\020G\022&\n\"CantRechargeUnderConstruc" +
      "tionUnits\020H\022\024\n\020CantLoadThatUnit\020I\022\023\n\017NoC" +
      "argoToUnload\020J\022\031\n\025LoadAllNoTargetsFound\020" +
      "K\022\024\n\020NotWhileOccupied\020L\022\031\n\025CantAttackWit",
      "houtAmmo\020M\022\027\n\023CantHoldAnyMoreAmmo\020N\022\032\n\026T" +
      "echRequirementsNotMet\020O\022\031\n\025MustLockdownU" +
      "nitFirst\020P\022\022\n\016MustTargetUnit\020Q\022\027\n\023MustTa" +
      "rgetInventory\020R\022\031\n\025MustTargetVisibleUnit" +
      "\020S\022\035\n\031MustTargetVisibleLocation\020T\022\036\n\032Mus" +
      "tTargetWalkableLocation\020U\022\032\n\026MustTargetP" +
      "awnableUnit\020V\022\032\n\026YouCantControlThatUnit\020" +
      "W\022\"\n\036YouCantIssueCommandsToThatUnit\020X\022\027\n" +
      "\023MustTargetResources\020Y\022\026\n\022RequiresHealTa" +
      "rget\020Z\022\030\n\024RequiresRepairTarget\020[\022\021\n\rNoIt",
      "emsToDrop\020\\\022\030\n\024CantHoldAnyMoreItems\020]\022\020\n" +
      "\014CantHoldThat\020^\022\030\n\024TargetHasNoInventory\020" +
      "_\022\024\n\020CantDropThisItem\020`\022\024\n\020CantMoveThisI" +
      "tem\020a\022\024\n\020CantPawnThisUnit\020b\022\024\n\020MustTarge" +
      "tCaster\020c\022\024\n\020CantTargetCaster\020d\022\023\n\017MustT" +
      "argetOuter\020e\022\023\n\017CantTargetOuter\020f\022\032\n\026Mus" +
      "tTargetYourOwnUnits\020g\022\032\n\026CantTargetYourO" +
      "wnUnits\020h\022\033\n\027MustTargetFriendlyUnits\020i\022\033" +
      "\n\027CantTargetFriendlyUnits\020j\022\032\n\026MustTarge" +
      "tNeutralUnits\020k\022\032\n\026CantTargetNeutralUnit",
      "s\020l\022\030\n\024MustTargetEnemyUnits\020m\022\030\n\024CantTar" +
      "getEnemyUnits\020n\022\026\n\022MustTargetAirUnits\020o\022" +
      "\026\n\022CantTargetAirUnits\020p\022\031\n\025MustTargetGro" +
      "undUnits\020q\022\031\n\025CantTargetGroundUnits\020r\022\030\n" +
      "\024MustTargetStructures\020s\022\030\n\024CantTargetStr" +
      "uctures\020t\022\030\n\024MustTargetLightUnits\020u\022\030\n\024C" +
      "antTargetLightUnits\020v\022\032\n\026MustTargetArmor" +
      "edUnits\020w\022\032\n\026CantTargetArmoredUnits\020x\022\035\n" +
      "\031MustTargetBiologicalUnits\020y\022\035\n\031CantTarg" +
      "etBiologicalUnits\020z\022\031\n\025MustTargetHeroicU",
      "nits\020{\022\031\n\025CantTargetHeroicUnits\020|\022\032\n\026Mus" +
      "tTargetRoboticUnits\020}\022\032\n\026CantTargetRobot" +
      "icUnits\020~\022\035\n\031MustTargetMechanicalUnits\020\177" +
      "\022\036\n\031CantTargetMechanicalUnits\020\200\001\022\033\n\026Must" +
      "TargetPsionicUnits\020\201\001\022\033\n\026CantTargetPsion" +
      "icUnits\020\202\001\022\033\n\026MustTargetMassiveUnits\020\203\001\022" +
      "\033\n\026CantTargetMassiveUnits\020\204\001\022\026\n\021MustTarg" +
      "etMissile\020\205\001\022\026\n\021CantTargetMissile\020\206\001\022\032\n\025" +
      "MustTargetWorkerUnits\020\207\001\022\032\n\025CantTargetWo" +
      "rkerUnits\020\210\001\022!\n\034MustTargetEnergyCapableU",
      "nits\020\211\001\022!\n\034CantTargetEnergyCapableUnits\020" +
      "\212\001\022!\n\034MustTargetShieldCapableUnits\020\213\001\022!\n" +
      "\034CantTargetShieldCapableUnits\020\214\001\022\025\n\020Must" +
      "TargetFlyers\020\215\001\022\025\n\020CantTargetFlyers\020\216\001\022\032" +
      "\n\025MustTargetBuriedUnits\020\217\001\022\032\n\025CantTarget" +
      "BuriedUnits\020\220\001\022\033\n\026MustTargetCloakedUnits" +
      "\020\221\001\022\033\n\026CantTargetCloakedUnits\020\222\001\022\"\n\035Must" +
      "TargetUnitsInAStasisField\020\223\001\022\"\n\035CantTarg" +
      "etUnitsInAStasisField\020\224\001\022%\n MustTargetUn" +
      "derConstructionUnits\020\225\001\022%\n CantTargetUnd",
      "erConstructionUnits\020\226\001\022\030\n\023MustTargetDead" +
      "Units\020\227\001\022\030\n\023CantTargetDeadUnits\020\230\001\022\035\n\030Mu" +
      "stTargetRevivableUnits\020\231\001\022\035\n\030CantTargetR" +
      "evivableUnits\020\232\001\022\032\n\025MustTargetHiddenUnit" +
      "s\020\233\001\022\032\n\025CantTargetHiddenUnits\020\234\001\022\"\n\035Cant" +
      "RechargeOtherPlayersUnits\020\235\001\022\035\n\030MustTarg" +
      "etHallucinations\020\236\001\022\035\n\030CantTargetHalluci" +
      "nations\020\237\001\022 \n\033MustTargetInvulnerableUnit" +
      "s\020\240\001\022 \n\033CantTargetInvulnerableUnits\020\241\001\022\034" +
      "\n\027MustTargetDetectedUnits\020\242\001\022\034\n\027CantTarg",
      "etDetectedUnits\020\243\001\022\035\n\030CantTargetUnitWith" +
      "Energy\020\244\001\022\036\n\031CantTargetUnitWithShields\020\245" +
      "\001\022!\n\034MustTargetUncommandableUnits\020\246\001\022!\n\034" +
      "CantTargetUncommandableUnits\020\247\001\022!\n\034MustT" +
      "argetPreventDefeatUnits\020\250\001\022!\n\034CantTarget" +
      "PreventDefeatUnits\020\251\001\022!\n\034MustTargetPreve" +
      "ntRevealUnits\020\252\001\022!\n\034CantTargetPreventRev" +
      "ealUnits\020\253\001\022\033\n\026MustTargetPassiveUnits\020\254\001" +
      "\022\033\n\026CantTargetPassiveUnits\020\255\001\022\033\n\026MustTar" +
      "getStunnedUnits\020\256\001\022\033\n\026CantTargetStunnedU",
      "nits\020\257\001\022\034\n\027MustTargetSummonedUnits\020\260\001\022\034\n" +
      "\027CantTargetSummonedUnits\020\261\001\022\024\n\017MustTarge" +
      "tUser1\020\262\001\022\024\n\017CantTargetUser1\020\263\001\022\037\n\032MustT" +
      "argetUnstoppableUnits\020\264\001\022\037\n\032CantTargetUn" +
      "stoppableUnits\020\265\001\022\035\n\030MustTargetResistant" +
      "Units\020\266\001\022\035\n\030CantTargetResistantUnits\020\267\001\022" +
      "\031\n\024MustTargetDazedUnits\020\270\001\022\031\n\024CantTarget" +
      "DazedUnits\020\271\001\022\021\n\014CantLockdown\020\272\001\022\024\n\017Cant" +
      "MindControl\020\273\001\022\034\n\027MustTargetDestructible" +
      "s\020\274\001\022\034\n\027CantTargetDestructibles\020\275\001\022\024\n\017Mu",
      "stTargetItems\020\276\001\022\024\n\017CantTargetItems\020\277\001\022\030" +
      "\n\023NoCalldownAvailable\020\300\001\022\025\n\020WaypointList" +
      "Full\020\301\001\022\023\n\016MustTargetRace\020\302\001\022\023\n\016CantTarg" +
      "etRace\020\303\001\022\033\n\026MustTargetSimilarUnits\020\304\001\022\033" +
      "\n\026CantTargetSimilarUnits\020\305\001\022\032\n\025CantFindE" +
      "noughTargets\020\306\001\022\031\n\024AlreadySpawningLarva\020" +
      "\307\001\022!\n\034CantTargetExhaustedResources\020\310\001\022\023\n" +
      "\016CantUseMinimap\020\311\001\022\025\n\020CantUseInfoPanel\020\312" +
      "\001\022\025\n\020OrderQueueIsFull\020\313\001\022\034\n\027CantHarvestT" +
      "hatResource\020\314\001\022\032\n\025HarvestersNotRequired\020",
      "\315\001\022\024\n\017AlreadyTargeted\020\316\001\022\036\n\031CantAttackWe" +
      "aponsDisabled\020\317\001\022\027\n\022CouldntReachTarget\020\320" +
      "\001\022\027\n\022TargetIsOutOfRange\020\321\001\022\025\n\020TargetIsTo" +
      "oClose\020\322\001\022\025\n\020TargetIsOutOfArc\020\323\001\022\035\n\030Cant" +
      "FindTeleportLocation\020\324\001\022\025\n\020InvalidItemCl" +
      "ass\020\325\001\022\030\n\023CantFindCancelOrder\020\326\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
