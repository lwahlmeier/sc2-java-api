// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

package SC2APIProtocol;

public final class Common {
  private Common() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface AvailableAbilityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.AvailableAbility)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 ability_id = 1;</code>
     */
    boolean hasAbilityId();
    /**
     * <code>optional int32 ability_id = 1;</code>
     */
    int getAbilityId();

    /**
     * <code>optional bool requires_point = 2;</code>
     */
    boolean hasRequiresPoint();
    /**
     * <code>optional bool requires_point = 2;</code>
     */
    boolean getRequiresPoint();
  }
  /**
   * Protobuf type {@code SC2APIProtocol.AvailableAbility}
   */
  public  static final class AvailableAbility extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.AvailableAbility)
      AvailableAbilityOrBuilder {
    // Use AvailableAbility.newBuilder() to construct.
    private AvailableAbility(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AvailableAbility() {
      abilityId_ = 0;
      requiresPoint_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AvailableAbility(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              abilityId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              requiresPoint_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Common.internal_static_SC2APIProtocol_AvailableAbility_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Common.internal_static_SC2APIProtocol_AvailableAbility_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Common.AvailableAbility.class, SC2APIProtocol.Common.AvailableAbility.Builder.class);
    }

    private int bitField0_;
    public static final int ABILITY_ID_FIELD_NUMBER = 1;
    private int abilityId_;
    /**
     * <code>optional int32 ability_id = 1;</code>
     */
    public boolean hasAbilityId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 ability_id = 1;</code>
     */
    public int getAbilityId() {
      return abilityId_;
    }

    public static final int REQUIRES_POINT_FIELD_NUMBER = 2;
    private boolean requiresPoint_;
    /**
     * <code>optional bool requires_point = 2;</code>
     */
    public boolean hasRequiresPoint() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool requires_point = 2;</code>
     */
    public boolean getRequiresPoint() {
      return requiresPoint_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, abilityId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, requiresPoint_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, abilityId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, requiresPoint_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Common.AvailableAbility)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Common.AvailableAbility other = (SC2APIProtocol.Common.AvailableAbility) obj;

      boolean result = true;
      result = result && (hasAbilityId() == other.hasAbilityId());
      if (hasAbilityId()) {
        result = result && (getAbilityId()
            == other.getAbilityId());
      }
      result = result && (hasRequiresPoint() == other.hasRequiresPoint());
      if (hasRequiresPoint()) {
        result = result && (getRequiresPoint()
            == other.getRequiresPoint());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasAbilityId()) {
        hash = (37 * hash) + ABILITY_ID_FIELD_NUMBER;
        hash = (53 * hash) + getAbilityId();
      }
      if (hasRequiresPoint()) {
        hash = (37 * hash) + REQUIRES_POINT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getRequiresPoint());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Common.AvailableAbility parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Common.AvailableAbility parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Common.AvailableAbility parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Common.AvailableAbility parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Common.AvailableAbility parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Common.AvailableAbility parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Common.AvailableAbility parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Common.AvailableAbility parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Common.AvailableAbility parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Common.AvailableAbility parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Common.AvailableAbility prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC2APIProtocol.AvailableAbility}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.AvailableAbility)
        SC2APIProtocol.Common.AvailableAbilityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Common.internal_static_SC2APIProtocol_AvailableAbility_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Common.internal_static_SC2APIProtocol_AvailableAbility_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Common.AvailableAbility.class, SC2APIProtocol.Common.AvailableAbility.Builder.class);
      }

      // Construct using SC2APIProtocol.Common.AvailableAbility.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        abilityId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        requiresPoint_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Common.internal_static_SC2APIProtocol_AvailableAbility_descriptor;
      }

      public SC2APIProtocol.Common.AvailableAbility getDefaultInstanceForType() {
        return SC2APIProtocol.Common.AvailableAbility.getDefaultInstance();
      }

      public SC2APIProtocol.Common.AvailableAbility build() {
        SC2APIProtocol.Common.AvailableAbility result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SC2APIProtocol.Common.AvailableAbility buildPartial() {
        SC2APIProtocol.Common.AvailableAbility result = new SC2APIProtocol.Common.AvailableAbility(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.abilityId_ = abilityId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.requiresPoint_ = requiresPoint_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Common.AvailableAbility) {
          return mergeFrom((SC2APIProtocol.Common.AvailableAbility)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Common.AvailableAbility other) {
        if (other == SC2APIProtocol.Common.AvailableAbility.getDefaultInstance()) return this;
        if (other.hasAbilityId()) {
          setAbilityId(other.getAbilityId());
        }
        if (other.hasRequiresPoint()) {
          setRequiresPoint(other.getRequiresPoint());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Common.AvailableAbility parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Common.AvailableAbility) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int abilityId_ ;
      /**
       * <code>optional int32 ability_id = 1;</code>
       */
      public boolean hasAbilityId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 ability_id = 1;</code>
       */
      public int getAbilityId() {
        return abilityId_;
      }
      /**
       * <code>optional int32 ability_id = 1;</code>
       */
      public Builder setAbilityId(int value) {
        bitField0_ |= 0x00000001;
        abilityId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ability_id = 1;</code>
       */
      public Builder clearAbilityId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        abilityId_ = 0;
        onChanged();
        return this;
      }

      private boolean requiresPoint_ ;
      /**
       * <code>optional bool requires_point = 2;</code>
       */
      public boolean hasRequiresPoint() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool requires_point = 2;</code>
       */
      public boolean getRequiresPoint() {
        return requiresPoint_;
      }
      /**
       * <code>optional bool requires_point = 2;</code>
       */
      public Builder setRequiresPoint(boolean value) {
        bitField0_ |= 0x00000002;
        requiresPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool requires_point = 2;</code>
       */
      public Builder clearRequiresPoint() {
        bitField0_ = (bitField0_ & ~0x00000002);
        requiresPoint_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.AvailableAbility)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.AvailableAbility)
    private static final SC2APIProtocol.Common.AvailableAbility DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Common.AvailableAbility();
    }

    public static SC2APIProtocol.Common.AvailableAbility getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<AvailableAbility>
        PARSER = new com.google.protobuf.AbstractParser<AvailableAbility>() {
      public AvailableAbility parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new AvailableAbility(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AvailableAbility> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AvailableAbility> getParserForType() {
      return PARSER;
    }

    public SC2APIProtocol.Common.AvailableAbility getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ImageDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.ImageData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Number of bits per pixel; 8 bits for a byte etc.
     * </pre>
     *
     * <code>optional int32 bits_per_pixel = 1;</code>
     */
    boolean hasBitsPerPixel();
    /**
     * <pre>
     * Number of bits per pixel; 8 bits for a byte etc.
     * </pre>
     *
     * <code>optional int32 bits_per_pixel = 1;</code>
     */
    int getBitsPerPixel();

    /**
     * <pre>
     * Dimension in pixels.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.Size2DI size = 2;</code>
     */
    boolean hasSize();
    /**
     * <pre>
     * Dimension in pixels.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.Size2DI size = 2;</code>
     */
    SC2APIProtocol.Common.Size2DI getSize();
    /**
     * <pre>
     * Dimension in pixels.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.Size2DI size = 2;</code>
     */
    SC2APIProtocol.Common.Size2DIOrBuilder getSizeOrBuilder();

    /**
     * <pre>
     * Binary data; the size of this buffer in bytes is width * height * bits_per_pixel / 8.
     * </pre>
     *
     * <code>optional bytes data = 3;</code>
     */
    boolean hasData();
    /**
     * <pre>
     * Binary data; the size of this buffer in bytes is width * height * bits_per_pixel / 8.
     * </pre>
     *
     * <code>optional bytes data = 3;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code SC2APIProtocol.ImageData}
   */
  public  static final class ImageData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.ImageData)
      ImageDataOrBuilder {
    // Use ImageData.newBuilder() to construct.
    private ImageData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ImageData() {
      bitsPerPixel_ = 0;
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ImageData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bitsPerPixel_ = input.readInt32();
              break;
            }
            case 18: {
              SC2APIProtocol.Common.Size2DI.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = size_.toBuilder();
              }
              size_ = input.readMessage(SC2APIProtocol.Common.Size2DI.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(size_);
                size_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              data_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Common.internal_static_SC2APIProtocol_ImageData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Common.internal_static_SC2APIProtocol_ImageData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Common.ImageData.class, SC2APIProtocol.Common.ImageData.Builder.class);
    }

    private int bitField0_;
    public static final int BITS_PER_PIXEL_FIELD_NUMBER = 1;
    private int bitsPerPixel_;
    /**
     * <pre>
     * Number of bits per pixel; 8 bits for a byte etc.
     * </pre>
     *
     * <code>optional int32 bits_per_pixel = 1;</code>
     */
    public boolean hasBitsPerPixel() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Number of bits per pixel; 8 bits for a byte etc.
     * </pre>
     *
     * <code>optional int32 bits_per_pixel = 1;</code>
     */
    public int getBitsPerPixel() {
      return bitsPerPixel_;
    }

    public static final int SIZE_FIELD_NUMBER = 2;
    private SC2APIProtocol.Common.Size2DI size_;
    /**
     * <pre>
     * Dimension in pixels.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.Size2DI size = 2;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Dimension in pixels.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.Size2DI size = 2;</code>
     */
    public SC2APIProtocol.Common.Size2DI getSize() {
      return size_ == null ? SC2APIProtocol.Common.Size2DI.getDefaultInstance() : size_;
    }
    /**
     * <pre>
     * Dimension in pixels.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.Size2DI size = 2;</code>
     */
    public SC2APIProtocol.Common.Size2DIOrBuilder getSizeOrBuilder() {
      return size_ == null ? SC2APIProtocol.Common.Size2DI.getDefaultInstance() : size_;
    }

    public static final int DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * Binary data; the size of this buffer in bytes is width * height * bits_per_pixel / 8.
     * </pre>
     *
     * <code>optional bytes data = 3;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Binary data; the size of this buffer in bytes is width * height * bits_per_pixel / 8.
     * </pre>
     *
     * <code>optional bytes data = 3;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, bitsPerPixel_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getSize());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, data_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bitsPerPixel_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSize());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Common.ImageData)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Common.ImageData other = (SC2APIProtocol.Common.ImageData) obj;

      boolean result = true;
      result = result && (hasBitsPerPixel() == other.hasBitsPerPixel());
      if (hasBitsPerPixel()) {
        result = result && (getBitsPerPixel()
            == other.getBitsPerPixel());
      }
      result = result && (hasSize() == other.hasSize());
      if (hasSize()) {
        result = result && getSize()
            .equals(other.getSize());
      }
      result = result && (hasData() == other.hasData());
      if (hasData()) {
        result = result && getData()
            .equals(other.getData());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasBitsPerPixel()) {
        hash = (37 * hash) + BITS_PER_PIXEL_FIELD_NUMBER;
        hash = (53 * hash) + getBitsPerPixel();
      }
      if (hasSize()) {
        hash = (37 * hash) + SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getSize().hashCode();
      }
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Common.ImageData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Common.ImageData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Common.ImageData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Common.ImageData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Common.ImageData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Common.ImageData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Common.ImageData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Common.ImageData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Common.ImageData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Common.ImageData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Common.ImageData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC2APIProtocol.ImageData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.ImageData)
        SC2APIProtocol.Common.ImageDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Common.internal_static_SC2APIProtocol_ImageData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Common.internal_static_SC2APIProtocol_ImageData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Common.ImageData.class, SC2APIProtocol.Common.ImageData.Builder.class);
      }

      // Construct using SC2APIProtocol.Common.ImageData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSizeFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        bitsPerPixel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (sizeBuilder_ == null) {
          size_ = null;
        } else {
          sizeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Common.internal_static_SC2APIProtocol_ImageData_descriptor;
      }

      public SC2APIProtocol.Common.ImageData getDefaultInstanceForType() {
        return SC2APIProtocol.Common.ImageData.getDefaultInstance();
      }

      public SC2APIProtocol.Common.ImageData build() {
        SC2APIProtocol.Common.ImageData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SC2APIProtocol.Common.ImageData buildPartial() {
        SC2APIProtocol.Common.ImageData result = new SC2APIProtocol.Common.ImageData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bitsPerPixel_ = bitsPerPixel_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (sizeBuilder_ == null) {
          result.size_ = size_;
        } else {
          result.size_ = sizeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Common.ImageData) {
          return mergeFrom((SC2APIProtocol.Common.ImageData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Common.ImageData other) {
        if (other == SC2APIProtocol.Common.ImageData.getDefaultInstance()) return this;
        if (other.hasBitsPerPixel()) {
          setBitsPerPixel(other.getBitsPerPixel());
        }
        if (other.hasSize()) {
          mergeSize(other.getSize());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Common.ImageData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Common.ImageData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int bitsPerPixel_ ;
      /**
       * <pre>
       * Number of bits per pixel; 8 bits for a byte etc.
       * </pre>
       *
       * <code>optional int32 bits_per_pixel = 1;</code>
       */
      public boolean hasBitsPerPixel() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Number of bits per pixel; 8 bits for a byte etc.
       * </pre>
       *
       * <code>optional int32 bits_per_pixel = 1;</code>
       */
      public int getBitsPerPixel() {
        return bitsPerPixel_;
      }
      /**
       * <pre>
       * Number of bits per pixel; 8 bits for a byte etc.
       * </pre>
       *
       * <code>optional int32 bits_per_pixel = 1;</code>
       */
      public Builder setBitsPerPixel(int value) {
        bitField0_ |= 0x00000001;
        bitsPerPixel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of bits per pixel; 8 bits for a byte etc.
       * </pre>
       *
       * <code>optional int32 bits_per_pixel = 1;</code>
       */
      public Builder clearBitsPerPixel() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bitsPerPixel_ = 0;
        onChanged();
        return this;
      }

      private SC2APIProtocol.Common.Size2DI size_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Common.Size2DI, SC2APIProtocol.Common.Size2DI.Builder, SC2APIProtocol.Common.Size2DIOrBuilder> sizeBuilder_;
      /**
       * <pre>
       * Dimension in pixels.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Size2DI size = 2;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Dimension in pixels.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Size2DI size = 2;</code>
       */
      public SC2APIProtocol.Common.Size2DI getSize() {
        if (sizeBuilder_ == null) {
          return size_ == null ? SC2APIProtocol.Common.Size2DI.getDefaultInstance() : size_;
        } else {
          return sizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Dimension in pixels.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Size2DI size = 2;</code>
       */
      public Builder setSize(SC2APIProtocol.Common.Size2DI value) {
        if (sizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          size_ = value;
          onChanged();
        } else {
          sizeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Dimension in pixels.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Size2DI size = 2;</code>
       */
      public Builder setSize(
          SC2APIProtocol.Common.Size2DI.Builder builderForValue) {
        if (sizeBuilder_ == null) {
          size_ = builderForValue.build();
          onChanged();
        } else {
          sizeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Dimension in pixels.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Size2DI size = 2;</code>
       */
      public Builder mergeSize(SC2APIProtocol.Common.Size2DI value) {
        if (sizeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              size_ != null &&
              size_ != SC2APIProtocol.Common.Size2DI.getDefaultInstance()) {
            size_ =
              SC2APIProtocol.Common.Size2DI.newBuilder(size_).mergeFrom(value).buildPartial();
          } else {
            size_ = value;
          }
          onChanged();
        } else {
          sizeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Dimension in pixels.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Size2DI size = 2;</code>
       */
      public Builder clearSize() {
        if (sizeBuilder_ == null) {
          size_ = null;
          onChanged();
        } else {
          sizeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       * Dimension in pixels.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Size2DI size = 2;</code>
       */
      public SC2APIProtocol.Common.Size2DI.Builder getSizeBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Dimension in pixels.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Size2DI size = 2;</code>
       */
      public SC2APIProtocol.Common.Size2DIOrBuilder getSizeOrBuilder() {
        if (sizeBuilder_ != null) {
          return sizeBuilder_.getMessageOrBuilder();
        } else {
          return size_ == null ?
              SC2APIProtocol.Common.Size2DI.getDefaultInstance() : size_;
        }
      }
      /**
       * <pre>
       * Dimension in pixels.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Size2DI size = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Common.Size2DI, SC2APIProtocol.Common.Size2DI.Builder, SC2APIProtocol.Common.Size2DIOrBuilder> 
          getSizeFieldBuilder() {
        if (sizeBuilder_ == null) {
          sizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SC2APIProtocol.Common.Size2DI, SC2APIProtocol.Common.Size2DI.Builder, SC2APIProtocol.Common.Size2DIOrBuilder>(
                  getSize(),
                  getParentForChildren(),
                  isClean());
          size_ = null;
        }
        return sizeBuilder_;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Binary data; the size of this buffer in bytes is width * height * bits_per_pixel / 8.
       * </pre>
       *
       * <code>optional bytes data = 3;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Binary data; the size of this buffer in bytes is width * height * bits_per_pixel / 8.
       * </pre>
       *
       * <code>optional bytes data = 3;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       * Binary data; the size of this buffer in bytes is width * height * bits_per_pixel / 8.
       * </pre>
       *
       * <code>optional bytes data = 3;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Binary data; the size of this buffer in bytes is width * height * bits_per_pixel / 8.
       * </pre>
       *
       * <code>optional bytes data = 3;</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000004);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.ImageData)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.ImageData)
    private static final SC2APIProtocol.Common.ImageData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Common.ImageData();
    }

    public static SC2APIProtocol.Common.ImageData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ImageData>
        PARSER = new com.google.protobuf.AbstractParser<ImageData>() {
      public ImageData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ImageData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ImageData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ImageData> getParserForType() {
      return PARSER;
    }

    public SC2APIProtocol.Common.ImageData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PointIOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.PointI)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 x = 1;</code>
     */
    boolean hasX();
    /**
     * <code>optional int32 x = 1;</code>
     */
    int getX();

    /**
     * <code>optional int32 y = 2;</code>
     */
    boolean hasY();
    /**
     * <code>optional int32 y = 2;</code>
     */
    int getY();
  }
  /**
   * <pre>
   * Point on the screen/minimap (e.g., 0..64).
   * Note: bottom left of the screen is 0, 0.
   * </pre>
   *
   * Protobuf type {@code SC2APIProtocol.PointI}
   */
  public  static final class PointI extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.PointI)
      PointIOrBuilder {
    // Use PointI.newBuilder() to construct.
    private PointI(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PointI() {
      x_ = 0;
      y_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PointI(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              x_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              y_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Common.internal_static_SC2APIProtocol_PointI_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Common.internal_static_SC2APIProtocol_PointI_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Common.PointI.class, SC2APIProtocol.Common.PointI.Builder.class);
    }

    private int bitField0_;
    public static final int X_FIELD_NUMBER = 1;
    private int x_;
    /**
     * <code>optional int32 x = 1;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 x = 1;</code>
     */
    public int getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private int y_;
    /**
     * <code>optional int32 y = 2;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 y = 2;</code>
     */
    public int getY() {
      return y_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, y_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, y_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Common.PointI)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Common.PointI other = (SC2APIProtocol.Common.PointI) obj;

      boolean result = true;
      result = result && (hasX() == other.hasX());
      if (hasX()) {
        result = result && (getX()
            == other.getX());
      }
      result = result && (hasY() == other.hasY());
      if (hasY()) {
        result = result && (getY()
            == other.getY());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasX()) {
        hash = (37 * hash) + X_FIELD_NUMBER;
        hash = (53 * hash) + getX();
      }
      if (hasY()) {
        hash = (37 * hash) + Y_FIELD_NUMBER;
        hash = (53 * hash) + getY();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Common.PointI parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Common.PointI parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Common.PointI parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Common.PointI parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Common.PointI parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Common.PointI parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Common.PointI parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Common.PointI parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Common.PointI parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Common.PointI parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Common.PointI prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Point on the screen/minimap (e.g., 0..64).
     * Note: bottom left of the screen is 0, 0.
     * </pre>
     *
     * Protobuf type {@code SC2APIProtocol.PointI}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.PointI)
        SC2APIProtocol.Common.PointIOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Common.internal_static_SC2APIProtocol_PointI_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Common.internal_static_SC2APIProtocol_PointI_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Common.PointI.class, SC2APIProtocol.Common.PointI.Builder.class);
      }

      // Construct using SC2APIProtocol.Common.PointI.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Common.internal_static_SC2APIProtocol_PointI_descriptor;
      }

      public SC2APIProtocol.Common.PointI getDefaultInstanceForType() {
        return SC2APIProtocol.Common.PointI.getDefaultInstance();
      }

      public SC2APIProtocol.Common.PointI build() {
        SC2APIProtocol.Common.PointI result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SC2APIProtocol.Common.PointI buildPartial() {
        SC2APIProtocol.Common.PointI result = new SC2APIProtocol.Common.PointI(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Common.PointI) {
          return mergeFrom((SC2APIProtocol.Common.PointI)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Common.PointI other) {
        if (other == SC2APIProtocol.Common.PointI.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Common.PointI parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Common.PointI) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int x_ ;
      /**
       * <code>optional int32 x = 1;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 x = 1;</code>
       */
      public int getX() {
        return x_;
      }
      /**
       * <code>optional int32 x = 1;</code>
       */
      public Builder setX(int value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 x = 1;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0;
        onChanged();
        return this;
      }

      private int y_ ;
      /**
       * <code>optional int32 y = 2;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 y = 2;</code>
       */
      public int getY() {
        return y_;
      }
      /**
       * <code>optional int32 y = 2;</code>
       */
      public Builder setY(int value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 y = 2;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.PointI)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.PointI)
    private static final SC2APIProtocol.Common.PointI DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Common.PointI();
    }

    public static SC2APIProtocol.Common.PointI getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PointI>
        PARSER = new com.google.protobuf.AbstractParser<PointI>() {
      public PointI parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PointI(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PointI> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PointI> getParserForType() {
      return PARSER;
    }

    public SC2APIProtocol.Common.PointI getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RectangleIOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.RectangleI)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .SC2APIProtocol.PointI p0 = 1;</code>
     */
    boolean hasP0();
    /**
     * <code>optional .SC2APIProtocol.PointI p0 = 1;</code>
     */
    SC2APIProtocol.Common.PointI getP0();
    /**
     * <code>optional .SC2APIProtocol.PointI p0 = 1;</code>
     */
    SC2APIProtocol.Common.PointIOrBuilder getP0OrBuilder();

    /**
     * <code>optional .SC2APIProtocol.PointI p1 = 2;</code>
     */
    boolean hasP1();
    /**
     * <code>optional .SC2APIProtocol.PointI p1 = 2;</code>
     */
    SC2APIProtocol.Common.PointI getP1();
    /**
     * <code>optional .SC2APIProtocol.PointI p1 = 2;</code>
     */
    SC2APIProtocol.Common.PointIOrBuilder getP1OrBuilder();
  }
  /**
   * <pre>
   * Screen space rectangular area.
   * </pre>
   *
   * Protobuf type {@code SC2APIProtocol.RectangleI}
   */
  public  static final class RectangleI extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.RectangleI)
      RectangleIOrBuilder {
    // Use RectangleI.newBuilder() to construct.
    private RectangleI(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RectangleI() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RectangleI(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              SC2APIProtocol.Common.PointI.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = p0_.toBuilder();
              }
              p0_ = input.readMessage(SC2APIProtocol.Common.PointI.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(p0_);
                p0_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              SC2APIProtocol.Common.PointI.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = p1_.toBuilder();
              }
              p1_ = input.readMessage(SC2APIProtocol.Common.PointI.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(p1_);
                p1_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Common.internal_static_SC2APIProtocol_RectangleI_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Common.internal_static_SC2APIProtocol_RectangleI_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Common.RectangleI.class, SC2APIProtocol.Common.RectangleI.Builder.class);
    }

    private int bitField0_;
    public static final int P0_FIELD_NUMBER = 1;
    private SC2APIProtocol.Common.PointI p0_;
    /**
     * <code>optional .SC2APIProtocol.PointI p0 = 1;</code>
     */
    public boolean hasP0() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .SC2APIProtocol.PointI p0 = 1;</code>
     */
    public SC2APIProtocol.Common.PointI getP0() {
      return p0_ == null ? SC2APIProtocol.Common.PointI.getDefaultInstance() : p0_;
    }
    /**
     * <code>optional .SC2APIProtocol.PointI p0 = 1;</code>
     */
    public SC2APIProtocol.Common.PointIOrBuilder getP0OrBuilder() {
      return p0_ == null ? SC2APIProtocol.Common.PointI.getDefaultInstance() : p0_;
    }

    public static final int P1_FIELD_NUMBER = 2;
    private SC2APIProtocol.Common.PointI p1_;
    /**
     * <code>optional .SC2APIProtocol.PointI p1 = 2;</code>
     */
    public boolean hasP1() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .SC2APIProtocol.PointI p1 = 2;</code>
     */
    public SC2APIProtocol.Common.PointI getP1() {
      return p1_ == null ? SC2APIProtocol.Common.PointI.getDefaultInstance() : p1_;
    }
    /**
     * <code>optional .SC2APIProtocol.PointI p1 = 2;</code>
     */
    public SC2APIProtocol.Common.PointIOrBuilder getP1OrBuilder() {
      return p1_ == null ? SC2APIProtocol.Common.PointI.getDefaultInstance() : p1_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getP0());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getP1());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getP0());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getP1());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Common.RectangleI)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Common.RectangleI other = (SC2APIProtocol.Common.RectangleI) obj;

      boolean result = true;
      result = result && (hasP0() == other.hasP0());
      if (hasP0()) {
        result = result && getP0()
            .equals(other.getP0());
      }
      result = result && (hasP1() == other.hasP1());
      if (hasP1()) {
        result = result && getP1()
            .equals(other.getP1());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasP0()) {
        hash = (37 * hash) + P0_FIELD_NUMBER;
        hash = (53 * hash) + getP0().hashCode();
      }
      if (hasP1()) {
        hash = (37 * hash) + P1_FIELD_NUMBER;
        hash = (53 * hash) + getP1().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Common.RectangleI parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Common.RectangleI parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Common.RectangleI parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Common.RectangleI parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Common.RectangleI parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Common.RectangleI parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Common.RectangleI parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Common.RectangleI parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Common.RectangleI parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Common.RectangleI parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Common.RectangleI prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Screen space rectangular area.
     * </pre>
     *
     * Protobuf type {@code SC2APIProtocol.RectangleI}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.RectangleI)
        SC2APIProtocol.Common.RectangleIOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Common.internal_static_SC2APIProtocol_RectangleI_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Common.internal_static_SC2APIProtocol_RectangleI_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Common.RectangleI.class, SC2APIProtocol.Common.RectangleI.Builder.class);
      }

      // Construct using SC2APIProtocol.Common.RectangleI.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getP0FieldBuilder();
          getP1FieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (p0Builder_ == null) {
          p0_ = null;
        } else {
          p0Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (p1Builder_ == null) {
          p1_ = null;
        } else {
          p1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Common.internal_static_SC2APIProtocol_RectangleI_descriptor;
      }

      public SC2APIProtocol.Common.RectangleI getDefaultInstanceForType() {
        return SC2APIProtocol.Common.RectangleI.getDefaultInstance();
      }

      public SC2APIProtocol.Common.RectangleI build() {
        SC2APIProtocol.Common.RectangleI result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SC2APIProtocol.Common.RectangleI buildPartial() {
        SC2APIProtocol.Common.RectangleI result = new SC2APIProtocol.Common.RectangleI(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (p0Builder_ == null) {
          result.p0_ = p0_;
        } else {
          result.p0_ = p0Builder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (p1Builder_ == null) {
          result.p1_ = p1_;
        } else {
          result.p1_ = p1Builder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Common.RectangleI) {
          return mergeFrom((SC2APIProtocol.Common.RectangleI)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Common.RectangleI other) {
        if (other == SC2APIProtocol.Common.RectangleI.getDefaultInstance()) return this;
        if (other.hasP0()) {
          mergeP0(other.getP0());
        }
        if (other.hasP1()) {
          mergeP1(other.getP1());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Common.RectangleI parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Common.RectangleI) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private SC2APIProtocol.Common.PointI p0_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Common.PointI, SC2APIProtocol.Common.PointI.Builder, SC2APIProtocol.Common.PointIOrBuilder> p0Builder_;
      /**
       * <code>optional .SC2APIProtocol.PointI p0 = 1;</code>
       */
      public boolean hasP0() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .SC2APIProtocol.PointI p0 = 1;</code>
       */
      public SC2APIProtocol.Common.PointI getP0() {
        if (p0Builder_ == null) {
          return p0_ == null ? SC2APIProtocol.Common.PointI.getDefaultInstance() : p0_;
        } else {
          return p0Builder_.getMessage();
        }
      }
      /**
       * <code>optional .SC2APIProtocol.PointI p0 = 1;</code>
       */
      public Builder setP0(SC2APIProtocol.Common.PointI value) {
        if (p0Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          p0_ = value;
          onChanged();
        } else {
          p0Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.PointI p0 = 1;</code>
       */
      public Builder setP0(
          SC2APIProtocol.Common.PointI.Builder builderForValue) {
        if (p0Builder_ == null) {
          p0_ = builderForValue.build();
          onChanged();
        } else {
          p0Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.PointI p0 = 1;</code>
       */
      public Builder mergeP0(SC2APIProtocol.Common.PointI value) {
        if (p0Builder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              p0_ != null &&
              p0_ != SC2APIProtocol.Common.PointI.getDefaultInstance()) {
            p0_ =
              SC2APIProtocol.Common.PointI.newBuilder(p0_).mergeFrom(value).buildPartial();
          } else {
            p0_ = value;
          }
          onChanged();
        } else {
          p0Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.PointI p0 = 1;</code>
       */
      public Builder clearP0() {
        if (p0Builder_ == null) {
          p0_ = null;
          onChanged();
        } else {
          p0Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.PointI p0 = 1;</code>
       */
      public SC2APIProtocol.Common.PointI.Builder getP0Builder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getP0FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SC2APIProtocol.PointI p0 = 1;</code>
       */
      public SC2APIProtocol.Common.PointIOrBuilder getP0OrBuilder() {
        if (p0Builder_ != null) {
          return p0Builder_.getMessageOrBuilder();
        } else {
          return p0_ == null ?
              SC2APIProtocol.Common.PointI.getDefaultInstance() : p0_;
        }
      }
      /**
       * <code>optional .SC2APIProtocol.PointI p0 = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Common.PointI, SC2APIProtocol.Common.PointI.Builder, SC2APIProtocol.Common.PointIOrBuilder> 
          getP0FieldBuilder() {
        if (p0Builder_ == null) {
          p0Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SC2APIProtocol.Common.PointI, SC2APIProtocol.Common.PointI.Builder, SC2APIProtocol.Common.PointIOrBuilder>(
                  getP0(),
                  getParentForChildren(),
                  isClean());
          p0_ = null;
        }
        return p0Builder_;
      }

      private SC2APIProtocol.Common.PointI p1_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Common.PointI, SC2APIProtocol.Common.PointI.Builder, SC2APIProtocol.Common.PointIOrBuilder> p1Builder_;
      /**
       * <code>optional .SC2APIProtocol.PointI p1 = 2;</code>
       */
      public boolean hasP1() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .SC2APIProtocol.PointI p1 = 2;</code>
       */
      public SC2APIProtocol.Common.PointI getP1() {
        if (p1Builder_ == null) {
          return p1_ == null ? SC2APIProtocol.Common.PointI.getDefaultInstance() : p1_;
        } else {
          return p1Builder_.getMessage();
        }
      }
      /**
       * <code>optional .SC2APIProtocol.PointI p1 = 2;</code>
       */
      public Builder setP1(SC2APIProtocol.Common.PointI value) {
        if (p1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          p1_ = value;
          onChanged();
        } else {
          p1Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.PointI p1 = 2;</code>
       */
      public Builder setP1(
          SC2APIProtocol.Common.PointI.Builder builderForValue) {
        if (p1Builder_ == null) {
          p1_ = builderForValue.build();
          onChanged();
        } else {
          p1Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.PointI p1 = 2;</code>
       */
      public Builder mergeP1(SC2APIProtocol.Common.PointI value) {
        if (p1Builder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              p1_ != null &&
              p1_ != SC2APIProtocol.Common.PointI.getDefaultInstance()) {
            p1_ =
              SC2APIProtocol.Common.PointI.newBuilder(p1_).mergeFrom(value).buildPartial();
          } else {
            p1_ = value;
          }
          onChanged();
        } else {
          p1Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.PointI p1 = 2;</code>
       */
      public Builder clearP1() {
        if (p1Builder_ == null) {
          p1_ = null;
          onChanged();
        } else {
          p1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.PointI p1 = 2;</code>
       */
      public SC2APIProtocol.Common.PointI.Builder getP1Builder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getP1FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SC2APIProtocol.PointI p1 = 2;</code>
       */
      public SC2APIProtocol.Common.PointIOrBuilder getP1OrBuilder() {
        if (p1Builder_ != null) {
          return p1Builder_.getMessageOrBuilder();
        } else {
          return p1_ == null ?
              SC2APIProtocol.Common.PointI.getDefaultInstance() : p1_;
        }
      }
      /**
       * <code>optional .SC2APIProtocol.PointI p1 = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Common.PointI, SC2APIProtocol.Common.PointI.Builder, SC2APIProtocol.Common.PointIOrBuilder> 
          getP1FieldBuilder() {
        if (p1Builder_ == null) {
          p1Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SC2APIProtocol.Common.PointI, SC2APIProtocol.Common.PointI.Builder, SC2APIProtocol.Common.PointIOrBuilder>(
                  getP1(),
                  getParentForChildren(),
                  isClean());
          p1_ = null;
        }
        return p1Builder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.RectangleI)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.RectangleI)
    private static final SC2APIProtocol.Common.RectangleI DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Common.RectangleI();
    }

    public static SC2APIProtocol.Common.RectangleI getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RectangleI>
        PARSER = new com.google.protobuf.AbstractParser<RectangleI>() {
      public RectangleI parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RectangleI(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RectangleI> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RectangleI> getParserForType() {
      return PARSER;
    }

    public SC2APIProtocol.Common.RectangleI getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Point2DOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.Point2D)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional float x = 1;</code>
     */
    boolean hasX();
    /**
     * <code>optional float x = 1;</code>
     */
    float getX();

    /**
     * <code>optional float y = 2;</code>
     */
    boolean hasY();
    /**
     * <code>optional float y = 2;</code>
     */
    float getY();
  }
  /**
   * <pre>
   * Point on the game board, 0..255.
   * Note: bottom left of the screen is 0, 0.
   * </pre>
   *
   * Protobuf type {@code SC2APIProtocol.Point2D}
   */
  public  static final class Point2D extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.Point2D)
      Point2DOrBuilder {
    // Use Point2D.newBuilder() to construct.
    private Point2D(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Point2D() {
      x_ = 0F;
      y_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Point2D(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              x_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              y_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Common.internal_static_SC2APIProtocol_Point2D_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Common.internal_static_SC2APIProtocol_Point2D_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Common.Point2D.class, SC2APIProtocol.Common.Point2D.Builder.class);
    }

    private int bitField0_;
    public static final int X_FIELD_NUMBER = 1;
    private float x_;
    /**
     * <code>optional float x = 1;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional float x = 1;</code>
     */
    public float getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private float y_;
    /**
     * <code>optional float y = 2;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float y = 2;</code>
     */
    public float getY() {
      return y_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, y_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Common.Point2D)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Common.Point2D other = (SC2APIProtocol.Common.Point2D) obj;

      boolean result = true;
      result = result && (hasX() == other.hasX());
      if (hasX()) {
        result = result && (
            java.lang.Float.floatToIntBits(getX())
            == java.lang.Float.floatToIntBits(
                other.getX()));
      }
      result = result && (hasY() == other.hasY());
      if (hasY()) {
        result = result && (
            java.lang.Float.floatToIntBits(getY())
            == java.lang.Float.floatToIntBits(
                other.getY()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasX()) {
        hash = (37 * hash) + X_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getX());
      }
      if (hasY()) {
        hash = (37 * hash) + Y_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getY());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Common.Point2D parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Common.Point2D parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Common.Point2D parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Common.Point2D parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Common.Point2D parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Common.Point2D parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Common.Point2D parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Common.Point2D parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Common.Point2D parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Common.Point2D parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Common.Point2D prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Point on the game board, 0..255.
     * Note: bottom left of the screen is 0, 0.
     * </pre>
     *
     * Protobuf type {@code SC2APIProtocol.Point2D}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.Point2D)
        SC2APIProtocol.Common.Point2DOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Common.internal_static_SC2APIProtocol_Point2D_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Common.internal_static_SC2APIProtocol_Point2D_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Common.Point2D.class, SC2APIProtocol.Common.Point2D.Builder.class);
      }

      // Construct using SC2APIProtocol.Common.Point2D.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        x_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Common.internal_static_SC2APIProtocol_Point2D_descriptor;
      }

      public SC2APIProtocol.Common.Point2D getDefaultInstanceForType() {
        return SC2APIProtocol.Common.Point2D.getDefaultInstance();
      }

      public SC2APIProtocol.Common.Point2D build() {
        SC2APIProtocol.Common.Point2D result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SC2APIProtocol.Common.Point2D buildPartial() {
        SC2APIProtocol.Common.Point2D result = new SC2APIProtocol.Common.Point2D(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Common.Point2D) {
          return mergeFrom((SC2APIProtocol.Common.Point2D)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Common.Point2D other) {
        if (other == SC2APIProtocol.Common.Point2D.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Common.Point2D parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Common.Point2D) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float x_ ;
      /**
       * <code>optional float x = 1;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional float x = 1;</code>
       */
      public float getX() {
        return x_;
      }
      /**
       * <code>optional float x = 1;</code>
       */
      public Builder setX(float value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float x = 1;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0F;
        onChanged();
        return this;
      }

      private float y_ ;
      /**
       * <code>optional float y = 2;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float y = 2;</code>
       */
      public float getY() {
        return y_;
      }
      /**
       * <code>optional float y = 2;</code>
       */
      public Builder setY(float value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float y = 2;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.Point2D)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.Point2D)
    private static final SC2APIProtocol.Common.Point2D DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Common.Point2D();
    }

    public static SC2APIProtocol.Common.Point2D getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Point2D>
        PARSER = new com.google.protobuf.AbstractParser<Point2D>() {
      public Point2D parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Point2D(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Point2D> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Point2D> getParserForType() {
      return PARSER;
    }

    public SC2APIProtocol.Common.Point2D getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.Point)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional float x = 1;</code>
     */
    boolean hasX();
    /**
     * <code>optional float x = 1;</code>
     */
    float getX();

    /**
     * <code>optional float y = 2;</code>
     */
    boolean hasY();
    /**
     * <code>optional float y = 2;</code>
     */
    float getY();

    /**
     * <code>optional float z = 3;</code>
     */
    boolean hasZ();
    /**
     * <code>optional float z = 3;</code>
     */
    float getZ();
  }
  /**
   * <pre>
   * Point on the game board, 0..255.
   * Note: bottom left of the screen is 0, 0.
   * </pre>
   *
   * Protobuf type {@code SC2APIProtocol.Point}
   */
  public  static final class Point extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.Point)
      PointOrBuilder {
    // Use Point.newBuilder() to construct.
    private Point(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Point() {
      x_ = 0F;
      y_ = 0F;
      z_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Point(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              x_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              y_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              z_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Common.internal_static_SC2APIProtocol_Point_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Common.internal_static_SC2APIProtocol_Point_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Common.Point.class, SC2APIProtocol.Common.Point.Builder.class);
    }

    private int bitField0_;
    public static final int X_FIELD_NUMBER = 1;
    private float x_;
    /**
     * <code>optional float x = 1;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional float x = 1;</code>
     */
    public float getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private float y_;
    /**
     * <code>optional float y = 2;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float y = 2;</code>
     */
    public float getY() {
      return y_;
    }

    public static final int Z_FIELD_NUMBER = 3;
    private float z_;
    /**
     * <code>optional float z = 3;</code>
     */
    public boolean hasZ() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float z = 3;</code>
     */
    public float getZ() {
      return z_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, z_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, z_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Common.Point)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Common.Point other = (SC2APIProtocol.Common.Point) obj;

      boolean result = true;
      result = result && (hasX() == other.hasX());
      if (hasX()) {
        result = result && (
            java.lang.Float.floatToIntBits(getX())
            == java.lang.Float.floatToIntBits(
                other.getX()));
      }
      result = result && (hasY() == other.hasY());
      if (hasY()) {
        result = result && (
            java.lang.Float.floatToIntBits(getY())
            == java.lang.Float.floatToIntBits(
                other.getY()));
      }
      result = result && (hasZ() == other.hasZ());
      if (hasZ()) {
        result = result && (
            java.lang.Float.floatToIntBits(getZ())
            == java.lang.Float.floatToIntBits(
                other.getZ()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasX()) {
        hash = (37 * hash) + X_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getX());
      }
      if (hasY()) {
        hash = (37 * hash) + Y_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getY());
      }
      if (hasZ()) {
        hash = (37 * hash) + Z_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getZ());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Common.Point parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Common.Point parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Common.Point parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Common.Point parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Common.Point parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Common.Point parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Common.Point parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Common.Point parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Common.Point parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Common.Point parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Common.Point prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Point on the game board, 0..255.
     * Note: bottom left of the screen is 0, 0.
     * </pre>
     *
     * Protobuf type {@code SC2APIProtocol.Point}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.Point)
        SC2APIProtocol.Common.PointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Common.internal_static_SC2APIProtocol_Point_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Common.internal_static_SC2APIProtocol_Point_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Common.Point.class, SC2APIProtocol.Common.Point.Builder.class);
      }

      // Construct using SC2APIProtocol.Common.Point.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        x_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        z_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Common.internal_static_SC2APIProtocol_Point_descriptor;
      }

      public SC2APIProtocol.Common.Point getDefaultInstanceForType() {
        return SC2APIProtocol.Common.Point.getDefaultInstance();
      }

      public SC2APIProtocol.Common.Point build() {
        SC2APIProtocol.Common.Point result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SC2APIProtocol.Common.Point buildPartial() {
        SC2APIProtocol.Common.Point result = new SC2APIProtocol.Common.Point(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.z_ = z_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Common.Point) {
          return mergeFrom((SC2APIProtocol.Common.Point)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Common.Point other) {
        if (other == SC2APIProtocol.Common.Point.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasZ()) {
          setZ(other.getZ());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Common.Point parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Common.Point) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float x_ ;
      /**
       * <code>optional float x = 1;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional float x = 1;</code>
       */
      public float getX() {
        return x_;
      }
      /**
       * <code>optional float x = 1;</code>
       */
      public Builder setX(float value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float x = 1;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0F;
        onChanged();
        return this;
      }

      private float y_ ;
      /**
       * <code>optional float y = 2;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float y = 2;</code>
       */
      public float getY() {
        return y_;
      }
      /**
       * <code>optional float y = 2;</code>
       */
      public Builder setY(float value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float y = 2;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0F;
        onChanged();
        return this;
      }

      private float z_ ;
      /**
       * <code>optional float z = 3;</code>
       */
      public boolean hasZ() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float z = 3;</code>
       */
      public float getZ() {
        return z_;
      }
      /**
       * <code>optional float z = 3;</code>
       */
      public Builder setZ(float value) {
        bitField0_ |= 0x00000004;
        z_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float z = 3;</code>
       */
      public Builder clearZ() {
        bitField0_ = (bitField0_ & ~0x00000004);
        z_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.Point)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.Point)
    private static final SC2APIProtocol.Common.Point DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Common.Point();
    }

    public static SC2APIProtocol.Common.Point getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Point>
        PARSER = new com.google.protobuf.AbstractParser<Point>() {
      public Point parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Point(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Point> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Point> getParserForType() {
      return PARSER;
    }

    public SC2APIProtocol.Common.Point getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Size2DIOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.Size2DI)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 x = 1;</code>
     */
    boolean hasX();
    /**
     * <code>optional int32 x = 1;</code>
     */
    int getX();

    /**
     * <code>optional int32 y = 2;</code>
     */
    boolean hasY();
    /**
     * <code>optional int32 y = 2;</code>
     */
    int getY();
  }
  /**
   * <pre>
   * Screen dimensions.
   * </pre>
   *
   * Protobuf type {@code SC2APIProtocol.Size2DI}
   */
  public  static final class Size2DI extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.Size2DI)
      Size2DIOrBuilder {
    // Use Size2DI.newBuilder() to construct.
    private Size2DI(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Size2DI() {
      x_ = 0;
      y_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Size2DI(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              x_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              y_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Common.internal_static_SC2APIProtocol_Size2DI_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Common.internal_static_SC2APIProtocol_Size2DI_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Common.Size2DI.class, SC2APIProtocol.Common.Size2DI.Builder.class);
    }

    private int bitField0_;
    public static final int X_FIELD_NUMBER = 1;
    private int x_;
    /**
     * <code>optional int32 x = 1;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 x = 1;</code>
     */
    public int getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private int y_;
    /**
     * <code>optional int32 y = 2;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 y = 2;</code>
     */
    public int getY() {
      return y_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, y_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, y_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Common.Size2DI)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Common.Size2DI other = (SC2APIProtocol.Common.Size2DI) obj;

      boolean result = true;
      result = result && (hasX() == other.hasX());
      if (hasX()) {
        result = result && (getX()
            == other.getX());
      }
      result = result && (hasY() == other.hasY());
      if (hasY()) {
        result = result && (getY()
            == other.getY());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasX()) {
        hash = (37 * hash) + X_FIELD_NUMBER;
        hash = (53 * hash) + getX();
      }
      if (hasY()) {
        hash = (37 * hash) + Y_FIELD_NUMBER;
        hash = (53 * hash) + getY();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Common.Size2DI parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Common.Size2DI parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Common.Size2DI parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Common.Size2DI parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Common.Size2DI parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Common.Size2DI parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Common.Size2DI parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Common.Size2DI parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Common.Size2DI parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Common.Size2DI parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Common.Size2DI prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Screen dimensions.
     * </pre>
     *
     * Protobuf type {@code SC2APIProtocol.Size2DI}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.Size2DI)
        SC2APIProtocol.Common.Size2DIOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Common.internal_static_SC2APIProtocol_Size2DI_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Common.internal_static_SC2APIProtocol_Size2DI_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Common.Size2DI.class, SC2APIProtocol.Common.Size2DI.Builder.class);
      }

      // Construct using SC2APIProtocol.Common.Size2DI.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Common.internal_static_SC2APIProtocol_Size2DI_descriptor;
      }

      public SC2APIProtocol.Common.Size2DI getDefaultInstanceForType() {
        return SC2APIProtocol.Common.Size2DI.getDefaultInstance();
      }

      public SC2APIProtocol.Common.Size2DI build() {
        SC2APIProtocol.Common.Size2DI result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SC2APIProtocol.Common.Size2DI buildPartial() {
        SC2APIProtocol.Common.Size2DI result = new SC2APIProtocol.Common.Size2DI(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Common.Size2DI) {
          return mergeFrom((SC2APIProtocol.Common.Size2DI)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Common.Size2DI other) {
        if (other == SC2APIProtocol.Common.Size2DI.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Common.Size2DI parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Common.Size2DI) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int x_ ;
      /**
       * <code>optional int32 x = 1;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 x = 1;</code>
       */
      public int getX() {
        return x_;
      }
      /**
       * <code>optional int32 x = 1;</code>
       */
      public Builder setX(int value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 x = 1;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0;
        onChanged();
        return this;
      }

      private int y_ ;
      /**
       * <code>optional int32 y = 2;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 y = 2;</code>
       */
      public int getY() {
        return y_;
      }
      /**
       * <code>optional int32 y = 2;</code>
       */
      public Builder setY(int value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 y = 2;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.Size2DI)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.Size2DI)
    private static final SC2APIProtocol.Common.Size2DI DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Common.Size2DI();
    }

    public static SC2APIProtocol.Common.Size2DI getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Size2DI>
        PARSER = new com.google.protobuf.AbstractParser<Size2DI>() {
      public Size2DI parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Size2DI(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Size2DI> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Size2DI> getParserForType() {
      return PARSER;
    }

    public SC2APIProtocol.Common.Size2DI getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_AvailableAbility_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_AvailableAbility_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_ImageData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_ImageData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_PointI_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_PointI_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_RectangleI_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_RectangleI_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_Point2D_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_Point2D_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_Point_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_Point_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_Size2DI_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_Size2DI_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014common.proto\022\016SC2APIProtocol\">\n\020Availa" +
      "bleAbility\022\022\n\nability_id\030\001 \001(\005\022\026\n\016requir" +
      "es_point\030\002 \001(\010\"X\n\tImageData\022\026\n\016bits_per_" +
      "pixel\030\001 \001(\005\022%\n\004size\030\002 \001(\0132\027.SC2APIProtoc" +
      "ol.Size2DI\022\014\n\004data\030\003 \001(\014\"\036\n\006PointI\022\t\n\001x\030" +
      "\001 \001(\005\022\t\n\001y\030\002 \001(\005\"T\n\nRectangleI\022\"\n\002p0\030\001 \001" +
      "(\0132\026.SC2APIProtocol.PointI\022\"\n\002p1\030\002 \001(\0132\026" +
      ".SC2APIProtocol.PointI\"\037\n\007Point2D\022\t\n\001x\030\001" +
      " \001(\002\022\t\n\001y\030\002 \001(\002\"(\n\005Point\022\t\n\001x\030\001 \001(\002\022\t\n\001y" +
      "\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"\037\n\007Size2DI\022\t\n\001x\030\001 \001(\005\022",
      "\t\n\001y\030\002 \001(\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_SC2APIProtocol_AvailableAbility_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SC2APIProtocol_AvailableAbility_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_AvailableAbility_descriptor,
        new java.lang.String[] { "AbilityId", "RequiresPoint", });
    internal_static_SC2APIProtocol_ImageData_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_SC2APIProtocol_ImageData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_ImageData_descriptor,
        new java.lang.String[] { "BitsPerPixel", "Size", "Data", });
    internal_static_SC2APIProtocol_PointI_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_SC2APIProtocol_PointI_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_PointI_descriptor,
        new java.lang.String[] { "X", "Y", });
    internal_static_SC2APIProtocol_RectangleI_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_SC2APIProtocol_RectangleI_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_RectangleI_descriptor,
        new java.lang.String[] { "P0", "P1", });
    internal_static_SC2APIProtocol_Point2D_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_SC2APIProtocol_Point2D_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_Point2D_descriptor,
        new java.lang.String[] { "X", "Y", });
    internal_static_SC2APIProtocol_Point_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_SC2APIProtocol_Point_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_Point_descriptor,
        new java.lang.String[] { "X", "Y", "Z", });
    internal_static_SC2APIProtocol_Size2DI_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_SC2APIProtocol_Size2DI_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_Size2DI_descriptor,
        new java.lang.String[] { "X", "Y", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
