// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: debug.proto

package SC2APIProtocol;

public final class Debug {
  private Debug() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code SC2APIProtocol.DebugGameState}
   */
  public enum DebugGameState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>show_map = 1;</code>
     */
    show_map(1),
    /**
     * <code>control_enemy = 2;</code>
     */
    control_enemy(2),
    /**
     * <code>food = 3;</code>
     */
    food(3),
    /**
     * <code>free = 4;</code>
     */
    free(4),
    /**
     * <code>all_resources = 5;</code>
     */
    all_resources(5),
    /**
     * <code>god = 6;</code>
     */
    god(6),
    /**
     * <code>minerals = 7;</code>
     */
    minerals(7),
    /**
     * <code>gas = 8;</code>
     */
    gas(8),
    /**
     * <code>cooldown = 9;</code>
     */
    cooldown(9),
    /**
     * <code>tech_tree = 10;</code>
     */
    tech_tree(10),
    /**
     * <code>upgrade = 11;</code>
     */
    upgrade(11),
    /**
     * <code>fast_build = 12;</code>
     */
    fast_build(12),
    ;

    /**
     * <code>show_map = 1;</code>
     */
    public static final int show_map_VALUE = 1;
    /**
     * <code>control_enemy = 2;</code>
     */
    public static final int control_enemy_VALUE = 2;
    /**
     * <code>food = 3;</code>
     */
    public static final int food_VALUE = 3;
    /**
     * <code>free = 4;</code>
     */
    public static final int free_VALUE = 4;
    /**
     * <code>all_resources = 5;</code>
     */
    public static final int all_resources_VALUE = 5;
    /**
     * <code>god = 6;</code>
     */
    public static final int god_VALUE = 6;
    /**
     * <code>minerals = 7;</code>
     */
    public static final int minerals_VALUE = 7;
    /**
     * <code>gas = 8;</code>
     */
    public static final int gas_VALUE = 8;
    /**
     * <code>cooldown = 9;</code>
     */
    public static final int cooldown_VALUE = 9;
    /**
     * <code>tech_tree = 10;</code>
     */
    public static final int tech_tree_VALUE = 10;
    /**
     * <code>upgrade = 11;</code>
     */
    public static final int upgrade_VALUE = 11;
    /**
     * <code>fast_build = 12;</code>
     */
    public static final int fast_build_VALUE = 12;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DebugGameState valueOf(int value) {
      return forNumber(value);
    }

    public static DebugGameState forNumber(int value) {
      switch (value) {
        case 1: return show_map;
        case 2: return control_enemy;
        case 3: return food;
        case 4: return free;
        case 5: return all_resources;
        case 6: return god;
        case 7: return minerals;
        case 8: return gas;
        case 9: return cooldown;
        case 10: return tech_tree;
        case 11: return upgrade;
        case 12: return fast_build;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DebugGameState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DebugGameState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DebugGameState>() {
            public DebugGameState findValueByNumber(int number) {
              return DebugGameState.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return SC2APIProtocol.Debug.getDescriptor().getEnumTypes().get(0);
    }

    private static final DebugGameState[] VALUES = values();

    public static DebugGameState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DebugGameState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SC2APIProtocol.DebugGameState)
  }

  public interface DebugCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.DebugCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .SC2APIProtocol.DebugDraw draw = 1;</code>
     */
    boolean hasDraw();
    /**
     * <code>optional .SC2APIProtocol.DebugDraw draw = 1;</code>
     */
    SC2APIProtocol.Debug.DebugDraw getDraw();
    /**
     * <code>optional .SC2APIProtocol.DebugDraw draw = 1;</code>
     */
    SC2APIProtocol.Debug.DebugDrawOrBuilder getDrawOrBuilder();

    /**
     * <code>optional .SC2APIProtocol.DebugGameState game_state = 2;</code>
     */
    boolean hasGameState();
    /**
     * <code>optional .SC2APIProtocol.DebugGameState game_state = 2;</code>
     */
    SC2APIProtocol.Debug.DebugGameState getGameState();

    /**
     * <code>optional .SC2APIProtocol.DebugCreateUnit create_unit = 3;</code>
     */
    boolean hasCreateUnit();
    /**
     * <code>optional .SC2APIProtocol.DebugCreateUnit create_unit = 3;</code>
     */
    SC2APIProtocol.Debug.DebugCreateUnit getCreateUnit();
    /**
     * <code>optional .SC2APIProtocol.DebugCreateUnit create_unit = 3;</code>
     */
    SC2APIProtocol.Debug.DebugCreateUnitOrBuilder getCreateUnitOrBuilder();

    /**
     * <code>optional .SC2APIProtocol.DebugKillUnit kill_unit = 4;</code>
     */
    boolean hasKillUnit();
    /**
     * <code>optional .SC2APIProtocol.DebugKillUnit kill_unit = 4;</code>
     */
    SC2APIProtocol.Debug.DebugKillUnit getKillUnit();
    /**
     * <code>optional .SC2APIProtocol.DebugKillUnit kill_unit = 4;</code>
     */
    SC2APIProtocol.Debug.DebugKillUnitOrBuilder getKillUnitOrBuilder();

    /**
     * <code>optional .SC2APIProtocol.DebugTestProcess test_process = 5;</code>
     */
    boolean hasTestProcess();
    /**
     * <code>optional .SC2APIProtocol.DebugTestProcess test_process = 5;</code>
     */
    SC2APIProtocol.Debug.DebugTestProcess getTestProcess();
    /**
     * <code>optional .SC2APIProtocol.DebugTestProcess test_process = 5;</code>
     */
    SC2APIProtocol.Debug.DebugTestProcessOrBuilder getTestProcessOrBuilder();

    /**
     * <pre>
     * Useful only for single-player "curriculum" maps.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.DebugSetScore score = 6;</code>
     */
    boolean hasScore();
    /**
     * <pre>
     * Useful only for single-player "curriculum" maps.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.DebugSetScore score = 6;</code>
     */
    SC2APIProtocol.Debug.DebugSetScore getScore();
    /**
     * <pre>
     * Useful only for single-player "curriculum" maps.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.DebugSetScore score = 6;</code>
     */
    SC2APIProtocol.Debug.DebugSetScoreOrBuilder getScoreOrBuilder();

    /**
     * <code>optional .SC2APIProtocol.DebugEndGame end_game = 7;</code>
     */
    boolean hasEndGame();
    /**
     * <code>optional .SC2APIProtocol.DebugEndGame end_game = 7;</code>
     */
    SC2APIProtocol.Debug.DebugEndGame getEndGame();
    /**
     * <code>optional .SC2APIProtocol.DebugEndGame end_game = 7;</code>
     */
    SC2APIProtocol.Debug.DebugEndGameOrBuilder getEndGameOrBuilder();

    /**
     * <code>optional .SC2APIProtocol.DebugSetUnitValue unit_value = 8;</code>
     */
    boolean hasUnitValue();
    /**
     * <code>optional .SC2APIProtocol.DebugSetUnitValue unit_value = 8;</code>
     */
    SC2APIProtocol.Debug.DebugSetUnitValue getUnitValue();
    /**
     * <code>optional .SC2APIProtocol.DebugSetUnitValue unit_value = 8;</code>
     */
    SC2APIProtocol.Debug.DebugSetUnitValueOrBuilder getUnitValueOrBuilder();

    /**
     * <pre>
     * TODO.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.DebugChat chat = 9;</code>
     */
    boolean hasChat();
    /**
     * <pre>
     * TODO.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.DebugChat chat = 9;</code>
     */
    SC2APIProtocol.Debug.DebugChat getChat();
    /**
     * <pre>
     * TODO.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.DebugChat chat = 9;</code>
     */
    SC2APIProtocol.Debug.DebugChatOrBuilder getChatOrBuilder();

    public SC2APIProtocol.Debug.DebugCommand.CommandCase getCommandCase();
  }
  /**
   * <pre>
   * Issue various useful commands to the game engine.
   * </pre>
   *
   * Protobuf type {@code SC2APIProtocol.DebugCommand}
   */
  public  static final class DebugCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.DebugCommand)
      DebugCommandOrBuilder {
    // Use DebugCommand.newBuilder() to construct.
    private DebugCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DebugCommand() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DebugCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              SC2APIProtocol.Debug.DebugDraw.Builder subBuilder = null;
              if (commandCase_ == 1) {
                subBuilder = ((SC2APIProtocol.Debug.DebugDraw) command_).toBuilder();
              }
              command_ =
                  input.readMessage(SC2APIProtocol.Debug.DebugDraw.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((SC2APIProtocol.Debug.DebugDraw) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 1;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              SC2APIProtocol.Debug.DebugGameState value = SC2APIProtocol.Debug.DebugGameState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                commandCase_ = 2;
                command_ = rawValue;
              }
              break;
            }
            case 26: {
              SC2APIProtocol.Debug.DebugCreateUnit.Builder subBuilder = null;
              if (commandCase_ == 3) {
                subBuilder = ((SC2APIProtocol.Debug.DebugCreateUnit) command_).toBuilder();
              }
              command_ =
                  input.readMessage(SC2APIProtocol.Debug.DebugCreateUnit.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((SC2APIProtocol.Debug.DebugCreateUnit) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 3;
              break;
            }
            case 34: {
              SC2APIProtocol.Debug.DebugKillUnit.Builder subBuilder = null;
              if (commandCase_ == 4) {
                subBuilder = ((SC2APIProtocol.Debug.DebugKillUnit) command_).toBuilder();
              }
              command_ =
                  input.readMessage(SC2APIProtocol.Debug.DebugKillUnit.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((SC2APIProtocol.Debug.DebugKillUnit) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 4;
              break;
            }
            case 42: {
              SC2APIProtocol.Debug.DebugTestProcess.Builder subBuilder = null;
              if (commandCase_ == 5) {
                subBuilder = ((SC2APIProtocol.Debug.DebugTestProcess) command_).toBuilder();
              }
              command_ =
                  input.readMessage(SC2APIProtocol.Debug.DebugTestProcess.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((SC2APIProtocol.Debug.DebugTestProcess) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 5;
              break;
            }
            case 50: {
              SC2APIProtocol.Debug.DebugSetScore.Builder subBuilder = null;
              if (commandCase_ == 6) {
                subBuilder = ((SC2APIProtocol.Debug.DebugSetScore) command_).toBuilder();
              }
              command_ =
                  input.readMessage(SC2APIProtocol.Debug.DebugSetScore.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((SC2APIProtocol.Debug.DebugSetScore) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 6;
              break;
            }
            case 58: {
              SC2APIProtocol.Debug.DebugEndGame.Builder subBuilder = null;
              if (commandCase_ == 7) {
                subBuilder = ((SC2APIProtocol.Debug.DebugEndGame) command_).toBuilder();
              }
              command_ =
                  input.readMessage(SC2APIProtocol.Debug.DebugEndGame.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((SC2APIProtocol.Debug.DebugEndGame) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 7;
              break;
            }
            case 66: {
              SC2APIProtocol.Debug.DebugSetUnitValue.Builder subBuilder = null;
              if (commandCase_ == 8) {
                subBuilder = ((SC2APIProtocol.Debug.DebugSetUnitValue) command_).toBuilder();
              }
              command_ =
                  input.readMessage(SC2APIProtocol.Debug.DebugSetUnitValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((SC2APIProtocol.Debug.DebugSetUnitValue) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 8;
              break;
            }
            case 74: {
              SC2APIProtocol.Debug.DebugChat.Builder subBuilder = null;
              if (commandCase_ == 9) {
                subBuilder = ((SC2APIProtocol.Debug.DebugChat) command_).toBuilder();
              }
              command_ =
                  input.readMessage(SC2APIProtocol.Debug.DebugChat.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((SC2APIProtocol.Debug.DebugChat) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 9;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugCommand_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Debug.DebugCommand.class, SC2APIProtocol.Debug.DebugCommand.Builder.class);
    }

    private int bitField0_;
    private int commandCase_ = 0;
    private java.lang.Object command_;
    public enum CommandCase
        implements com.google.protobuf.Internal.EnumLite {
      DRAW(1),
      GAME_STATE(2),
      CREATE_UNIT(3),
      KILL_UNIT(4),
      TEST_PROCESS(5),
      SCORE(6),
      END_GAME(7),
      UNIT_VALUE(8),
      CHAT(9),
      COMMAND_NOT_SET(0);
      private final int value;
      private CommandCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static CommandCase valueOf(int value) {
        return forNumber(value);
      }

      public static CommandCase forNumber(int value) {
        switch (value) {
          case 1: return DRAW;
          case 2: return GAME_STATE;
          case 3: return CREATE_UNIT;
          case 4: return KILL_UNIT;
          case 5: return TEST_PROCESS;
          case 6: return SCORE;
          case 7: return END_GAME;
          case 8: return UNIT_VALUE;
          case 9: return CHAT;
          case 0: return COMMAND_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public CommandCase
    getCommandCase() {
      return CommandCase.forNumber(
          commandCase_);
    }

    public static final int DRAW_FIELD_NUMBER = 1;
    /**
     * <code>optional .SC2APIProtocol.DebugDraw draw = 1;</code>
     */
    public boolean hasDraw() {
      return commandCase_ == 1;
    }
    /**
     * <code>optional .SC2APIProtocol.DebugDraw draw = 1;</code>
     */
    public SC2APIProtocol.Debug.DebugDraw getDraw() {
      if (commandCase_ == 1) {
         return (SC2APIProtocol.Debug.DebugDraw) command_;
      }
      return SC2APIProtocol.Debug.DebugDraw.getDefaultInstance();
    }
    /**
     * <code>optional .SC2APIProtocol.DebugDraw draw = 1;</code>
     */
    public SC2APIProtocol.Debug.DebugDrawOrBuilder getDrawOrBuilder() {
      if (commandCase_ == 1) {
         return (SC2APIProtocol.Debug.DebugDraw) command_;
      }
      return SC2APIProtocol.Debug.DebugDraw.getDefaultInstance();
    }

    public static final int GAME_STATE_FIELD_NUMBER = 2;
    /**
     * <code>optional .SC2APIProtocol.DebugGameState game_state = 2;</code>
     */
    public boolean hasGameState() {
      return commandCase_ == 2;
    }
    /**
     * <code>optional .SC2APIProtocol.DebugGameState game_state = 2;</code>
     */
    public SC2APIProtocol.Debug.DebugGameState getGameState() {
      if (commandCase_ == 2) {
        SC2APIProtocol.Debug.DebugGameState result = SC2APIProtocol.Debug.DebugGameState.valueOf(
            (java.lang.Integer) command_);
        return result == null ? SC2APIProtocol.Debug.DebugGameState.show_map : result;
      }
      return SC2APIProtocol.Debug.DebugGameState.show_map;
    }

    public static final int CREATE_UNIT_FIELD_NUMBER = 3;
    /**
     * <code>optional .SC2APIProtocol.DebugCreateUnit create_unit = 3;</code>
     */
    public boolean hasCreateUnit() {
      return commandCase_ == 3;
    }
    /**
     * <code>optional .SC2APIProtocol.DebugCreateUnit create_unit = 3;</code>
     */
    public SC2APIProtocol.Debug.DebugCreateUnit getCreateUnit() {
      if (commandCase_ == 3) {
         return (SC2APIProtocol.Debug.DebugCreateUnit) command_;
      }
      return SC2APIProtocol.Debug.DebugCreateUnit.getDefaultInstance();
    }
    /**
     * <code>optional .SC2APIProtocol.DebugCreateUnit create_unit = 3;</code>
     */
    public SC2APIProtocol.Debug.DebugCreateUnitOrBuilder getCreateUnitOrBuilder() {
      if (commandCase_ == 3) {
         return (SC2APIProtocol.Debug.DebugCreateUnit) command_;
      }
      return SC2APIProtocol.Debug.DebugCreateUnit.getDefaultInstance();
    }

    public static final int KILL_UNIT_FIELD_NUMBER = 4;
    /**
     * <code>optional .SC2APIProtocol.DebugKillUnit kill_unit = 4;</code>
     */
    public boolean hasKillUnit() {
      return commandCase_ == 4;
    }
    /**
     * <code>optional .SC2APIProtocol.DebugKillUnit kill_unit = 4;</code>
     */
    public SC2APIProtocol.Debug.DebugKillUnit getKillUnit() {
      if (commandCase_ == 4) {
         return (SC2APIProtocol.Debug.DebugKillUnit) command_;
      }
      return SC2APIProtocol.Debug.DebugKillUnit.getDefaultInstance();
    }
    /**
     * <code>optional .SC2APIProtocol.DebugKillUnit kill_unit = 4;</code>
     */
    public SC2APIProtocol.Debug.DebugKillUnitOrBuilder getKillUnitOrBuilder() {
      if (commandCase_ == 4) {
         return (SC2APIProtocol.Debug.DebugKillUnit) command_;
      }
      return SC2APIProtocol.Debug.DebugKillUnit.getDefaultInstance();
    }

    public static final int TEST_PROCESS_FIELD_NUMBER = 5;
    /**
     * <code>optional .SC2APIProtocol.DebugTestProcess test_process = 5;</code>
     */
    public boolean hasTestProcess() {
      return commandCase_ == 5;
    }
    /**
     * <code>optional .SC2APIProtocol.DebugTestProcess test_process = 5;</code>
     */
    public SC2APIProtocol.Debug.DebugTestProcess getTestProcess() {
      if (commandCase_ == 5) {
         return (SC2APIProtocol.Debug.DebugTestProcess) command_;
      }
      return SC2APIProtocol.Debug.DebugTestProcess.getDefaultInstance();
    }
    /**
     * <code>optional .SC2APIProtocol.DebugTestProcess test_process = 5;</code>
     */
    public SC2APIProtocol.Debug.DebugTestProcessOrBuilder getTestProcessOrBuilder() {
      if (commandCase_ == 5) {
         return (SC2APIProtocol.Debug.DebugTestProcess) command_;
      }
      return SC2APIProtocol.Debug.DebugTestProcess.getDefaultInstance();
    }

    public static final int SCORE_FIELD_NUMBER = 6;
    /**
     * <pre>
     * Useful only for single-player "curriculum" maps.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.DebugSetScore score = 6;</code>
     */
    public boolean hasScore() {
      return commandCase_ == 6;
    }
    /**
     * <pre>
     * Useful only for single-player "curriculum" maps.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.DebugSetScore score = 6;</code>
     */
    public SC2APIProtocol.Debug.DebugSetScore getScore() {
      if (commandCase_ == 6) {
         return (SC2APIProtocol.Debug.DebugSetScore) command_;
      }
      return SC2APIProtocol.Debug.DebugSetScore.getDefaultInstance();
    }
    /**
     * <pre>
     * Useful only for single-player "curriculum" maps.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.DebugSetScore score = 6;</code>
     */
    public SC2APIProtocol.Debug.DebugSetScoreOrBuilder getScoreOrBuilder() {
      if (commandCase_ == 6) {
         return (SC2APIProtocol.Debug.DebugSetScore) command_;
      }
      return SC2APIProtocol.Debug.DebugSetScore.getDefaultInstance();
    }

    public static final int END_GAME_FIELD_NUMBER = 7;
    /**
     * <code>optional .SC2APIProtocol.DebugEndGame end_game = 7;</code>
     */
    public boolean hasEndGame() {
      return commandCase_ == 7;
    }
    /**
     * <code>optional .SC2APIProtocol.DebugEndGame end_game = 7;</code>
     */
    public SC2APIProtocol.Debug.DebugEndGame getEndGame() {
      if (commandCase_ == 7) {
         return (SC2APIProtocol.Debug.DebugEndGame) command_;
      }
      return SC2APIProtocol.Debug.DebugEndGame.getDefaultInstance();
    }
    /**
     * <code>optional .SC2APIProtocol.DebugEndGame end_game = 7;</code>
     */
    public SC2APIProtocol.Debug.DebugEndGameOrBuilder getEndGameOrBuilder() {
      if (commandCase_ == 7) {
         return (SC2APIProtocol.Debug.DebugEndGame) command_;
      }
      return SC2APIProtocol.Debug.DebugEndGame.getDefaultInstance();
    }

    public static final int UNIT_VALUE_FIELD_NUMBER = 8;
    /**
     * <code>optional .SC2APIProtocol.DebugSetUnitValue unit_value = 8;</code>
     */
    public boolean hasUnitValue() {
      return commandCase_ == 8;
    }
    /**
     * <code>optional .SC2APIProtocol.DebugSetUnitValue unit_value = 8;</code>
     */
    public SC2APIProtocol.Debug.DebugSetUnitValue getUnitValue() {
      if (commandCase_ == 8) {
         return (SC2APIProtocol.Debug.DebugSetUnitValue) command_;
      }
      return SC2APIProtocol.Debug.DebugSetUnitValue.getDefaultInstance();
    }
    /**
     * <code>optional .SC2APIProtocol.DebugSetUnitValue unit_value = 8;</code>
     */
    public SC2APIProtocol.Debug.DebugSetUnitValueOrBuilder getUnitValueOrBuilder() {
      if (commandCase_ == 8) {
         return (SC2APIProtocol.Debug.DebugSetUnitValue) command_;
      }
      return SC2APIProtocol.Debug.DebugSetUnitValue.getDefaultInstance();
    }

    public static final int CHAT_FIELD_NUMBER = 9;
    /**
     * <pre>
     * TODO.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.DebugChat chat = 9;</code>
     */
    public boolean hasChat() {
      return commandCase_ == 9;
    }
    /**
     * <pre>
     * TODO.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.DebugChat chat = 9;</code>
     */
    public SC2APIProtocol.Debug.DebugChat getChat() {
      if (commandCase_ == 9) {
         return (SC2APIProtocol.Debug.DebugChat) command_;
      }
      return SC2APIProtocol.Debug.DebugChat.getDefaultInstance();
    }
    /**
     * <pre>
     * TODO.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.DebugChat chat = 9;</code>
     */
    public SC2APIProtocol.Debug.DebugChatOrBuilder getChatOrBuilder() {
      if (commandCase_ == 9) {
         return (SC2APIProtocol.Debug.DebugChat) command_;
      }
      return SC2APIProtocol.Debug.DebugChat.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (commandCase_ == 1) {
        output.writeMessage(1, (SC2APIProtocol.Debug.DebugDraw) command_);
      }
      if (commandCase_ == 2) {
        output.writeEnum(2, ((java.lang.Integer) command_));
      }
      if (commandCase_ == 3) {
        output.writeMessage(3, (SC2APIProtocol.Debug.DebugCreateUnit) command_);
      }
      if (commandCase_ == 4) {
        output.writeMessage(4, (SC2APIProtocol.Debug.DebugKillUnit) command_);
      }
      if (commandCase_ == 5) {
        output.writeMessage(5, (SC2APIProtocol.Debug.DebugTestProcess) command_);
      }
      if (commandCase_ == 6) {
        output.writeMessage(6, (SC2APIProtocol.Debug.DebugSetScore) command_);
      }
      if (commandCase_ == 7) {
        output.writeMessage(7, (SC2APIProtocol.Debug.DebugEndGame) command_);
      }
      if (commandCase_ == 8) {
        output.writeMessage(8, (SC2APIProtocol.Debug.DebugSetUnitValue) command_);
      }
      if (commandCase_ == 9) {
        output.writeMessage(9, (SC2APIProtocol.Debug.DebugChat) command_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (commandCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (SC2APIProtocol.Debug.DebugDraw) command_);
      }
      if (commandCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, ((java.lang.Integer) command_));
      }
      if (commandCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (SC2APIProtocol.Debug.DebugCreateUnit) command_);
      }
      if (commandCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (SC2APIProtocol.Debug.DebugKillUnit) command_);
      }
      if (commandCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (SC2APIProtocol.Debug.DebugTestProcess) command_);
      }
      if (commandCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (SC2APIProtocol.Debug.DebugSetScore) command_);
      }
      if (commandCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (SC2APIProtocol.Debug.DebugEndGame) command_);
      }
      if (commandCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (SC2APIProtocol.Debug.DebugSetUnitValue) command_);
      }
      if (commandCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (SC2APIProtocol.Debug.DebugChat) command_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Debug.DebugCommand)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Debug.DebugCommand other = (SC2APIProtocol.Debug.DebugCommand) obj;

      boolean result = true;
      result = result && getCommandCase().equals(
          other.getCommandCase());
      if (!result) return false;
      switch (commandCase_) {
        case 1:
          result = result && getDraw()
              .equals(other.getDraw());
          break;
        case 2:
          result = result && getGameState()
              .equals(other.getGameState());
          break;
        case 3:
          result = result && getCreateUnit()
              .equals(other.getCreateUnit());
          break;
        case 4:
          result = result && getKillUnit()
              .equals(other.getKillUnit());
          break;
        case 5:
          result = result && getTestProcess()
              .equals(other.getTestProcess());
          break;
        case 6:
          result = result && getScore()
              .equals(other.getScore());
          break;
        case 7:
          result = result && getEndGame()
              .equals(other.getEndGame());
          break;
        case 8:
          result = result && getUnitValue()
              .equals(other.getUnitValue());
          break;
        case 9:
          result = result && getChat()
              .equals(other.getChat());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      switch (commandCase_) {
        case 1:
          hash = (37 * hash) + DRAW_FIELD_NUMBER;
          hash = (53 * hash) + getDraw().hashCode();
          break;
        case 2:
          hash = (37 * hash) + GAME_STATE_FIELD_NUMBER;
          hash = (53 * hash) + getGameState().getNumber();
          break;
        case 3:
          hash = (37 * hash) + CREATE_UNIT_FIELD_NUMBER;
          hash = (53 * hash) + getCreateUnit().hashCode();
          break;
        case 4:
          hash = (37 * hash) + KILL_UNIT_FIELD_NUMBER;
          hash = (53 * hash) + getKillUnit().hashCode();
          break;
        case 5:
          hash = (37 * hash) + TEST_PROCESS_FIELD_NUMBER;
          hash = (53 * hash) + getTestProcess().hashCode();
          break;
        case 6:
          hash = (37 * hash) + SCORE_FIELD_NUMBER;
          hash = (53 * hash) + getScore().hashCode();
          break;
        case 7:
          hash = (37 * hash) + END_GAME_FIELD_NUMBER;
          hash = (53 * hash) + getEndGame().hashCode();
          break;
        case 8:
          hash = (37 * hash) + UNIT_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getUnitValue().hashCode();
          break;
        case 9:
          hash = (37 * hash) + CHAT_FIELD_NUMBER;
          hash = (53 * hash) + getChat().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Debug.DebugCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Debug.DebugCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Issue various useful commands to the game engine.
     * </pre>
     *
     * Protobuf type {@code SC2APIProtocol.DebugCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.DebugCommand)
        SC2APIProtocol.Debug.DebugCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugCommand_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Debug.DebugCommand.class, SC2APIProtocol.Debug.DebugCommand.Builder.class);
      }

      // Construct using SC2APIProtocol.Debug.DebugCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        commandCase_ = 0;
        command_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugCommand_descriptor;
      }

      public SC2APIProtocol.Debug.DebugCommand getDefaultInstanceForType() {
        return SC2APIProtocol.Debug.DebugCommand.getDefaultInstance();
      }

      public SC2APIProtocol.Debug.DebugCommand build() {
        SC2APIProtocol.Debug.DebugCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SC2APIProtocol.Debug.DebugCommand buildPartial() {
        SC2APIProtocol.Debug.DebugCommand result = new SC2APIProtocol.Debug.DebugCommand(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (commandCase_ == 1) {
          if (drawBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = drawBuilder_.build();
          }
        }
        if (commandCase_ == 2) {
          result.command_ = command_;
        }
        if (commandCase_ == 3) {
          if (createUnitBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = createUnitBuilder_.build();
          }
        }
        if (commandCase_ == 4) {
          if (killUnitBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = killUnitBuilder_.build();
          }
        }
        if (commandCase_ == 5) {
          if (testProcessBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = testProcessBuilder_.build();
          }
        }
        if (commandCase_ == 6) {
          if (scoreBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = scoreBuilder_.build();
          }
        }
        if (commandCase_ == 7) {
          if (endGameBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = endGameBuilder_.build();
          }
        }
        if (commandCase_ == 8) {
          if (unitValueBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = unitValueBuilder_.build();
          }
        }
        if (commandCase_ == 9) {
          if (chatBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = chatBuilder_.build();
          }
        }
        result.bitField0_ = to_bitField0_;
        result.commandCase_ = commandCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Debug.DebugCommand) {
          return mergeFrom((SC2APIProtocol.Debug.DebugCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Debug.DebugCommand other) {
        if (other == SC2APIProtocol.Debug.DebugCommand.getDefaultInstance()) return this;
        switch (other.getCommandCase()) {
          case DRAW: {
            mergeDraw(other.getDraw());
            break;
          }
          case GAME_STATE: {
            setGameState(other.getGameState());
            break;
          }
          case CREATE_UNIT: {
            mergeCreateUnit(other.getCreateUnit());
            break;
          }
          case KILL_UNIT: {
            mergeKillUnit(other.getKillUnit());
            break;
          }
          case TEST_PROCESS: {
            mergeTestProcess(other.getTestProcess());
            break;
          }
          case SCORE: {
            mergeScore(other.getScore());
            break;
          }
          case END_GAME: {
            mergeEndGame(other.getEndGame());
            break;
          }
          case UNIT_VALUE: {
            mergeUnitValue(other.getUnitValue());
            break;
          }
          case CHAT: {
            mergeChat(other.getChat());
            break;
          }
          case COMMAND_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Debug.DebugCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Debug.DebugCommand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int commandCase_ = 0;
      private java.lang.Object command_;
      public CommandCase
          getCommandCase() {
        return CommandCase.forNumber(
            commandCase_);
      }

      public Builder clearCommand() {
        commandCase_ = 0;
        command_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.DebugDraw, SC2APIProtocol.Debug.DebugDraw.Builder, SC2APIProtocol.Debug.DebugDrawOrBuilder> drawBuilder_;
      /**
       * <code>optional .SC2APIProtocol.DebugDraw draw = 1;</code>
       */
      public boolean hasDraw() {
        return commandCase_ == 1;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugDraw draw = 1;</code>
       */
      public SC2APIProtocol.Debug.DebugDraw getDraw() {
        if (drawBuilder_ == null) {
          if (commandCase_ == 1) {
            return (SC2APIProtocol.Debug.DebugDraw) command_;
          }
          return SC2APIProtocol.Debug.DebugDraw.getDefaultInstance();
        } else {
          if (commandCase_ == 1) {
            return drawBuilder_.getMessage();
          }
          return SC2APIProtocol.Debug.DebugDraw.getDefaultInstance();
        }
      }
      /**
       * <code>optional .SC2APIProtocol.DebugDraw draw = 1;</code>
       */
      public Builder setDraw(SC2APIProtocol.Debug.DebugDraw value) {
        if (drawBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          drawBuilder_.setMessage(value);
        }
        commandCase_ = 1;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugDraw draw = 1;</code>
       */
      public Builder setDraw(
          SC2APIProtocol.Debug.DebugDraw.Builder builderForValue) {
        if (drawBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          drawBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 1;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugDraw draw = 1;</code>
       */
      public Builder mergeDraw(SC2APIProtocol.Debug.DebugDraw value) {
        if (drawBuilder_ == null) {
          if (commandCase_ == 1 &&
              command_ != SC2APIProtocol.Debug.DebugDraw.getDefaultInstance()) {
            command_ = SC2APIProtocol.Debug.DebugDraw.newBuilder((SC2APIProtocol.Debug.DebugDraw) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 1) {
            drawBuilder_.mergeFrom(value);
          }
          drawBuilder_.setMessage(value);
        }
        commandCase_ = 1;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugDraw draw = 1;</code>
       */
      public Builder clearDraw() {
        if (drawBuilder_ == null) {
          if (commandCase_ == 1) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 1) {
            commandCase_ = 0;
            command_ = null;
          }
          drawBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugDraw draw = 1;</code>
       */
      public SC2APIProtocol.Debug.DebugDraw.Builder getDrawBuilder() {
        return getDrawFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SC2APIProtocol.DebugDraw draw = 1;</code>
       */
      public SC2APIProtocol.Debug.DebugDrawOrBuilder getDrawOrBuilder() {
        if ((commandCase_ == 1) && (drawBuilder_ != null)) {
          return drawBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 1) {
            return (SC2APIProtocol.Debug.DebugDraw) command_;
          }
          return SC2APIProtocol.Debug.DebugDraw.getDefaultInstance();
        }
      }
      /**
       * <code>optional .SC2APIProtocol.DebugDraw draw = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.DebugDraw, SC2APIProtocol.Debug.DebugDraw.Builder, SC2APIProtocol.Debug.DebugDrawOrBuilder> 
          getDrawFieldBuilder() {
        if (drawBuilder_ == null) {
          if (!(commandCase_ == 1)) {
            command_ = SC2APIProtocol.Debug.DebugDraw.getDefaultInstance();
          }
          drawBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SC2APIProtocol.Debug.DebugDraw, SC2APIProtocol.Debug.DebugDraw.Builder, SC2APIProtocol.Debug.DebugDrawOrBuilder>(
                  (SC2APIProtocol.Debug.DebugDraw) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 1;
        onChanged();;
        return drawBuilder_;
      }

      /**
       * <code>optional .SC2APIProtocol.DebugGameState game_state = 2;</code>
       */
      public boolean hasGameState() {
        return commandCase_ == 2;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugGameState game_state = 2;</code>
       */
      public SC2APIProtocol.Debug.DebugGameState getGameState() {
        if (commandCase_ == 2) {
          SC2APIProtocol.Debug.DebugGameState result = SC2APIProtocol.Debug.DebugGameState.valueOf(
              (java.lang.Integer) command_);
          return result == null ? SC2APIProtocol.Debug.DebugGameState.show_map : result;
        }
        return SC2APIProtocol.Debug.DebugGameState.show_map;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugGameState game_state = 2;</code>
       */
      public Builder setGameState(SC2APIProtocol.Debug.DebugGameState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        commandCase_ = 2;
        command_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugGameState game_state = 2;</code>
       */
      public Builder clearGameState() {
        if (commandCase_ == 2) {
          commandCase_ = 0;
          command_ = null;
          onChanged();
        }
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.DebugCreateUnit, SC2APIProtocol.Debug.DebugCreateUnit.Builder, SC2APIProtocol.Debug.DebugCreateUnitOrBuilder> createUnitBuilder_;
      /**
       * <code>optional .SC2APIProtocol.DebugCreateUnit create_unit = 3;</code>
       */
      public boolean hasCreateUnit() {
        return commandCase_ == 3;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugCreateUnit create_unit = 3;</code>
       */
      public SC2APIProtocol.Debug.DebugCreateUnit getCreateUnit() {
        if (createUnitBuilder_ == null) {
          if (commandCase_ == 3) {
            return (SC2APIProtocol.Debug.DebugCreateUnit) command_;
          }
          return SC2APIProtocol.Debug.DebugCreateUnit.getDefaultInstance();
        } else {
          if (commandCase_ == 3) {
            return createUnitBuilder_.getMessage();
          }
          return SC2APIProtocol.Debug.DebugCreateUnit.getDefaultInstance();
        }
      }
      /**
       * <code>optional .SC2APIProtocol.DebugCreateUnit create_unit = 3;</code>
       */
      public Builder setCreateUnit(SC2APIProtocol.Debug.DebugCreateUnit value) {
        if (createUnitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          createUnitBuilder_.setMessage(value);
        }
        commandCase_ = 3;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugCreateUnit create_unit = 3;</code>
       */
      public Builder setCreateUnit(
          SC2APIProtocol.Debug.DebugCreateUnit.Builder builderForValue) {
        if (createUnitBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          createUnitBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 3;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugCreateUnit create_unit = 3;</code>
       */
      public Builder mergeCreateUnit(SC2APIProtocol.Debug.DebugCreateUnit value) {
        if (createUnitBuilder_ == null) {
          if (commandCase_ == 3 &&
              command_ != SC2APIProtocol.Debug.DebugCreateUnit.getDefaultInstance()) {
            command_ = SC2APIProtocol.Debug.DebugCreateUnit.newBuilder((SC2APIProtocol.Debug.DebugCreateUnit) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 3) {
            createUnitBuilder_.mergeFrom(value);
          }
          createUnitBuilder_.setMessage(value);
        }
        commandCase_ = 3;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugCreateUnit create_unit = 3;</code>
       */
      public Builder clearCreateUnit() {
        if (createUnitBuilder_ == null) {
          if (commandCase_ == 3) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 3) {
            commandCase_ = 0;
            command_ = null;
          }
          createUnitBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugCreateUnit create_unit = 3;</code>
       */
      public SC2APIProtocol.Debug.DebugCreateUnit.Builder getCreateUnitBuilder() {
        return getCreateUnitFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SC2APIProtocol.DebugCreateUnit create_unit = 3;</code>
       */
      public SC2APIProtocol.Debug.DebugCreateUnitOrBuilder getCreateUnitOrBuilder() {
        if ((commandCase_ == 3) && (createUnitBuilder_ != null)) {
          return createUnitBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 3) {
            return (SC2APIProtocol.Debug.DebugCreateUnit) command_;
          }
          return SC2APIProtocol.Debug.DebugCreateUnit.getDefaultInstance();
        }
      }
      /**
       * <code>optional .SC2APIProtocol.DebugCreateUnit create_unit = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.DebugCreateUnit, SC2APIProtocol.Debug.DebugCreateUnit.Builder, SC2APIProtocol.Debug.DebugCreateUnitOrBuilder> 
          getCreateUnitFieldBuilder() {
        if (createUnitBuilder_ == null) {
          if (!(commandCase_ == 3)) {
            command_ = SC2APIProtocol.Debug.DebugCreateUnit.getDefaultInstance();
          }
          createUnitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SC2APIProtocol.Debug.DebugCreateUnit, SC2APIProtocol.Debug.DebugCreateUnit.Builder, SC2APIProtocol.Debug.DebugCreateUnitOrBuilder>(
                  (SC2APIProtocol.Debug.DebugCreateUnit) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 3;
        onChanged();;
        return createUnitBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.DebugKillUnit, SC2APIProtocol.Debug.DebugKillUnit.Builder, SC2APIProtocol.Debug.DebugKillUnitOrBuilder> killUnitBuilder_;
      /**
       * <code>optional .SC2APIProtocol.DebugKillUnit kill_unit = 4;</code>
       */
      public boolean hasKillUnit() {
        return commandCase_ == 4;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugKillUnit kill_unit = 4;</code>
       */
      public SC2APIProtocol.Debug.DebugKillUnit getKillUnit() {
        if (killUnitBuilder_ == null) {
          if (commandCase_ == 4) {
            return (SC2APIProtocol.Debug.DebugKillUnit) command_;
          }
          return SC2APIProtocol.Debug.DebugKillUnit.getDefaultInstance();
        } else {
          if (commandCase_ == 4) {
            return killUnitBuilder_.getMessage();
          }
          return SC2APIProtocol.Debug.DebugKillUnit.getDefaultInstance();
        }
      }
      /**
       * <code>optional .SC2APIProtocol.DebugKillUnit kill_unit = 4;</code>
       */
      public Builder setKillUnit(SC2APIProtocol.Debug.DebugKillUnit value) {
        if (killUnitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          killUnitBuilder_.setMessage(value);
        }
        commandCase_ = 4;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugKillUnit kill_unit = 4;</code>
       */
      public Builder setKillUnit(
          SC2APIProtocol.Debug.DebugKillUnit.Builder builderForValue) {
        if (killUnitBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          killUnitBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 4;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugKillUnit kill_unit = 4;</code>
       */
      public Builder mergeKillUnit(SC2APIProtocol.Debug.DebugKillUnit value) {
        if (killUnitBuilder_ == null) {
          if (commandCase_ == 4 &&
              command_ != SC2APIProtocol.Debug.DebugKillUnit.getDefaultInstance()) {
            command_ = SC2APIProtocol.Debug.DebugKillUnit.newBuilder((SC2APIProtocol.Debug.DebugKillUnit) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 4) {
            killUnitBuilder_.mergeFrom(value);
          }
          killUnitBuilder_.setMessage(value);
        }
        commandCase_ = 4;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugKillUnit kill_unit = 4;</code>
       */
      public Builder clearKillUnit() {
        if (killUnitBuilder_ == null) {
          if (commandCase_ == 4) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 4) {
            commandCase_ = 0;
            command_ = null;
          }
          killUnitBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugKillUnit kill_unit = 4;</code>
       */
      public SC2APIProtocol.Debug.DebugKillUnit.Builder getKillUnitBuilder() {
        return getKillUnitFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SC2APIProtocol.DebugKillUnit kill_unit = 4;</code>
       */
      public SC2APIProtocol.Debug.DebugKillUnitOrBuilder getKillUnitOrBuilder() {
        if ((commandCase_ == 4) && (killUnitBuilder_ != null)) {
          return killUnitBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 4) {
            return (SC2APIProtocol.Debug.DebugKillUnit) command_;
          }
          return SC2APIProtocol.Debug.DebugKillUnit.getDefaultInstance();
        }
      }
      /**
       * <code>optional .SC2APIProtocol.DebugKillUnit kill_unit = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.DebugKillUnit, SC2APIProtocol.Debug.DebugKillUnit.Builder, SC2APIProtocol.Debug.DebugKillUnitOrBuilder> 
          getKillUnitFieldBuilder() {
        if (killUnitBuilder_ == null) {
          if (!(commandCase_ == 4)) {
            command_ = SC2APIProtocol.Debug.DebugKillUnit.getDefaultInstance();
          }
          killUnitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SC2APIProtocol.Debug.DebugKillUnit, SC2APIProtocol.Debug.DebugKillUnit.Builder, SC2APIProtocol.Debug.DebugKillUnitOrBuilder>(
                  (SC2APIProtocol.Debug.DebugKillUnit) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 4;
        onChanged();;
        return killUnitBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.DebugTestProcess, SC2APIProtocol.Debug.DebugTestProcess.Builder, SC2APIProtocol.Debug.DebugTestProcessOrBuilder> testProcessBuilder_;
      /**
       * <code>optional .SC2APIProtocol.DebugTestProcess test_process = 5;</code>
       */
      public boolean hasTestProcess() {
        return commandCase_ == 5;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugTestProcess test_process = 5;</code>
       */
      public SC2APIProtocol.Debug.DebugTestProcess getTestProcess() {
        if (testProcessBuilder_ == null) {
          if (commandCase_ == 5) {
            return (SC2APIProtocol.Debug.DebugTestProcess) command_;
          }
          return SC2APIProtocol.Debug.DebugTestProcess.getDefaultInstance();
        } else {
          if (commandCase_ == 5) {
            return testProcessBuilder_.getMessage();
          }
          return SC2APIProtocol.Debug.DebugTestProcess.getDefaultInstance();
        }
      }
      /**
       * <code>optional .SC2APIProtocol.DebugTestProcess test_process = 5;</code>
       */
      public Builder setTestProcess(SC2APIProtocol.Debug.DebugTestProcess value) {
        if (testProcessBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          testProcessBuilder_.setMessage(value);
        }
        commandCase_ = 5;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugTestProcess test_process = 5;</code>
       */
      public Builder setTestProcess(
          SC2APIProtocol.Debug.DebugTestProcess.Builder builderForValue) {
        if (testProcessBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          testProcessBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 5;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugTestProcess test_process = 5;</code>
       */
      public Builder mergeTestProcess(SC2APIProtocol.Debug.DebugTestProcess value) {
        if (testProcessBuilder_ == null) {
          if (commandCase_ == 5 &&
              command_ != SC2APIProtocol.Debug.DebugTestProcess.getDefaultInstance()) {
            command_ = SC2APIProtocol.Debug.DebugTestProcess.newBuilder((SC2APIProtocol.Debug.DebugTestProcess) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 5) {
            testProcessBuilder_.mergeFrom(value);
          }
          testProcessBuilder_.setMessage(value);
        }
        commandCase_ = 5;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugTestProcess test_process = 5;</code>
       */
      public Builder clearTestProcess() {
        if (testProcessBuilder_ == null) {
          if (commandCase_ == 5) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 5) {
            commandCase_ = 0;
            command_ = null;
          }
          testProcessBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugTestProcess test_process = 5;</code>
       */
      public SC2APIProtocol.Debug.DebugTestProcess.Builder getTestProcessBuilder() {
        return getTestProcessFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SC2APIProtocol.DebugTestProcess test_process = 5;</code>
       */
      public SC2APIProtocol.Debug.DebugTestProcessOrBuilder getTestProcessOrBuilder() {
        if ((commandCase_ == 5) && (testProcessBuilder_ != null)) {
          return testProcessBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 5) {
            return (SC2APIProtocol.Debug.DebugTestProcess) command_;
          }
          return SC2APIProtocol.Debug.DebugTestProcess.getDefaultInstance();
        }
      }
      /**
       * <code>optional .SC2APIProtocol.DebugTestProcess test_process = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.DebugTestProcess, SC2APIProtocol.Debug.DebugTestProcess.Builder, SC2APIProtocol.Debug.DebugTestProcessOrBuilder> 
          getTestProcessFieldBuilder() {
        if (testProcessBuilder_ == null) {
          if (!(commandCase_ == 5)) {
            command_ = SC2APIProtocol.Debug.DebugTestProcess.getDefaultInstance();
          }
          testProcessBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SC2APIProtocol.Debug.DebugTestProcess, SC2APIProtocol.Debug.DebugTestProcess.Builder, SC2APIProtocol.Debug.DebugTestProcessOrBuilder>(
                  (SC2APIProtocol.Debug.DebugTestProcess) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 5;
        onChanged();;
        return testProcessBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.DebugSetScore, SC2APIProtocol.Debug.DebugSetScore.Builder, SC2APIProtocol.Debug.DebugSetScoreOrBuilder> scoreBuilder_;
      /**
       * <pre>
       * Useful only for single-player "curriculum" maps.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.DebugSetScore score = 6;</code>
       */
      public boolean hasScore() {
        return commandCase_ == 6;
      }
      /**
       * <pre>
       * Useful only for single-player "curriculum" maps.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.DebugSetScore score = 6;</code>
       */
      public SC2APIProtocol.Debug.DebugSetScore getScore() {
        if (scoreBuilder_ == null) {
          if (commandCase_ == 6) {
            return (SC2APIProtocol.Debug.DebugSetScore) command_;
          }
          return SC2APIProtocol.Debug.DebugSetScore.getDefaultInstance();
        } else {
          if (commandCase_ == 6) {
            return scoreBuilder_.getMessage();
          }
          return SC2APIProtocol.Debug.DebugSetScore.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Useful only for single-player "curriculum" maps.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.DebugSetScore score = 6;</code>
       */
      public Builder setScore(SC2APIProtocol.Debug.DebugSetScore value) {
        if (scoreBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          scoreBuilder_.setMessage(value);
        }
        commandCase_ = 6;
        return this;
      }
      /**
       * <pre>
       * Useful only for single-player "curriculum" maps.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.DebugSetScore score = 6;</code>
       */
      public Builder setScore(
          SC2APIProtocol.Debug.DebugSetScore.Builder builderForValue) {
        if (scoreBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          scoreBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 6;
        return this;
      }
      /**
       * <pre>
       * Useful only for single-player "curriculum" maps.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.DebugSetScore score = 6;</code>
       */
      public Builder mergeScore(SC2APIProtocol.Debug.DebugSetScore value) {
        if (scoreBuilder_ == null) {
          if (commandCase_ == 6 &&
              command_ != SC2APIProtocol.Debug.DebugSetScore.getDefaultInstance()) {
            command_ = SC2APIProtocol.Debug.DebugSetScore.newBuilder((SC2APIProtocol.Debug.DebugSetScore) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 6) {
            scoreBuilder_.mergeFrom(value);
          }
          scoreBuilder_.setMessage(value);
        }
        commandCase_ = 6;
        return this;
      }
      /**
       * <pre>
       * Useful only for single-player "curriculum" maps.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.DebugSetScore score = 6;</code>
       */
      public Builder clearScore() {
        if (scoreBuilder_ == null) {
          if (commandCase_ == 6) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 6) {
            commandCase_ = 0;
            command_ = null;
          }
          scoreBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Useful only for single-player "curriculum" maps.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.DebugSetScore score = 6;</code>
       */
      public SC2APIProtocol.Debug.DebugSetScore.Builder getScoreBuilder() {
        return getScoreFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Useful only for single-player "curriculum" maps.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.DebugSetScore score = 6;</code>
       */
      public SC2APIProtocol.Debug.DebugSetScoreOrBuilder getScoreOrBuilder() {
        if ((commandCase_ == 6) && (scoreBuilder_ != null)) {
          return scoreBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 6) {
            return (SC2APIProtocol.Debug.DebugSetScore) command_;
          }
          return SC2APIProtocol.Debug.DebugSetScore.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Useful only for single-player "curriculum" maps.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.DebugSetScore score = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.DebugSetScore, SC2APIProtocol.Debug.DebugSetScore.Builder, SC2APIProtocol.Debug.DebugSetScoreOrBuilder> 
          getScoreFieldBuilder() {
        if (scoreBuilder_ == null) {
          if (!(commandCase_ == 6)) {
            command_ = SC2APIProtocol.Debug.DebugSetScore.getDefaultInstance();
          }
          scoreBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SC2APIProtocol.Debug.DebugSetScore, SC2APIProtocol.Debug.DebugSetScore.Builder, SC2APIProtocol.Debug.DebugSetScoreOrBuilder>(
                  (SC2APIProtocol.Debug.DebugSetScore) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 6;
        onChanged();;
        return scoreBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.DebugEndGame, SC2APIProtocol.Debug.DebugEndGame.Builder, SC2APIProtocol.Debug.DebugEndGameOrBuilder> endGameBuilder_;
      /**
       * <code>optional .SC2APIProtocol.DebugEndGame end_game = 7;</code>
       */
      public boolean hasEndGame() {
        return commandCase_ == 7;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugEndGame end_game = 7;</code>
       */
      public SC2APIProtocol.Debug.DebugEndGame getEndGame() {
        if (endGameBuilder_ == null) {
          if (commandCase_ == 7) {
            return (SC2APIProtocol.Debug.DebugEndGame) command_;
          }
          return SC2APIProtocol.Debug.DebugEndGame.getDefaultInstance();
        } else {
          if (commandCase_ == 7) {
            return endGameBuilder_.getMessage();
          }
          return SC2APIProtocol.Debug.DebugEndGame.getDefaultInstance();
        }
      }
      /**
       * <code>optional .SC2APIProtocol.DebugEndGame end_game = 7;</code>
       */
      public Builder setEndGame(SC2APIProtocol.Debug.DebugEndGame value) {
        if (endGameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          endGameBuilder_.setMessage(value);
        }
        commandCase_ = 7;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugEndGame end_game = 7;</code>
       */
      public Builder setEndGame(
          SC2APIProtocol.Debug.DebugEndGame.Builder builderForValue) {
        if (endGameBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          endGameBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 7;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugEndGame end_game = 7;</code>
       */
      public Builder mergeEndGame(SC2APIProtocol.Debug.DebugEndGame value) {
        if (endGameBuilder_ == null) {
          if (commandCase_ == 7 &&
              command_ != SC2APIProtocol.Debug.DebugEndGame.getDefaultInstance()) {
            command_ = SC2APIProtocol.Debug.DebugEndGame.newBuilder((SC2APIProtocol.Debug.DebugEndGame) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 7) {
            endGameBuilder_.mergeFrom(value);
          }
          endGameBuilder_.setMessage(value);
        }
        commandCase_ = 7;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugEndGame end_game = 7;</code>
       */
      public Builder clearEndGame() {
        if (endGameBuilder_ == null) {
          if (commandCase_ == 7) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 7) {
            commandCase_ = 0;
            command_ = null;
          }
          endGameBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugEndGame end_game = 7;</code>
       */
      public SC2APIProtocol.Debug.DebugEndGame.Builder getEndGameBuilder() {
        return getEndGameFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SC2APIProtocol.DebugEndGame end_game = 7;</code>
       */
      public SC2APIProtocol.Debug.DebugEndGameOrBuilder getEndGameOrBuilder() {
        if ((commandCase_ == 7) && (endGameBuilder_ != null)) {
          return endGameBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 7) {
            return (SC2APIProtocol.Debug.DebugEndGame) command_;
          }
          return SC2APIProtocol.Debug.DebugEndGame.getDefaultInstance();
        }
      }
      /**
       * <code>optional .SC2APIProtocol.DebugEndGame end_game = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.DebugEndGame, SC2APIProtocol.Debug.DebugEndGame.Builder, SC2APIProtocol.Debug.DebugEndGameOrBuilder> 
          getEndGameFieldBuilder() {
        if (endGameBuilder_ == null) {
          if (!(commandCase_ == 7)) {
            command_ = SC2APIProtocol.Debug.DebugEndGame.getDefaultInstance();
          }
          endGameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SC2APIProtocol.Debug.DebugEndGame, SC2APIProtocol.Debug.DebugEndGame.Builder, SC2APIProtocol.Debug.DebugEndGameOrBuilder>(
                  (SC2APIProtocol.Debug.DebugEndGame) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 7;
        onChanged();;
        return endGameBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.DebugSetUnitValue, SC2APIProtocol.Debug.DebugSetUnitValue.Builder, SC2APIProtocol.Debug.DebugSetUnitValueOrBuilder> unitValueBuilder_;
      /**
       * <code>optional .SC2APIProtocol.DebugSetUnitValue unit_value = 8;</code>
       */
      public boolean hasUnitValue() {
        return commandCase_ == 8;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugSetUnitValue unit_value = 8;</code>
       */
      public SC2APIProtocol.Debug.DebugSetUnitValue getUnitValue() {
        if (unitValueBuilder_ == null) {
          if (commandCase_ == 8) {
            return (SC2APIProtocol.Debug.DebugSetUnitValue) command_;
          }
          return SC2APIProtocol.Debug.DebugSetUnitValue.getDefaultInstance();
        } else {
          if (commandCase_ == 8) {
            return unitValueBuilder_.getMessage();
          }
          return SC2APIProtocol.Debug.DebugSetUnitValue.getDefaultInstance();
        }
      }
      /**
       * <code>optional .SC2APIProtocol.DebugSetUnitValue unit_value = 8;</code>
       */
      public Builder setUnitValue(SC2APIProtocol.Debug.DebugSetUnitValue value) {
        if (unitValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          unitValueBuilder_.setMessage(value);
        }
        commandCase_ = 8;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugSetUnitValue unit_value = 8;</code>
       */
      public Builder setUnitValue(
          SC2APIProtocol.Debug.DebugSetUnitValue.Builder builderForValue) {
        if (unitValueBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          unitValueBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 8;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugSetUnitValue unit_value = 8;</code>
       */
      public Builder mergeUnitValue(SC2APIProtocol.Debug.DebugSetUnitValue value) {
        if (unitValueBuilder_ == null) {
          if (commandCase_ == 8 &&
              command_ != SC2APIProtocol.Debug.DebugSetUnitValue.getDefaultInstance()) {
            command_ = SC2APIProtocol.Debug.DebugSetUnitValue.newBuilder((SC2APIProtocol.Debug.DebugSetUnitValue) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 8) {
            unitValueBuilder_.mergeFrom(value);
          }
          unitValueBuilder_.setMessage(value);
        }
        commandCase_ = 8;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugSetUnitValue unit_value = 8;</code>
       */
      public Builder clearUnitValue() {
        if (unitValueBuilder_ == null) {
          if (commandCase_ == 8) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 8) {
            commandCase_ = 0;
            command_ = null;
          }
          unitValueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugSetUnitValue unit_value = 8;</code>
       */
      public SC2APIProtocol.Debug.DebugSetUnitValue.Builder getUnitValueBuilder() {
        return getUnitValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SC2APIProtocol.DebugSetUnitValue unit_value = 8;</code>
       */
      public SC2APIProtocol.Debug.DebugSetUnitValueOrBuilder getUnitValueOrBuilder() {
        if ((commandCase_ == 8) && (unitValueBuilder_ != null)) {
          return unitValueBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 8) {
            return (SC2APIProtocol.Debug.DebugSetUnitValue) command_;
          }
          return SC2APIProtocol.Debug.DebugSetUnitValue.getDefaultInstance();
        }
      }
      /**
       * <code>optional .SC2APIProtocol.DebugSetUnitValue unit_value = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.DebugSetUnitValue, SC2APIProtocol.Debug.DebugSetUnitValue.Builder, SC2APIProtocol.Debug.DebugSetUnitValueOrBuilder> 
          getUnitValueFieldBuilder() {
        if (unitValueBuilder_ == null) {
          if (!(commandCase_ == 8)) {
            command_ = SC2APIProtocol.Debug.DebugSetUnitValue.getDefaultInstance();
          }
          unitValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SC2APIProtocol.Debug.DebugSetUnitValue, SC2APIProtocol.Debug.DebugSetUnitValue.Builder, SC2APIProtocol.Debug.DebugSetUnitValueOrBuilder>(
                  (SC2APIProtocol.Debug.DebugSetUnitValue) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 8;
        onChanged();;
        return unitValueBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.DebugChat, SC2APIProtocol.Debug.DebugChat.Builder, SC2APIProtocol.Debug.DebugChatOrBuilder> chatBuilder_;
      /**
       * <pre>
       * TODO.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.DebugChat chat = 9;</code>
       */
      public boolean hasChat() {
        return commandCase_ == 9;
      }
      /**
       * <pre>
       * TODO.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.DebugChat chat = 9;</code>
       */
      public SC2APIProtocol.Debug.DebugChat getChat() {
        if (chatBuilder_ == null) {
          if (commandCase_ == 9) {
            return (SC2APIProtocol.Debug.DebugChat) command_;
          }
          return SC2APIProtocol.Debug.DebugChat.getDefaultInstance();
        } else {
          if (commandCase_ == 9) {
            return chatBuilder_.getMessage();
          }
          return SC2APIProtocol.Debug.DebugChat.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * TODO.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.DebugChat chat = 9;</code>
       */
      public Builder setChat(SC2APIProtocol.Debug.DebugChat value) {
        if (chatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          chatBuilder_.setMessage(value);
        }
        commandCase_ = 9;
        return this;
      }
      /**
       * <pre>
       * TODO.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.DebugChat chat = 9;</code>
       */
      public Builder setChat(
          SC2APIProtocol.Debug.DebugChat.Builder builderForValue) {
        if (chatBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          chatBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 9;
        return this;
      }
      /**
       * <pre>
       * TODO.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.DebugChat chat = 9;</code>
       */
      public Builder mergeChat(SC2APIProtocol.Debug.DebugChat value) {
        if (chatBuilder_ == null) {
          if (commandCase_ == 9 &&
              command_ != SC2APIProtocol.Debug.DebugChat.getDefaultInstance()) {
            command_ = SC2APIProtocol.Debug.DebugChat.newBuilder((SC2APIProtocol.Debug.DebugChat) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 9) {
            chatBuilder_.mergeFrom(value);
          }
          chatBuilder_.setMessage(value);
        }
        commandCase_ = 9;
        return this;
      }
      /**
       * <pre>
       * TODO.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.DebugChat chat = 9;</code>
       */
      public Builder clearChat() {
        if (chatBuilder_ == null) {
          if (commandCase_ == 9) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 9) {
            commandCase_ = 0;
            command_ = null;
          }
          chatBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * TODO.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.DebugChat chat = 9;</code>
       */
      public SC2APIProtocol.Debug.DebugChat.Builder getChatBuilder() {
        return getChatFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * TODO.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.DebugChat chat = 9;</code>
       */
      public SC2APIProtocol.Debug.DebugChatOrBuilder getChatOrBuilder() {
        if ((commandCase_ == 9) && (chatBuilder_ != null)) {
          return chatBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 9) {
            return (SC2APIProtocol.Debug.DebugChat) command_;
          }
          return SC2APIProtocol.Debug.DebugChat.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * TODO.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.DebugChat chat = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.DebugChat, SC2APIProtocol.Debug.DebugChat.Builder, SC2APIProtocol.Debug.DebugChatOrBuilder> 
          getChatFieldBuilder() {
        if (chatBuilder_ == null) {
          if (!(commandCase_ == 9)) {
            command_ = SC2APIProtocol.Debug.DebugChat.getDefaultInstance();
          }
          chatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SC2APIProtocol.Debug.DebugChat, SC2APIProtocol.Debug.DebugChat.Builder, SC2APIProtocol.Debug.DebugChatOrBuilder>(
                  (SC2APIProtocol.Debug.DebugChat) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 9;
        onChanged();;
        return chatBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.DebugCommand)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.DebugCommand)
    private static final SC2APIProtocol.Debug.DebugCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Debug.DebugCommand();
    }

    public static SC2APIProtocol.Debug.DebugCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DebugCommand>
        PARSER = new com.google.protobuf.AbstractParser<DebugCommand>() {
      public DebugCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DebugCommand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DebugCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DebugCommand> getParserForType() {
      return PARSER;
    }

    public SC2APIProtocol.Debug.DebugCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DebugDrawOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.DebugDraw)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
     */
    java.util.List<SC2APIProtocol.Debug.DebugText> 
        getTextList();
    /**
     * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
     */
    SC2APIProtocol.Debug.DebugText getText(int index);
    /**
     * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
     */
    int getTextCount();
    /**
     * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
     */
    java.util.List<? extends SC2APIProtocol.Debug.DebugTextOrBuilder> 
        getTextOrBuilderList();
    /**
     * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
     */
    SC2APIProtocol.Debug.DebugTextOrBuilder getTextOrBuilder(
        int index);

    /**
     * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
     */
    java.util.List<SC2APIProtocol.Debug.DebugLine> 
        getLinesList();
    /**
     * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
     */
    SC2APIProtocol.Debug.DebugLine getLines(int index);
    /**
     * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
     */
    int getLinesCount();
    /**
     * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
     */
    java.util.List<? extends SC2APIProtocol.Debug.DebugLineOrBuilder> 
        getLinesOrBuilderList();
    /**
     * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
     */
    SC2APIProtocol.Debug.DebugLineOrBuilder getLinesOrBuilder(
        int index);

    /**
     * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
     */
    java.util.List<SC2APIProtocol.Debug.DebugBox> 
        getBoxesList();
    /**
     * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
     */
    SC2APIProtocol.Debug.DebugBox getBoxes(int index);
    /**
     * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
     */
    int getBoxesCount();
    /**
     * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
     */
    java.util.List<? extends SC2APIProtocol.Debug.DebugBoxOrBuilder> 
        getBoxesOrBuilderList();
    /**
     * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
     */
    SC2APIProtocol.Debug.DebugBoxOrBuilder getBoxesOrBuilder(
        int index);

    /**
     * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
     */
    java.util.List<SC2APIProtocol.Debug.DebugSphere> 
        getSpheresList();
    /**
     * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
     */
    SC2APIProtocol.Debug.DebugSphere getSpheres(int index);
    /**
     * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
     */
    int getSpheresCount();
    /**
     * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
     */
    java.util.List<? extends SC2APIProtocol.Debug.DebugSphereOrBuilder> 
        getSpheresOrBuilderList();
    /**
     * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
     */
    SC2APIProtocol.Debug.DebugSphereOrBuilder getSpheresOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code SC2APIProtocol.DebugDraw}
   */
  public  static final class DebugDraw extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.DebugDraw)
      DebugDrawOrBuilder {
    // Use DebugDraw.newBuilder() to construct.
    private DebugDraw(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DebugDraw() {
      text_ = java.util.Collections.emptyList();
      lines_ = java.util.Collections.emptyList();
      boxes_ = java.util.Collections.emptyList();
      spheres_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DebugDraw(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                text_ = new java.util.ArrayList<SC2APIProtocol.Debug.DebugText>();
                mutable_bitField0_ |= 0x00000001;
              }
              text_.add(
                  input.readMessage(SC2APIProtocol.Debug.DebugText.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                lines_ = new java.util.ArrayList<SC2APIProtocol.Debug.DebugLine>();
                mutable_bitField0_ |= 0x00000002;
              }
              lines_.add(
                  input.readMessage(SC2APIProtocol.Debug.DebugLine.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                boxes_ = new java.util.ArrayList<SC2APIProtocol.Debug.DebugBox>();
                mutable_bitField0_ |= 0x00000004;
              }
              boxes_.add(
                  input.readMessage(SC2APIProtocol.Debug.DebugBox.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                spheres_ = new java.util.ArrayList<SC2APIProtocol.Debug.DebugSphere>();
                mutable_bitField0_ |= 0x00000008;
              }
              spheres_.add(
                  input.readMessage(SC2APIProtocol.Debug.DebugSphere.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          text_ = java.util.Collections.unmodifiableList(text_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          lines_ = java.util.Collections.unmodifiableList(lines_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          boxes_ = java.util.Collections.unmodifiableList(boxes_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          spheres_ = java.util.Collections.unmodifiableList(spheres_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugDraw_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugDraw_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Debug.DebugDraw.class, SC2APIProtocol.Debug.DebugDraw.Builder.class);
    }

    public static final int TEXT_FIELD_NUMBER = 1;
    private java.util.List<SC2APIProtocol.Debug.DebugText> text_;
    /**
     * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
     */
    public java.util.List<SC2APIProtocol.Debug.DebugText> getTextList() {
      return text_;
    }
    /**
     * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
     */
    public java.util.List<? extends SC2APIProtocol.Debug.DebugTextOrBuilder> 
        getTextOrBuilderList() {
      return text_;
    }
    /**
     * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
     */
    public int getTextCount() {
      return text_.size();
    }
    /**
     * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
     */
    public SC2APIProtocol.Debug.DebugText getText(int index) {
      return text_.get(index);
    }
    /**
     * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
     */
    public SC2APIProtocol.Debug.DebugTextOrBuilder getTextOrBuilder(
        int index) {
      return text_.get(index);
    }

    public static final int LINES_FIELD_NUMBER = 2;
    private java.util.List<SC2APIProtocol.Debug.DebugLine> lines_;
    /**
     * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
     */
    public java.util.List<SC2APIProtocol.Debug.DebugLine> getLinesList() {
      return lines_;
    }
    /**
     * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
     */
    public java.util.List<? extends SC2APIProtocol.Debug.DebugLineOrBuilder> 
        getLinesOrBuilderList() {
      return lines_;
    }
    /**
     * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
     */
    public int getLinesCount() {
      return lines_.size();
    }
    /**
     * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
     */
    public SC2APIProtocol.Debug.DebugLine getLines(int index) {
      return lines_.get(index);
    }
    /**
     * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
     */
    public SC2APIProtocol.Debug.DebugLineOrBuilder getLinesOrBuilder(
        int index) {
      return lines_.get(index);
    }

    public static final int BOXES_FIELD_NUMBER = 3;
    private java.util.List<SC2APIProtocol.Debug.DebugBox> boxes_;
    /**
     * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
     */
    public java.util.List<SC2APIProtocol.Debug.DebugBox> getBoxesList() {
      return boxes_;
    }
    /**
     * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
     */
    public java.util.List<? extends SC2APIProtocol.Debug.DebugBoxOrBuilder> 
        getBoxesOrBuilderList() {
      return boxes_;
    }
    /**
     * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
     */
    public int getBoxesCount() {
      return boxes_.size();
    }
    /**
     * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
     */
    public SC2APIProtocol.Debug.DebugBox getBoxes(int index) {
      return boxes_.get(index);
    }
    /**
     * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
     */
    public SC2APIProtocol.Debug.DebugBoxOrBuilder getBoxesOrBuilder(
        int index) {
      return boxes_.get(index);
    }

    public static final int SPHERES_FIELD_NUMBER = 4;
    private java.util.List<SC2APIProtocol.Debug.DebugSphere> spheres_;
    /**
     * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
     */
    public java.util.List<SC2APIProtocol.Debug.DebugSphere> getSpheresList() {
      return spheres_;
    }
    /**
     * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
     */
    public java.util.List<? extends SC2APIProtocol.Debug.DebugSphereOrBuilder> 
        getSpheresOrBuilderList() {
      return spheres_;
    }
    /**
     * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
     */
    public int getSpheresCount() {
      return spheres_.size();
    }
    /**
     * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
     */
    public SC2APIProtocol.Debug.DebugSphere getSpheres(int index) {
      return spheres_.get(index);
    }
    /**
     * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
     */
    public SC2APIProtocol.Debug.DebugSphereOrBuilder getSpheresOrBuilder(
        int index) {
      return spheres_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < text_.size(); i++) {
        output.writeMessage(1, text_.get(i));
      }
      for (int i = 0; i < lines_.size(); i++) {
        output.writeMessage(2, lines_.get(i));
      }
      for (int i = 0; i < boxes_.size(); i++) {
        output.writeMessage(3, boxes_.get(i));
      }
      for (int i = 0; i < spheres_.size(); i++) {
        output.writeMessage(4, spheres_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < text_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, text_.get(i));
      }
      for (int i = 0; i < lines_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, lines_.get(i));
      }
      for (int i = 0; i < boxes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, boxes_.get(i));
      }
      for (int i = 0; i < spheres_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, spheres_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Debug.DebugDraw)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Debug.DebugDraw other = (SC2APIProtocol.Debug.DebugDraw) obj;

      boolean result = true;
      result = result && getTextList()
          .equals(other.getTextList());
      result = result && getLinesList()
          .equals(other.getLinesList());
      result = result && getBoxesList()
          .equals(other.getBoxesList());
      result = result && getSpheresList()
          .equals(other.getSpheresList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getTextCount() > 0) {
        hash = (37 * hash) + TEXT_FIELD_NUMBER;
        hash = (53 * hash) + getTextList().hashCode();
      }
      if (getLinesCount() > 0) {
        hash = (37 * hash) + LINES_FIELD_NUMBER;
        hash = (53 * hash) + getLinesList().hashCode();
      }
      if (getBoxesCount() > 0) {
        hash = (37 * hash) + BOXES_FIELD_NUMBER;
        hash = (53 * hash) + getBoxesList().hashCode();
      }
      if (getSpheresCount() > 0) {
        hash = (37 * hash) + SPHERES_FIELD_NUMBER;
        hash = (53 * hash) + getSpheresList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Debug.DebugDraw parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugDraw parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugDraw parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugDraw parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugDraw parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugDraw parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugDraw parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugDraw parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugDraw parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugDraw parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Debug.DebugDraw prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC2APIProtocol.DebugDraw}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.DebugDraw)
        SC2APIProtocol.Debug.DebugDrawOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugDraw_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugDraw_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Debug.DebugDraw.class, SC2APIProtocol.Debug.DebugDraw.Builder.class);
      }

      // Construct using SC2APIProtocol.Debug.DebugDraw.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTextFieldBuilder();
          getLinesFieldBuilder();
          getBoxesFieldBuilder();
          getSpheresFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (textBuilder_ == null) {
          text_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          textBuilder_.clear();
        }
        if (linesBuilder_ == null) {
          lines_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          linesBuilder_.clear();
        }
        if (boxesBuilder_ == null) {
          boxes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          boxesBuilder_.clear();
        }
        if (spheresBuilder_ == null) {
          spheres_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          spheresBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugDraw_descriptor;
      }

      public SC2APIProtocol.Debug.DebugDraw getDefaultInstanceForType() {
        return SC2APIProtocol.Debug.DebugDraw.getDefaultInstance();
      }

      public SC2APIProtocol.Debug.DebugDraw build() {
        SC2APIProtocol.Debug.DebugDraw result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SC2APIProtocol.Debug.DebugDraw buildPartial() {
        SC2APIProtocol.Debug.DebugDraw result = new SC2APIProtocol.Debug.DebugDraw(this);
        int from_bitField0_ = bitField0_;
        if (textBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            text_ = java.util.Collections.unmodifiableList(text_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.text_ = text_;
        } else {
          result.text_ = textBuilder_.build();
        }
        if (linesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            lines_ = java.util.Collections.unmodifiableList(lines_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.lines_ = lines_;
        } else {
          result.lines_ = linesBuilder_.build();
        }
        if (boxesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            boxes_ = java.util.Collections.unmodifiableList(boxes_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.boxes_ = boxes_;
        } else {
          result.boxes_ = boxesBuilder_.build();
        }
        if (spheresBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            spheres_ = java.util.Collections.unmodifiableList(spheres_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.spheres_ = spheres_;
        } else {
          result.spheres_ = spheresBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Debug.DebugDraw) {
          return mergeFrom((SC2APIProtocol.Debug.DebugDraw)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Debug.DebugDraw other) {
        if (other == SC2APIProtocol.Debug.DebugDraw.getDefaultInstance()) return this;
        if (textBuilder_ == null) {
          if (!other.text_.isEmpty()) {
            if (text_.isEmpty()) {
              text_ = other.text_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTextIsMutable();
              text_.addAll(other.text_);
            }
            onChanged();
          }
        } else {
          if (!other.text_.isEmpty()) {
            if (textBuilder_.isEmpty()) {
              textBuilder_.dispose();
              textBuilder_ = null;
              text_ = other.text_;
              bitField0_ = (bitField0_ & ~0x00000001);
              textBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTextFieldBuilder() : null;
            } else {
              textBuilder_.addAllMessages(other.text_);
            }
          }
        }
        if (linesBuilder_ == null) {
          if (!other.lines_.isEmpty()) {
            if (lines_.isEmpty()) {
              lines_ = other.lines_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureLinesIsMutable();
              lines_.addAll(other.lines_);
            }
            onChanged();
          }
        } else {
          if (!other.lines_.isEmpty()) {
            if (linesBuilder_.isEmpty()) {
              linesBuilder_.dispose();
              linesBuilder_ = null;
              lines_ = other.lines_;
              bitField0_ = (bitField0_ & ~0x00000002);
              linesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLinesFieldBuilder() : null;
            } else {
              linesBuilder_.addAllMessages(other.lines_);
            }
          }
        }
        if (boxesBuilder_ == null) {
          if (!other.boxes_.isEmpty()) {
            if (boxes_.isEmpty()) {
              boxes_ = other.boxes_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureBoxesIsMutable();
              boxes_.addAll(other.boxes_);
            }
            onChanged();
          }
        } else {
          if (!other.boxes_.isEmpty()) {
            if (boxesBuilder_.isEmpty()) {
              boxesBuilder_.dispose();
              boxesBuilder_ = null;
              boxes_ = other.boxes_;
              bitField0_ = (bitField0_ & ~0x00000004);
              boxesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBoxesFieldBuilder() : null;
            } else {
              boxesBuilder_.addAllMessages(other.boxes_);
            }
          }
        }
        if (spheresBuilder_ == null) {
          if (!other.spheres_.isEmpty()) {
            if (spheres_.isEmpty()) {
              spheres_ = other.spheres_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureSpheresIsMutable();
              spheres_.addAll(other.spheres_);
            }
            onChanged();
          }
        } else {
          if (!other.spheres_.isEmpty()) {
            if (spheresBuilder_.isEmpty()) {
              spheresBuilder_.dispose();
              spheresBuilder_ = null;
              spheres_ = other.spheres_;
              bitField0_ = (bitField0_ & ~0x00000008);
              spheresBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSpheresFieldBuilder() : null;
            } else {
              spheresBuilder_.addAllMessages(other.spheres_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Debug.DebugDraw parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Debug.DebugDraw) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<SC2APIProtocol.Debug.DebugText> text_ =
        java.util.Collections.emptyList();
      private void ensureTextIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          text_ = new java.util.ArrayList<SC2APIProtocol.Debug.DebugText>(text_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          SC2APIProtocol.Debug.DebugText, SC2APIProtocol.Debug.DebugText.Builder, SC2APIProtocol.Debug.DebugTextOrBuilder> textBuilder_;

      /**
       * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
       */
      public java.util.List<SC2APIProtocol.Debug.DebugText> getTextList() {
        if (textBuilder_ == null) {
          return java.util.Collections.unmodifiableList(text_);
        } else {
          return textBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
       */
      public int getTextCount() {
        if (textBuilder_ == null) {
          return text_.size();
        } else {
          return textBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
       */
      public SC2APIProtocol.Debug.DebugText getText(int index) {
        if (textBuilder_ == null) {
          return text_.get(index);
        } else {
          return textBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
       */
      public Builder setText(
          int index, SC2APIProtocol.Debug.DebugText value) {
        if (textBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTextIsMutable();
          text_.set(index, value);
          onChanged();
        } else {
          textBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
       */
      public Builder setText(
          int index, SC2APIProtocol.Debug.DebugText.Builder builderForValue) {
        if (textBuilder_ == null) {
          ensureTextIsMutable();
          text_.set(index, builderForValue.build());
          onChanged();
        } else {
          textBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
       */
      public Builder addText(SC2APIProtocol.Debug.DebugText value) {
        if (textBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTextIsMutable();
          text_.add(value);
          onChanged();
        } else {
          textBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
       */
      public Builder addText(
          int index, SC2APIProtocol.Debug.DebugText value) {
        if (textBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTextIsMutable();
          text_.add(index, value);
          onChanged();
        } else {
          textBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
       */
      public Builder addText(
          SC2APIProtocol.Debug.DebugText.Builder builderForValue) {
        if (textBuilder_ == null) {
          ensureTextIsMutable();
          text_.add(builderForValue.build());
          onChanged();
        } else {
          textBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
       */
      public Builder addText(
          int index, SC2APIProtocol.Debug.DebugText.Builder builderForValue) {
        if (textBuilder_ == null) {
          ensureTextIsMutable();
          text_.add(index, builderForValue.build());
          onChanged();
        } else {
          textBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
       */
      public Builder addAllText(
          java.lang.Iterable<? extends SC2APIProtocol.Debug.DebugText> values) {
        if (textBuilder_ == null) {
          ensureTextIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, text_);
          onChanged();
        } else {
          textBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
       */
      public Builder clearText() {
        if (textBuilder_ == null) {
          text_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          textBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
       */
      public Builder removeText(int index) {
        if (textBuilder_ == null) {
          ensureTextIsMutable();
          text_.remove(index);
          onChanged();
        } else {
          textBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
       */
      public SC2APIProtocol.Debug.DebugText.Builder getTextBuilder(
          int index) {
        return getTextFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
       */
      public SC2APIProtocol.Debug.DebugTextOrBuilder getTextOrBuilder(
          int index) {
        if (textBuilder_ == null) {
          return text_.get(index);  } else {
          return textBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
       */
      public java.util.List<? extends SC2APIProtocol.Debug.DebugTextOrBuilder> 
           getTextOrBuilderList() {
        if (textBuilder_ != null) {
          return textBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(text_);
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
       */
      public SC2APIProtocol.Debug.DebugText.Builder addTextBuilder() {
        return getTextFieldBuilder().addBuilder(
            SC2APIProtocol.Debug.DebugText.getDefaultInstance());
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
       */
      public SC2APIProtocol.Debug.DebugText.Builder addTextBuilder(
          int index) {
        return getTextFieldBuilder().addBuilder(
            index, SC2APIProtocol.Debug.DebugText.getDefaultInstance());
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugText text = 1;</code>
       */
      public java.util.List<SC2APIProtocol.Debug.DebugText.Builder> 
           getTextBuilderList() {
        return getTextFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          SC2APIProtocol.Debug.DebugText, SC2APIProtocol.Debug.DebugText.Builder, SC2APIProtocol.Debug.DebugTextOrBuilder> 
          getTextFieldBuilder() {
        if (textBuilder_ == null) {
          textBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              SC2APIProtocol.Debug.DebugText, SC2APIProtocol.Debug.DebugText.Builder, SC2APIProtocol.Debug.DebugTextOrBuilder>(
                  text_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          text_ = null;
        }
        return textBuilder_;
      }

      private java.util.List<SC2APIProtocol.Debug.DebugLine> lines_ =
        java.util.Collections.emptyList();
      private void ensureLinesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          lines_ = new java.util.ArrayList<SC2APIProtocol.Debug.DebugLine>(lines_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          SC2APIProtocol.Debug.DebugLine, SC2APIProtocol.Debug.DebugLine.Builder, SC2APIProtocol.Debug.DebugLineOrBuilder> linesBuilder_;

      /**
       * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
       */
      public java.util.List<SC2APIProtocol.Debug.DebugLine> getLinesList() {
        if (linesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(lines_);
        } else {
          return linesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
       */
      public int getLinesCount() {
        if (linesBuilder_ == null) {
          return lines_.size();
        } else {
          return linesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
       */
      public SC2APIProtocol.Debug.DebugLine getLines(int index) {
        if (linesBuilder_ == null) {
          return lines_.get(index);
        } else {
          return linesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
       */
      public Builder setLines(
          int index, SC2APIProtocol.Debug.DebugLine value) {
        if (linesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinesIsMutable();
          lines_.set(index, value);
          onChanged();
        } else {
          linesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
       */
      public Builder setLines(
          int index, SC2APIProtocol.Debug.DebugLine.Builder builderForValue) {
        if (linesBuilder_ == null) {
          ensureLinesIsMutable();
          lines_.set(index, builderForValue.build());
          onChanged();
        } else {
          linesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
       */
      public Builder addLines(SC2APIProtocol.Debug.DebugLine value) {
        if (linesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinesIsMutable();
          lines_.add(value);
          onChanged();
        } else {
          linesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
       */
      public Builder addLines(
          int index, SC2APIProtocol.Debug.DebugLine value) {
        if (linesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinesIsMutable();
          lines_.add(index, value);
          onChanged();
        } else {
          linesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
       */
      public Builder addLines(
          SC2APIProtocol.Debug.DebugLine.Builder builderForValue) {
        if (linesBuilder_ == null) {
          ensureLinesIsMutable();
          lines_.add(builderForValue.build());
          onChanged();
        } else {
          linesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
       */
      public Builder addLines(
          int index, SC2APIProtocol.Debug.DebugLine.Builder builderForValue) {
        if (linesBuilder_ == null) {
          ensureLinesIsMutable();
          lines_.add(index, builderForValue.build());
          onChanged();
        } else {
          linesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
       */
      public Builder addAllLines(
          java.lang.Iterable<? extends SC2APIProtocol.Debug.DebugLine> values) {
        if (linesBuilder_ == null) {
          ensureLinesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, lines_);
          onChanged();
        } else {
          linesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
       */
      public Builder clearLines() {
        if (linesBuilder_ == null) {
          lines_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          linesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
       */
      public Builder removeLines(int index) {
        if (linesBuilder_ == null) {
          ensureLinesIsMutable();
          lines_.remove(index);
          onChanged();
        } else {
          linesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
       */
      public SC2APIProtocol.Debug.DebugLine.Builder getLinesBuilder(
          int index) {
        return getLinesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
       */
      public SC2APIProtocol.Debug.DebugLineOrBuilder getLinesOrBuilder(
          int index) {
        if (linesBuilder_ == null) {
          return lines_.get(index);  } else {
          return linesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
       */
      public java.util.List<? extends SC2APIProtocol.Debug.DebugLineOrBuilder> 
           getLinesOrBuilderList() {
        if (linesBuilder_ != null) {
          return linesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(lines_);
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
       */
      public SC2APIProtocol.Debug.DebugLine.Builder addLinesBuilder() {
        return getLinesFieldBuilder().addBuilder(
            SC2APIProtocol.Debug.DebugLine.getDefaultInstance());
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
       */
      public SC2APIProtocol.Debug.DebugLine.Builder addLinesBuilder(
          int index) {
        return getLinesFieldBuilder().addBuilder(
            index, SC2APIProtocol.Debug.DebugLine.getDefaultInstance());
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugLine lines = 2;</code>
       */
      public java.util.List<SC2APIProtocol.Debug.DebugLine.Builder> 
           getLinesBuilderList() {
        return getLinesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          SC2APIProtocol.Debug.DebugLine, SC2APIProtocol.Debug.DebugLine.Builder, SC2APIProtocol.Debug.DebugLineOrBuilder> 
          getLinesFieldBuilder() {
        if (linesBuilder_ == null) {
          linesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              SC2APIProtocol.Debug.DebugLine, SC2APIProtocol.Debug.DebugLine.Builder, SC2APIProtocol.Debug.DebugLineOrBuilder>(
                  lines_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          lines_ = null;
        }
        return linesBuilder_;
      }

      private java.util.List<SC2APIProtocol.Debug.DebugBox> boxes_ =
        java.util.Collections.emptyList();
      private void ensureBoxesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          boxes_ = new java.util.ArrayList<SC2APIProtocol.Debug.DebugBox>(boxes_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          SC2APIProtocol.Debug.DebugBox, SC2APIProtocol.Debug.DebugBox.Builder, SC2APIProtocol.Debug.DebugBoxOrBuilder> boxesBuilder_;

      /**
       * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
       */
      public java.util.List<SC2APIProtocol.Debug.DebugBox> getBoxesList() {
        if (boxesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(boxes_);
        } else {
          return boxesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
       */
      public int getBoxesCount() {
        if (boxesBuilder_ == null) {
          return boxes_.size();
        } else {
          return boxesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
       */
      public SC2APIProtocol.Debug.DebugBox getBoxes(int index) {
        if (boxesBuilder_ == null) {
          return boxes_.get(index);
        } else {
          return boxesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
       */
      public Builder setBoxes(
          int index, SC2APIProtocol.Debug.DebugBox value) {
        if (boxesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoxesIsMutable();
          boxes_.set(index, value);
          onChanged();
        } else {
          boxesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
       */
      public Builder setBoxes(
          int index, SC2APIProtocol.Debug.DebugBox.Builder builderForValue) {
        if (boxesBuilder_ == null) {
          ensureBoxesIsMutable();
          boxes_.set(index, builderForValue.build());
          onChanged();
        } else {
          boxesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
       */
      public Builder addBoxes(SC2APIProtocol.Debug.DebugBox value) {
        if (boxesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoxesIsMutable();
          boxes_.add(value);
          onChanged();
        } else {
          boxesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
       */
      public Builder addBoxes(
          int index, SC2APIProtocol.Debug.DebugBox value) {
        if (boxesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoxesIsMutable();
          boxes_.add(index, value);
          onChanged();
        } else {
          boxesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
       */
      public Builder addBoxes(
          SC2APIProtocol.Debug.DebugBox.Builder builderForValue) {
        if (boxesBuilder_ == null) {
          ensureBoxesIsMutable();
          boxes_.add(builderForValue.build());
          onChanged();
        } else {
          boxesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
       */
      public Builder addBoxes(
          int index, SC2APIProtocol.Debug.DebugBox.Builder builderForValue) {
        if (boxesBuilder_ == null) {
          ensureBoxesIsMutable();
          boxes_.add(index, builderForValue.build());
          onChanged();
        } else {
          boxesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
       */
      public Builder addAllBoxes(
          java.lang.Iterable<? extends SC2APIProtocol.Debug.DebugBox> values) {
        if (boxesBuilder_ == null) {
          ensureBoxesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, boxes_);
          onChanged();
        } else {
          boxesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
       */
      public Builder clearBoxes() {
        if (boxesBuilder_ == null) {
          boxes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          boxesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
       */
      public Builder removeBoxes(int index) {
        if (boxesBuilder_ == null) {
          ensureBoxesIsMutable();
          boxes_.remove(index);
          onChanged();
        } else {
          boxesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
       */
      public SC2APIProtocol.Debug.DebugBox.Builder getBoxesBuilder(
          int index) {
        return getBoxesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
       */
      public SC2APIProtocol.Debug.DebugBoxOrBuilder getBoxesOrBuilder(
          int index) {
        if (boxesBuilder_ == null) {
          return boxes_.get(index);  } else {
          return boxesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
       */
      public java.util.List<? extends SC2APIProtocol.Debug.DebugBoxOrBuilder> 
           getBoxesOrBuilderList() {
        if (boxesBuilder_ != null) {
          return boxesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(boxes_);
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
       */
      public SC2APIProtocol.Debug.DebugBox.Builder addBoxesBuilder() {
        return getBoxesFieldBuilder().addBuilder(
            SC2APIProtocol.Debug.DebugBox.getDefaultInstance());
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
       */
      public SC2APIProtocol.Debug.DebugBox.Builder addBoxesBuilder(
          int index) {
        return getBoxesFieldBuilder().addBuilder(
            index, SC2APIProtocol.Debug.DebugBox.getDefaultInstance());
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugBox boxes = 3;</code>
       */
      public java.util.List<SC2APIProtocol.Debug.DebugBox.Builder> 
           getBoxesBuilderList() {
        return getBoxesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          SC2APIProtocol.Debug.DebugBox, SC2APIProtocol.Debug.DebugBox.Builder, SC2APIProtocol.Debug.DebugBoxOrBuilder> 
          getBoxesFieldBuilder() {
        if (boxesBuilder_ == null) {
          boxesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              SC2APIProtocol.Debug.DebugBox, SC2APIProtocol.Debug.DebugBox.Builder, SC2APIProtocol.Debug.DebugBoxOrBuilder>(
                  boxes_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          boxes_ = null;
        }
        return boxesBuilder_;
      }

      private java.util.List<SC2APIProtocol.Debug.DebugSphere> spheres_ =
        java.util.Collections.emptyList();
      private void ensureSpheresIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          spheres_ = new java.util.ArrayList<SC2APIProtocol.Debug.DebugSphere>(spheres_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          SC2APIProtocol.Debug.DebugSphere, SC2APIProtocol.Debug.DebugSphere.Builder, SC2APIProtocol.Debug.DebugSphereOrBuilder> spheresBuilder_;

      /**
       * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
       */
      public java.util.List<SC2APIProtocol.Debug.DebugSphere> getSpheresList() {
        if (spheresBuilder_ == null) {
          return java.util.Collections.unmodifiableList(spheres_);
        } else {
          return spheresBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
       */
      public int getSpheresCount() {
        if (spheresBuilder_ == null) {
          return spheres_.size();
        } else {
          return spheresBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
       */
      public SC2APIProtocol.Debug.DebugSphere getSpheres(int index) {
        if (spheresBuilder_ == null) {
          return spheres_.get(index);
        } else {
          return spheresBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
       */
      public Builder setSpheres(
          int index, SC2APIProtocol.Debug.DebugSphere value) {
        if (spheresBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpheresIsMutable();
          spheres_.set(index, value);
          onChanged();
        } else {
          spheresBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
       */
      public Builder setSpheres(
          int index, SC2APIProtocol.Debug.DebugSphere.Builder builderForValue) {
        if (spheresBuilder_ == null) {
          ensureSpheresIsMutable();
          spheres_.set(index, builderForValue.build());
          onChanged();
        } else {
          spheresBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
       */
      public Builder addSpheres(SC2APIProtocol.Debug.DebugSphere value) {
        if (spheresBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpheresIsMutable();
          spheres_.add(value);
          onChanged();
        } else {
          spheresBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
       */
      public Builder addSpheres(
          int index, SC2APIProtocol.Debug.DebugSphere value) {
        if (spheresBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpheresIsMutable();
          spheres_.add(index, value);
          onChanged();
        } else {
          spheresBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
       */
      public Builder addSpheres(
          SC2APIProtocol.Debug.DebugSphere.Builder builderForValue) {
        if (spheresBuilder_ == null) {
          ensureSpheresIsMutable();
          spheres_.add(builderForValue.build());
          onChanged();
        } else {
          spheresBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
       */
      public Builder addSpheres(
          int index, SC2APIProtocol.Debug.DebugSphere.Builder builderForValue) {
        if (spheresBuilder_ == null) {
          ensureSpheresIsMutable();
          spheres_.add(index, builderForValue.build());
          onChanged();
        } else {
          spheresBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
       */
      public Builder addAllSpheres(
          java.lang.Iterable<? extends SC2APIProtocol.Debug.DebugSphere> values) {
        if (spheresBuilder_ == null) {
          ensureSpheresIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, spheres_);
          onChanged();
        } else {
          spheresBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
       */
      public Builder clearSpheres() {
        if (spheresBuilder_ == null) {
          spheres_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          spheresBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
       */
      public Builder removeSpheres(int index) {
        if (spheresBuilder_ == null) {
          ensureSpheresIsMutable();
          spheres_.remove(index);
          onChanged();
        } else {
          spheresBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
       */
      public SC2APIProtocol.Debug.DebugSphere.Builder getSpheresBuilder(
          int index) {
        return getSpheresFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
       */
      public SC2APIProtocol.Debug.DebugSphereOrBuilder getSpheresOrBuilder(
          int index) {
        if (spheresBuilder_ == null) {
          return spheres_.get(index);  } else {
          return spheresBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
       */
      public java.util.List<? extends SC2APIProtocol.Debug.DebugSphereOrBuilder> 
           getSpheresOrBuilderList() {
        if (spheresBuilder_ != null) {
          return spheresBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(spheres_);
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
       */
      public SC2APIProtocol.Debug.DebugSphere.Builder addSpheresBuilder() {
        return getSpheresFieldBuilder().addBuilder(
            SC2APIProtocol.Debug.DebugSphere.getDefaultInstance());
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
       */
      public SC2APIProtocol.Debug.DebugSphere.Builder addSpheresBuilder(
          int index) {
        return getSpheresFieldBuilder().addBuilder(
            index, SC2APIProtocol.Debug.DebugSphere.getDefaultInstance());
      }
      /**
       * <code>repeated .SC2APIProtocol.DebugSphere spheres = 4;</code>
       */
      public java.util.List<SC2APIProtocol.Debug.DebugSphere.Builder> 
           getSpheresBuilderList() {
        return getSpheresFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          SC2APIProtocol.Debug.DebugSphere, SC2APIProtocol.Debug.DebugSphere.Builder, SC2APIProtocol.Debug.DebugSphereOrBuilder> 
          getSpheresFieldBuilder() {
        if (spheresBuilder_ == null) {
          spheresBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              SC2APIProtocol.Debug.DebugSphere, SC2APIProtocol.Debug.DebugSphere.Builder, SC2APIProtocol.Debug.DebugSphereOrBuilder>(
                  spheres_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          spheres_ = null;
        }
        return spheresBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.DebugDraw)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.DebugDraw)
    private static final SC2APIProtocol.Debug.DebugDraw DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Debug.DebugDraw();
    }

    public static SC2APIProtocol.Debug.DebugDraw getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DebugDraw>
        PARSER = new com.google.protobuf.AbstractParser<DebugDraw>() {
      public DebugDraw parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DebugDraw(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DebugDraw> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DebugDraw> getParserForType() {
      return PARSER;
    }

    public SC2APIProtocol.Debug.DebugDraw getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LineOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.Line)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .SC2APIProtocol.Point p0 = 1;</code>
     */
    boolean hasP0();
    /**
     * <code>optional .SC2APIProtocol.Point p0 = 1;</code>
     */
    SC2APIProtocol.Common.Point getP0();
    /**
     * <code>optional .SC2APIProtocol.Point p0 = 1;</code>
     */
    SC2APIProtocol.Common.PointOrBuilder getP0OrBuilder();

    /**
     * <code>optional .SC2APIProtocol.Point p1 = 2;</code>
     */
    boolean hasP1();
    /**
     * <code>optional .SC2APIProtocol.Point p1 = 2;</code>
     */
    SC2APIProtocol.Common.Point getP1();
    /**
     * <code>optional .SC2APIProtocol.Point p1 = 2;</code>
     */
    SC2APIProtocol.Common.PointOrBuilder getP1OrBuilder();
  }
  /**
   * Protobuf type {@code SC2APIProtocol.Line}
   */
  public  static final class Line extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.Line)
      LineOrBuilder {
    // Use Line.newBuilder() to construct.
    private Line(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Line() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Line(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              SC2APIProtocol.Common.Point.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = p0_.toBuilder();
              }
              p0_ = input.readMessage(SC2APIProtocol.Common.Point.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(p0_);
                p0_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              SC2APIProtocol.Common.Point.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = p1_.toBuilder();
              }
              p1_ = input.readMessage(SC2APIProtocol.Common.Point.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(p1_);
                p1_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_Line_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_Line_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Debug.Line.class, SC2APIProtocol.Debug.Line.Builder.class);
    }

    private int bitField0_;
    public static final int P0_FIELD_NUMBER = 1;
    private SC2APIProtocol.Common.Point p0_;
    /**
     * <code>optional .SC2APIProtocol.Point p0 = 1;</code>
     */
    public boolean hasP0() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .SC2APIProtocol.Point p0 = 1;</code>
     */
    public SC2APIProtocol.Common.Point getP0() {
      return p0_ == null ? SC2APIProtocol.Common.Point.getDefaultInstance() : p0_;
    }
    /**
     * <code>optional .SC2APIProtocol.Point p0 = 1;</code>
     */
    public SC2APIProtocol.Common.PointOrBuilder getP0OrBuilder() {
      return p0_ == null ? SC2APIProtocol.Common.Point.getDefaultInstance() : p0_;
    }

    public static final int P1_FIELD_NUMBER = 2;
    private SC2APIProtocol.Common.Point p1_;
    /**
     * <code>optional .SC2APIProtocol.Point p1 = 2;</code>
     */
    public boolean hasP1() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .SC2APIProtocol.Point p1 = 2;</code>
     */
    public SC2APIProtocol.Common.Point getP1() {
      return p1_ == null ? SC2APIProtocol.Common.Point.getDefaultInstance() : p1_;
    }
    /**
     * <code>optional .SC2APIProtocol.Point p1 = 2;</code>
     */
    public SC2APIProtocol.Common.PointOrBuilder getP1OrBuilder() {
      return p1_ == null ? SC2APIProtocol.Common.Point.getDefaultInstance() : p1_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getP0());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getP1());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getP0());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getP1());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Debug.Line)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Debug.Line other = (SC2APIProtocol.Debug.Line) obj;

      boolean result = true;
      result = result && (hasP0() == other.hasP0());
      if (hasP0()) {
        result = result && getP0()
            .equals(other.getP0());
      }
      result = result && (hasP1() == other.hasP1());
      if (hasP1()) {
        result = result && getP1()
            .equals(other.getP1());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasP0()) {
        hash = (37 * hash) + P0_FIELD_NUMBER;
        hash = (53 * hash) + getP0().hashCode();
      }
      if (hasP1()) {
        hash = (37 * hash) + P1_FIELD_NUMBER;
        hash = (53 * hash) + getP1().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Debug.Line parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.Line parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.Line parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.Line parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.Line parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.Line parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.Line parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.Line parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.Line parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.Line parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Debug.Line prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC2APIProtocol.Line}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.Line)
        SC2APIProtocol.Debug.LineOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_Line_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_Line_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Debug.Line.class, SC2APIProtocol.Debug.Line.Builder.class);
      }

      // Construct using SC2APIProtocol.Debug.Line.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getP0FieldBuilder();
          getP1FieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (p0Builder_ == null) {
          p0_ = null;
        } else {
          p0Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (p1Builder_ == null) {
          p1_ = null;
        } else {
          p1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_Line_descriptor;
      }

      public SC2APIProtocol.Debug.Line getDefaultInstanceForType() {
        return SC2APIProtocol.Debug.Line.getDefaultInstance();
      }

      public SC2APIProtocol.Debug.Line build() {
        SC2APIProtocol.Debug.Line result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SC2APIProtocol.Debug.Line buildPartial() {
        SC2APIProtocol.Debug.Line result = new SC2APIProtocol.Debug.Line(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (p0Builder_ == null) {
          result.p0_ = p0_;
        } else {
          result.p0_ = p0Builder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (p1Builder_ == null) {
          result.p1_ = p1_;
        } else {
          result.p1_ = p1Builder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Debug.Line) {
          return mergeFrom((SC2APIProtocol.Debug.Line)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Debug.Line other) {
        if (other == SC2APIProtocol.Debug.Line.getDefaultInstance()) return this;
        if (other.hasP0()) {
          mergeP0(other.getP0());
        }
        if (other.hasP1()) {
          mergeP1(other.getP1());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Debug.Line parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Debug.Line) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private SC2APIProtocol.Common.Point p0_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Common.Point, SC2APIProtocol.Common.Point.Builder, SC2APIProtocol.Common.PointOrBuilder> p0Builder_;
      /**
       * <code>optional .SC2APIProtocol.Point p0 = 1;</code>
       */
      public boolean hasP0() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .SC2APIProtocol.Point p0 = 1;</code>
       */
      public SC2APIProtocol.Common.Point getP0() {
        if (p0Builder_ == null) {
          return p0_ == null ? SC2APIProtocol.Common.Point.getDefaultInstance() : p0_;
        } else {
          return p0Builder_.getMessage();
        }
      }
      /**
       * <code>optional .SC2APIProtocol.Point p0 = 1;</code>
       */
      public Builder setP0(SC2APIProtocol.Common.Point value) {
        if (p0Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          p0_ = value;
          onChanged();
        } else {
          p0Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Point p0 = 1;</code>
       */
      public Builder setP0(
          SC2APIProtocol.Common.Point.Builder builderForValue) {
        if (p0Builder_ == null) {
          p0_ = builderForValue.build();
          onChanged();
        } else {
          p0Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Point p0 = 1;</code>
       */
      public Builder mergeP0(SC2APIProtocol.Common.Point value) {
        if (p0Builder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              p0_ != null &&
              p0_ != SC2APIProtocol.Common.Point.getDefaultInstance()) {
            p0_ =
              SC2APIProtocol.Common.Point.newBuilder(p0_).mergeFrom(value).buildPartial();
          } else {
            p0_ = value;
          }
          onChanged();
        } else {
          p0Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Point p0 = 1;</code>
       */
      public Builder clearP0() {
        if (p0Builder_ == null) {
          p0_ = null;
          onChanged();
        } else {
          p0Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Point p0 = 1;</code>
       */
      public SC2APIProtocol.Common.Point.Builder getP0Builder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getP0FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SC2APIProtocol.Point p0 = 1;</code>
       */
      public SC2APIProtocol.Common.PointOrBuilder getP0OrBuilder() {
        if (p0Builder_ != null) {
          return p0Builder_.getMessageOrBuilder();
        } else {
          return p0_ == null ?
              SC2APIProtocol.Common.Point.getDefaultInstance() : p0_;
        }
      }
      /**
       * <code>optional .SC2APIProtocol.Point p0 = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Common.Point, SC2APIProtocol.Common.Point.Builder, SC2APIProtocol.Common.PointOrBuilder> 
          getP0FieldBuilder() {
        if (p0Builder_ == null) {
          p0Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SC2APIProtocol.Common.Point, SC2APIProtocol.Common.Point.Builder, SC2APIProtocol.Common.PointOrBuilder>(
                  getP0(),
                  getParentForChildren(),
                  isClean());
          p0_ = null;
        }
        return p0Builder_;
      }

      private SC2APIProtocol.Common.Point p1_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Common.Point, SC2APIProtocol.Common.Point.Builder, SC2APIProtocol.Common.PointOrBuilder> p1Builder_;
      /**
       * <code>optional .SC2APIProtocol.Point p1 = 2;</code>
       */
      public boolean hasP1() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .SC2APIProtocol.Point p1 = 2;</code>
       */
      public SC2APIProtocol.Common.Point getP1() {
        if (p1Builder_ == null) {
          return p1_ == null ? SC2APIProtocol.Common.Point.getDefaultInstance() : p1_;
        } else {
          return p1Builder_.getMessage();
        }
      }
      /**
       * <code>optional .SC2APIProtocol.Point p1 = 2;</code>
       */
      public Builder setP1(SC2APIProtocol.Common.Point value) {
        if (p1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          p1_ = value;
          onChanged();
        } else {
          p1Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Point p1 = 2;</code>
       */
      public Builder setP1(
          SC2APIProtocol.Common.Point.Builder builderForValue) {
        if (p1Builder_ == null) {
          p1_ = builderForValue.build();
          onChanged();
        } else {
          p1Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Point p1 = 2;</code>
       */
      public Builder mergeP1(SC2APIProtocol.Common.Point value) {
        if (p1Builder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              p1_ != null &&
              p1_ != SC2APIProtocol.Common.Point.getDefaultInstance()) {
            p1_ =
              SC2APIProtocol.Common.Point.newBuilder(p1_).mergeFrom(value).buildPartial();
          } else {
            p1_ = value;
          }
          onChanged();
        } else {
          p1Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Point p1 = 2;</code>
       */
      public Builder clearP1() {
        if (p1Builder_ == null) {
          p1_ = null;
          onChanged();
        } else {
          p1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Point p1 = 2;</code>
       */
      public SC2APIProtocol.Common.Point.Builder getP1Builder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getP1FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SC2APIProtocol.Point p1 = 2;</code>
       */
      public SC2APIProtocol.Common.PointOrBuilder getP1OrBuilder() {
        if (p1Builder_ != null) {
          return p1Builder_.getMessageOrBuilder();
        } else {
          return p1_ == null ?
              SC2APIProtocol.Common.Point.getDefaultInstance() : p1_;
        }
      }
      /**
       * <code>optional .SC2APIProtocol.Point p1 = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Common.Point, SC2APIProtocol.Common.Point.Builder, SC2APIProtocol.Common.PointOrBuilder> 
          getP1FieldBuilder() {
        if (p1Builder_ == null) {
          p1Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SC2APIProtocol.Common.Point, SC2APIProtocol.Common.Point.Builder, SC2APIProtocol.Common.PointOrBuilder>(
                  getP1(),
                  getParentForChildren(),
                  isClean());
          p1_ = null;
        }
        return p1Builder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.Line)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.Line)
    private static final SC2APIProtocol.Debug.Line DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Debug.Line();
    }

    public static SC2APIProtocol.Debug.Line getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Line>
        PARSER = new com.google.protobuf.AbstractParser<Line>() {
      public Line parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Line(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Line> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Line> getParserForType() {
      return PARSER;
    }

    public SC2APIProtocol.Debug.Line getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ColorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.Color)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 r = 1;</code>
     */
    boolean hasR();
    /**
     * <code>optional uint32 r = 1;</code>
     */
    int getR();

    /**
     * <code>optional uint32 g = 2;</code>
     */
    boolean hasG();
    /**
     * <code>optional uint32 g = 2;</code>
     */
    int getG();

    /**
     * <code>optional uint32 b = 3;</code>
     */
    boolean hasB();
    /**
     * <code>optional uint32 b = 3;</code>
     */
    int getB();
  }
  /**
   * Protobuf type {@code SC2APIProtocol.Color}
   */
  public  static final class Color extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.Color)
      ColorOrBuilder {
    // Use Color.newBuilder() to construct.
    private Color(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Color() {
      r_ = 0;
      g_ = 0;
      b_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Color(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              r_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              g_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              b_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_Color_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_Color_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Debug.Color.class, SC2APIProtocol.Debug.Color.Builder.class);
    }

    private int bitField0_;
    public static final int R_FIELD_NUMBER = 1;
    private int r_;
    /**
     * <code>optional uint32 r = 1;</code>
     */
    public boolean hasR() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 r = 1;</code>
     */
    public int getR() {
      return r_;
    }

    public static final int G_FIELD_NUMBER = 2;
    private int g_;
    /**
     * <code>optional uint32 g = 2;</code>
     */
    public boolean hasG() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 g = 2;</code>
     */
    public int getG() {
      return g_;
    }

    public static final int B_FIELD_NUMBER = 3;
    private int b_;
    /**
     * <code>optional uint32 b = 3;</code>
     */
    public boolean hasB() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 b = 3;</code>
     */
    public int getB() {
      return b_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, r_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, g_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, b_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, r_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, g_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, b_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Debug.Color)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Debug.Color other = (SC2APIProtocol.Debug.Color) obj;

      boolean result = true;
      result = result && (hasR() == other.hasR());
      if (hasR()) {
        result = result && (getR()
            == other.getR());
      }
      result = result && (hasG() == other.hasG());
      if (hasG()) {
        result = result && (getG()
            == other.getG());
      }
      result = result && (hasB() == other.hasB());
      if (hasB()) {
        result = result && (getB()
            == other.getB());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasR()) {
        hash = (37 * hash) + R_FIELD_NUMBER;
        hash = (53 * hash) + getR();
      }
      if (hasG()) {
        hash = (37 * hash) + G_FIELD_NUMBER;
        hash = (53 * hash) + getG();
      }
      if (hasB()) {
        hash = (37 * hash) + B_FIELD_NUMBER;
        hash = (53 * hash) + getB();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Debug.Color parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.Color parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.Color parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.Color parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.Color parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.Color parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.Color parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.Color parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.Color parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.Color parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Debug.Color prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC2APIProtocol.Color}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.Color)
        SC2APIProtocol.Debug.ColorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_Color_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_Color_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Debug.Color.class, SC2APIProtocol.Debug.Color.Builder.class);
      }

      // Construct using SC2APIProtocol.Debug.Color.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        r_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        g_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        b_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_Color_descriptor;
      }

      public SC2APIProtocol.Debug.Color getDefaultInstanceForType() {
        return SC2APIProtocol.Debug.Color.getDefaultInstance();
      }

      public SC2APIProtocol.Debug.Color build() {
        SC2APIProtocol.Debug.Color result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SC2APIProtocol.Debug.Color buildPartial() {
        SC2APIProtocol.Debug.Color result = new SC2APIProtocol.Debug.Color(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.r_ = r_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.g_ = g_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.b_ = b_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Debug.Color) {
          return mergeFrom((SC2APIProtocol.Debug.Color)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Debug.Color other) {
        if (other == SC2APIProtocol.Debug.Color.getDefaultInstance()) return this;
        if (other.hasR()) {
          setR(other.getR());
        }
        if (other.hasG()) {
          setG(other.getG());
        }
        if (other.hasB()) {
          setB(other.getB());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Debug.Color parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Debug.Color) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int r_ ;
      /**
       * <code>optional uint32 r = 1;</code>
       */
      public boolean hasR() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 r = 1;</code>
       */
      public int getR() {
        return r_;
      }
      /**
       * <code>optional uint32 r = 1;</code>
       */
      public Builder setR(int value) {
        bitField0_ |= 0x00000001;
        r_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 r = 1;</code>
       */
      public Builder clearR() {
        bitField0_ = (bitField0_ & ~0x00000001);
        r_ = 0;
        onChanged();
        return this;
      }

      private int g_ ;
      /**
       * <code>optional uint32 g = 2;</code>
       */
      public boolean hasG() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 g = 2;</code>
       */
      public int getG() {
        return g_;
      }
      /**
       * <code>optional uint32 g = 2;</code>
       */
      public Builder setG(int value) {
        bitField0_ |= 0x00000002;
        g_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 g = 2;</code>
       */
      public Builder clearG() {
        bitField0_ = (bitField0_ & ~0x00000002);
        g_ = 0;
        onChanged();
        return this;
      }

      private int b_ ;
      /**
       * <code>optional uint32 b = 3;</code>
       */
      public boolean hasB() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 b = 3;</code>
       */
      public int getB() {
        return b_;
      }
      /**
       * <code>optional uint32 b = 3;</code>
       */
      public Builder setB(int value) {
        bitField0_ |= 0x00000004;
        b_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 b = 3;</code>
       */
      public Builder clearB() {
        bitField0_ = (bitField0_ & ~0x00000004);
        b_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.Color)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.Color)
    private static final SC2APIProtocol.Debug.Color DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Debug.Color();
    }

    public static SC2APIProtocol.Debug.Color getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Color>
        PARSER = new com.google.protobuf.AbstractParser<Color>() {
      public Color parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Color(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Color> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Color> getParserForType() {
      return PARSER;
    }

    public SC2APIProtocol.Debug.Color getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DebugTextOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.DebugText)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .SC2APIProtocol.Color color = 1;</code>
     */
    boolean hasColor();
    /**
     * <code>optional .SC2APIProtocol.Color color = 1;</code>
     */
    SC2APIProtocol.Debug.Color getColor();
    /**
     * <code>optional .SC2APIProtocol.Color color = 1;</code>
     */
    SC2APIProtocol.Debug.ColorOrBuilder getColorOrBuilder();

    /**
     * <pre>
     * Text to display.
     * </pre>
     *
     * <code>optional string text = 2;</code>
     */
    boolean hasText();
    /**
     * <pre>
     * Text to display.
     * </pre>
     *
     * <code>optional string text = 2;</code>
     */
    java.lang.String getText();
    /**
     * <pre>
     * Text to display.
     * </pre>
     *
     * <code>optional string text = 2;</code>
     */
    com.google.protobuf.ByteString
        getTextBytes();

    /**
     * <pre>
     * Virtualized position in 2D (the screen is 0..1, 0..1 for any resolution).
     * </pre>
     *
     * <code>optional .SC2APIProtocol.Point virtual_pos = 3;</code>
     */
    boolean hasVirtualPos();
    /**
     * <pre>
     * Virtualized position in 2D (the screen is 0..1, 0..1 for any resolution).
     * </pre>
     *
     * <code>optional .SC2APIProtocol.Point virtual_pos = 3;</code>
     */
    SC2APIProtocol.Common.Point getVirtualPos();
    /**
     * <pre>
     * Virtualized position in 2D (the screen is 0..1, 0..1 for any resolution).
     * </pre>
     *
     * <code>optional .SC2APIProtocol.Point virtual_pos = 3;</code>
     */
    SC2APIProtocol.Common.PointOrBuilder getVirtualPosOrBuilder();

    /**
     * <pre>
     * Position in the world.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.Point world_pos = 4;</code>
     */
    boolean hasWorldPos();
    /**
     * <pre>
     * Position in the world.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.Point world_pos = 4;</code>
     */
    SC2APIProtocol.Common.Point getWorldPos();
    /**
     * <pre>
     * Position in the world.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.Point world_pos = 4;</code>
     */
    SC2APIProtocol.Common.PointOrBuilder getWorldPosOrBuilder();
  }
  /**
   * <pre>
   * Display debug text on screen.
   * </pre>
   *
   * Protobuf type {@code SC2APIProtocol.DebugText}
   */
  public  static final class DebugText extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.DebugText)
      DebugTextOrBuilder {
    // Use DebugText.newBuilder() to construct.
    private DebugText(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DebugText() {
      text_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DebugText(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              SC2APIProtocol.Debug.Color.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = color_.toBuilder();
              }
              color_ = input.readMessage(SC2APIProtocol.Debug.Color.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(color_);
                color_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              text_ = bs;
              break;
            }
            case 26: {
              SC2APIProtocol.Common.Point.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = virtualPos_.toBuilder();
              }
              virtualPos_ = input.readMessage(SC2APIProtocol.Common.Point.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(virtualPos_);
                virtualPos_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              SC2APIProtocol.Common.Point.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = worldPos_.toBuilder();
              }
              worldPos_ = input.readMessage(SC2APIProtocol.Common.Point.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(worldPos_);
                worldPos_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugText_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugText_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Debug.DebugText.class, SC2APIProtocol.Debug.DebugText.Builder.class);
    }

    private int bitField0_;
    public static final int COLOR_FIELD_NUMBER = 1;
    private SC2APIProtocol.Debug.Color color_;
    /**
     * <code>optional .SC2APIProtocol.Color color = 1;</code>
     */
    public boolean hasColor() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .SC2APIProtocol.Color color = 1;</code>
     */
    public SC2APIProtocol.Debug.Color getColor() {
      return color_ == null ? SC2APIProtocol.Debug.Color.getDefaultInstance() : color_;
    }
    /**
     * <code>optional .SC2APIProtocol.Color color = 1;</code>
     */
    public SC2APIProtocol.Debug.ColorOrBuilder getColorOrBuilder() {
      return color_ == null ? SC2APIProtocol.Debug.Color.getDefaultInstance() : color_;
    }

    public static final int TEXT_FIELD_NUMBER = 2;
    private volatile java.lang.Object text_;
    /**
     * <pre>
     * Text to display.
     * </pre>
     *
     * <code>optional string text = 2;</code>
     */
    public boolean hasText() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Text to display.
     * </pre>
     *
     * <code>optional string text = 2;</code>
     */
    public java.lang.String getText() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          text_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Text to display.
     * </pre>
     *
     * <code>optional string text = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTextBytes() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        text_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VIRTUAL_POS_FIELD_NUMBER = 3;
    private SC2APIProtocol.Common.Point virtualPos_;
    /**
     * <pre>
     * Virtualized position in 2D (the screen is 0..1, 0..1 for any resolution).
     * </pre>
     *
     * <code>optional .SC2APIProtocol.Point virtual_pos = 3;</code>
     */
    public boolean hasVirtualPos() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Virtualized position in 2D (the screen is 0..1, 0..1 for any resolution).
     * </pre>
     *
     * <code>optional .SC2APIProtocol.Point virtual_pos = 3;</code>
     */
    public SC2APIProtocol.Common.Point getVirtualPos() {
      return virtualPos_ == null ? SC2APIProtocol.Common.Point.getDefaultInstance() : virtualPos_;
    }
    /**
     * <pre>
     * Virtualized position in 2D (the screen is 0..1, 0..1 for any resolution).
     * </pre>
     *
     * <code>optional .SC2APIProtocol.Point virtual_pos = 3;</code>
     */
    public SC2APIProtocol.Common.PointOrBuilder getVirtualPosOrBuilder() {
      return virtualPos_ == null ? SC2APIProtocol.Common.Point.getDefaultInstance() : virtualPos_;
    }

    public static final int WORLD_POS_FIELD_NUMBER = 4;
    private SC2APIProtocol.Common.Point worldPos_;
    /**
     * <pre>
     * Position in the world.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.Point world_pos = 4;</code>
     */
    public boolean hasWorldPos() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Position in the world.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.Point world_pos = 4;</code>
     */
    public SC2APIProtocol.Common.Point getWorldPos() {
      return worldPos_ == null ? SC2APIProtocol.Common.Point.getDefaultInstance() : worldPos_;
    }
    /**
     * <pre>
     * Position in the world.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.Point world_pos = 4;</code>
     */
    public SC2APIProtocol.Common.PointOrBuilder getWorldPosOrBuilder() {
      return worldPos_ == null ? SC2APIProtocol.Common.Point.getDefaultInstance() : worldPos_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getColor());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, text_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getVirtualPos());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getWorldPos());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getColor());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, text_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getVirtualPos());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getWorldPos());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Debug.DebugText)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Debug.DebugText other = (SC2APIProtocol.Debug.DebugText) obj;

      boolean result = true;
      result = result && (hasColor() == other.hasColor());
      if (hasColor()) {
        result = result && getColor()
            .equals(other.getColor());
      }
      result = result && (hasText() == other.hasText());
      if (hasText()) {
        result = result && getText()
            .equals(other.getText());
      }
      result = result && (hasVirtualPos() == other.hasVirtualPos());
      if (hasVirtualPos()) {
        result = result && getVirtualPos()
            .equals(other.getVirtualPos());
      }
      result = result && (hasWorldPos() == other.hasWorldPos());
      if (hasWorldPos()) {
        result = result && getWorldPos()
            .equals(other.getWorldPos());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasColor()) {
        hash = (37 * hash) + COLOR_FIELD_NUMBER;
        hash = (53 * hash) + getColor().hashCode();
      }
      if (hasText()) {
        hash = (37 * hash) + TEXT_FIELD_NUMBER;
        hash = (53 * hash) + getText().hashCode();
      }
      if (hasVirtualPos()) {
        hash = (37 * hash) + VIRTUAL_POS_FIELD_NUMBER;
        hash = (53 * hash) + getVirtualPos().hashCode();
      }
      if (hasWorldPos()) {
        hash = (37 * hash) + WORLD_POS_FIELD_NUMBER;
        hash = (53 * hash) + getWorldPos().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Debug.DebugText parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugText parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugText parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugText parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugText parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugText parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugText parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugText parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugText parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugText parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Debug.DebugText prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Display debug text on screen.
     * </pre>
     *
     * Protobuf type {@code SC2APIProtocol.DebugText}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.DebugText)
        SC2APIProtocol.Debug.DebugTextOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugText_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugText_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Debug.DebugText.class, SC2APIProtocol.Debug.DebugText.Builder.class);
      }

      // Construct using SC2APIProtocol.Debug.DebugText.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getColorFieldBuilder();
          getVirtualPosFieldBuilder();
          getWorldPosFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (colorBuilder_ == null) {
          color_ = null;
        } else {
          colorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        text_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (virtualPosBuilder_ == null) {
          virtualPos_ = null;
        } else {
          virtualPosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (worldPosBuilder_ == null) {
          worldPos_ = null;
        } else {
          worldPosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugText_descriptor;
      }

      public SC2APIProtocol.Debug.DebugText getDefaultInstanceForType() {
        return SC2APIProtocol.Debug.DebugText.getDefaultInstance();
      }

      public SC2APIProtocol.Debug.DebugText build() {
        SC2APIProtocol.Debug.DebugText result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SC2APIProtocol.Debug.DebugText buildPartial() {
        SC2APIProtocol.Debug.DebugText result = new SC2APIProtocol.Debug.DebugText(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (colorBuilder_ == null) {
          result.color_ = color_;
        } else {
          result.color_ = colorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.text_ = text_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (virtualPosBuilder_ == null) {
          result.virtualPos_ = virtualPos_;
        } else {
          result.virtualPos_ = virtualPosBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (worldPosBuilder_ == null) {
          result.worldPos_ = worldPos_;
        } else {
          result.worldPos_ = worldPosBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Debug.DebugText) {
          return mergeFrom((SC2APIProtocol.Debug.DebugText)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Debug.DebugText other) {
        if (other == SC2APIProtocol.Debug.DebugText.getDefaultInstance()) return this;
        if (other.hasColor()) {
          mergeColor(other.getColor());
        }
        if (other.hasText()) {
          bitField0_ |= 0x00000002;
          text_ = other.text_;
          onChanged();
        }
        if (other.hasVirtualPos()) {
          mergeVirtualPos(other.getVirtualPos());
        }
        if (other.hasWorldPos()) {
          mergeWorldPos(other.getWorldPos());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Debug.DebugText parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Debug.DebugText) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private SC2APIProtocol.Debug.Color color_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.Color, SC2APIProtocol.Debug.Color.Builder, SC2APIProtocol.Debug.ColorOrBuilder> colorBuilder_;
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public boolean hasColor() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public SC2APIProtocol.Debug.Color getColor() {
        if (colorBuilder_ == null) {
          return color_ == null ? SC2APIProtocol.Debug.Color.getDefaultInstance() : color_;
        } else {
          return colorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public Builder setColor(SC2APIProtocol.Debug.Color value) {
        if (colorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          color_ = value;
          onChanged();
        } else {
          colorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public Builder setColor(
          SC2APIProtocol.Debug.Color.Builder builderForValue) {
        if (colorBuilder_ == null) {
          color_ = builderForValue.build();
          onChanged();
        } else {
          colorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public Builder mergeColor(SC2APIProtocol.Debug.Color value) {
        if (colorBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              color_ != null &&
              color_ != SC2APIProtocol.Debug.Color.getDefaultInstance()) {
            color_ =
              SC2APIProtocol.Debug.Color.newBuilder(color_).mergeFrom(value).buildPartial();
          } else {
            color_ = value;
          }
          onChanged();
        } else {
          colorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public Builder clearColor() {
        if (colorBuilder_ == null) {
          color_ = null;
          onChanged();
        } else {
          colorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public SC2APIProtocol.Debug.Color.Builder getColorBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getColorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public SC2APIProtocol.Debug.ColorOrBuilder getColorOrBuilder() {
        if (colorBuilder_ != null) {
          return colorBuilder_.getMessageOrBuilder();
        } else {
          return color_ == null ?
              SC2APIProtocol.Debug.Color.getDefaultInstance() : color_;
        }
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.Color, SC2APIProtocol.Debug.Color.Builder, SC2APIProtocol.Debug.ColorOrBuilder> 
          getColorFieldBuilder() {
        if (colorBuilder_ == null) {
          colorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SC2APIProtocol.Debug.Color, SC2APIProtocol.Debug.Color.Builder, SC2APIProtocol.Debug.ColorOrBuilder>(
                  getColor(),
                  getParentForChildren(),
                  isClean());
          color_ = null;
        }
        return colorBuilder_;
      }

      private java.lang.Object text_ = "";
      /**
       * <pre>
       * Text to display.
       * </pre>
       *
       * <code>optional string text = 2;</code>
       */
      public boolean hasText() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Text to display.
       * </pre>
       *
       * <code>optional string text = 2;</code>
       */
      public java.lang.String getText() {
        java.lang.Object ref = text_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            text_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Text to display.
       * </pre>
       *
       * <code>optional string text = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTextBytes() {
        java.lang.Object ref = text_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          text_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Text to display.
       * </pre>
       *
       * <code>optional string text = 2;</code>
       */
      public Builder setText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        text_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Text to display.
       * </pre>
       *
       * <code>optional string text = 2;</code>
       */
      public Builder clearText() {
        bitField0_ = (bitField0_ & ~0x00000002);
        text_ = getDefaultInstance().getText();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Text to display.
       * </pre>
       *
       * <code>optional string text = 2;</code>
       */
      public Builder setTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        text_ = value;
        onChanged();
        return this;
      }

      private SC2APIProtocol.Common.Point virtualPos_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Common.Point, SC2APIProtocol.Common.Point.Builder, SC2APIProtocol.Common.PointOrBuilder> virtualPosBuilder_;
      /**
       * <pre>
       * Virtualized position in 2D (the screen is 0..1, 0..1 for any resolution).
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Point virtual_pos = 3;</code>
       */
      public boolean hasVirtualPos() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Virtualized position in 2D (the screen is 0..1, 0..1 for any resolution).
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Point virtual_pos = 3;</code>
       */
      public SC2APIProtocol.Common.Point getVirtualPos() {
        if (virtualPosBuilder_ == null) {
          return virtualPos_ == null ? SC2APIProtocol.Common.Point.getDefaultInstance() : virtualPos_;
        } else {
          return virtualPosBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Virtualized position in 2D (the screen is 0..1, 0..1 for any resolution).
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Point virtual_pos = 3;</code>
       */
      public Builder setVirtualPos(SC2APIProtocol.Common.Point value) {
        if (virtualPosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          virtualPos_ = value;
          onChanged();
        } else {
          virtualPosBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Virtualized position in 2D (the screen is 0..1, 0..1 for any resolution).
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Point virtual_pos = 3;</code>
       */
      public Builder setVirtualPos(
          SC2APIProtocol.Common.Point.Builder builderForValue) {
        if (virtualPosBuilder_ == null) {
          virtualPos_ = builderForValue.build();
          onChanged();
        } else {
          virtualPosBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Virtualized position in 2D (the screen is 0..1, 0..1 for any resolution).
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Point virtual_pos = 3;</code>
       */
      public Builder mergeVirtualPos(SC2APIProtocol.Common.Point value) {
        if (virtualPosBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              virtualPos_ != null &&
              virtualPos_ != SC2APIProtocol.Common.Point.getDefaultInstance()) {
            virtualPos_ =
              SC2APIProtocol.Common.Point.newBuilder(virtualPos_).mergeFrom(value).buildPartial();
          } else {
            virtualPos_ = value;
          }
          onChanged();
        } else {
          virtualPosBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Virtualized position in 2D (the screen is 0..1, 0..1 for any resolution).
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Point virtual_pos = 3;</code>
       */
      public Builder clearVirtualPos() {
        if (virtualPosBuilder_ == null) {
          virtualPos_ = null;
          onChanged();
        } else {
          virtualPosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <pre>
       * Virtualized position in 2D (the screen is 0..1, 0..1 for any resolution).
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Point virtual_pos = 3;</code>
       */
      public SC2APIProtocol.Common.Point.Builder getVirtualPosBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getVirtualPosFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Virtualized position in 2D (the screen is 0..1, 0..1 for any resolution).
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Point virtual_pos = 3;</code>
       */
      public SC2APIProtocol.Common.PointOrBuilder getVirtualPosOrBuilder() {
        if (virtualPosBuilder_ != null) {
          return virtualPosBuilder_.getMessageOrBuilder();
        } else {
          return virtualPos_ == null ?
              SC2APIProtocol.Common.Point.getDefaultInstance() : virtualPos_;
        }
      }
      /**
       * <pre>
       * Virtualized position in 2D (the screen is 0..1, 0..1 for any resolution).
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Point virtual_pos = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Common.Point, SC2APIProtocol.Common.Point.Builder, SC2APIProtocol.Common.PointOrBuilder> 
          getVirtualPosFieldBuilder() {
        if (virtualPosBuilder_ == null) {
          virtualPosBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SC2APIProtocol.Common.Point, SC2APIProtocol.Common.Point.Builder, SC2APIProtocol.Common.PointOrBuilder>(
                  getVirtualPos(),
                  getParentForChildren(),
                  isClean());
          virtualPos_ = null;
        }
        return virtualPosBuilder_;
      }

      private SC2APIProtocol.Common.Point worldPos_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Common.Point, SC2APIProtocol.Common.Point.Builder, SC2APIProtocol.Common.PointOrBuilder> worldPosBuilder_;
      /**
       * <pre>
       * Position in the world.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Point world_pos = 4;</code>
       */
      public boolean hasWorldPos() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Position in the world.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Point world_pos = 4;</code>
       */
      public SC2APIProtocol.Common.Point getWorldPos() {
        if (worldPosBuilder_ == null) {
          return worldPos_ == null ? SC2APIProtocol.Common.Point.getDefaultInstance() : worldPos_;
        } else {
          return worldPosBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Position in the world.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Point world_pos = 4;</code>
       */
      public Builder setWorldPos(SC2APIProtocol.Common.Point value) {
        if (worldPosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          worldPos_ = value;
          onChanged();
        } else {
          worldPosBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Position in the world.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Point world_pos = 4;</code>
       */
      public Builder setWorldPos(
          SC2APIProtocol.Common.Point.Builder builderForValue) {
        if (worldPosBuilder_ == null) {
          worldPos_ = builderForValue.build();
          onChanged();
        } else {
          worldPosBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Position in the world.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Point world_pos = 4;</code>
       */
      public Builder mergeWorldPos(SC2APIProtocol.Common.Point value) {
        if (worldPosBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              worldPos_ != null &&
              worldPos_ != SC2APIProtocol.Common.Point.getDefaultInstance()) {
            worldPos_ =
              SC2APIProtocol.Common.Point.newBuilder(worldPos_).mergeFrom(value).buildPartial();
          } else {
            worldPos_ = value;
          }
          onChanged();
        } else {
          worldPosBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Position in the world.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Point world_pos = 4;</code>
       */
      public Builder clearWorldPos() {
        if (worldPosBuilder_ == null) {
          worldPos_ = null;
          onChanged();
        } else {
          worldPosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <pre>
       * Position in the world.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Point world_pos = 4;</code>
       */
      public SC2APIProtocol.Common.Point.Builder getWorldPosBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getWorldPosFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Position in the world.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Point world_pos = 4;</code>
       */
      public SC2APIProtocol.Common.PointOrBuilder getWorldPosOrBuilder() {
        if (worldPosBuilder_ != null) {
          return worldPosBuilder_.getMessageOrBuilder();
        } else {
          return worldPos_ == null ?
              SC2APIProtocol.Common.Point.getDefaultInstance() : worldPos_;
        }
      }
      /**
       * <pre>
       * Position in the world.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Point world_pos = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Common.Point, SC2APIProtocol.Common.Point.Builder, SC2APIProtocol.Common.PointOrBuilder> 
          getWorldPosFieldBuilder() {
        if (worldPosBuilder_ == null) {
          worldPosBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SC2APIProtocol.Common.Point, SC2APIProtocol.Common.Point.Builder, SC2APIProtocol.Common.PointOrBuilder>(
                  getWorldPos(),
                  getParentForChildren(),
                  isClean());
          worldPos_ = null;
        }
        return worldPosBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.DebugText)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.DebugText)
    private static final SC2APIProtocol.Debug.DebugText DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Debug.DebugText();
    }

    public static SC2APIProtocol.Debug.DebugText getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DebugText>
        PARSER = new com.google.protobuf.AbstractParser<DebugText>() {
      public DebugText parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DebugText(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DebugText> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DebugText> getParserForType() {
      return PARSER;
    }

    public SC2APIProtocol.Debug.DebugText getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DebugLineOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.DebugLine)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .SC2APIProtocol.Color color = 1;</code>
     */
    boolean hasColor();
    /**
     * <code>optional .SC2APIProtocol.Color color = 1;</code>
     */
    SC2APIProtocol.Debug.Color getColor();
    /**
     * <code>optional .SC2APIProtocol.Color color = 1;</code>
     */
    SC2APIProtocol.Debug.ColorOrBuilder getColorOrBuilder();

    /**
     * <pre>
     * World space line.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.Line line = 2;</code>
     */
    boolean hasLine();
    /**
     * <pre>
     * World space line.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.Line line = 2;</code>
     */
    SC2APIProtocol.Debug.Line getLine();
    /**
     * <pre>
     * World space line.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.Line line = 2;</code>
     */
    SC2APIProtocol.Debug.LineOrBuilder getLineOrBuilder();
  }
  /**
   * <pre>
   * Display debug lines on screen.
   * </pre>
   *
   * Protobuf type {@code SC2APIProtocol.DebugLine}
   */
  public  static final class DebugLine extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.DebugLine)
      DebugLineOrBuilder {
    // Use DebugLine.newBuilder() to construct.
    private DebugLine(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DebugLine() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DebugLine(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              SC2APIProtocol.Debug.Color.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = color_.toBuilder();
              }
              color_ = input.readMessage(SC2APIProtocol.Debug.Color.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(color_);
                color_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              SC2APIProtocol.Debug.Line.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = line_.toBuilder();
              }
              line_ = input.readMessage(SC2APIProtocol.Debug.Line.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(line_);
                line_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugLine_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugLine_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Debug.DebugLine.class, SC2APIProtocol.Debug.DebugLine.Builder.class);
    }

    private int bitField0_;
    public static final int COLOR_FIELD_NUMBER = 1;
    private SC2APIProtocol.Debug.Color color_;
    /**
     * <code>optional .SC2APIProtocol.Color color = 1;</code>
     */
    public boolean hasColor() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .SC2APIProtocol.Color color = 1;</code>
     */
    public SC2APIProtocol.Debug.Color getColor() {
      return color_ == null ? SC2APIProtocol.Debug.Color.getDefaultInstance() : color_;
    }
    /**
     * <code>optional .SC2APIProtocol.Color color = 1;</code>
     */
    public SC2APIProtocol.Debug.ColorOrBuilder getColorOrBuilder() {
      return color_ == null ? SC2APIProtocol.Debug.Color.getDefaultInstance() : color_;
    }

    public static final int LINE_FIELD_NUMBER = 2;
    private SC2APIProtocol.Debug.Line line_;
    /**
     * <pre>
     * World space line.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.Line line = 2;</code>
     */
    public boolean hasLine() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * World space line.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.Line line = 2;</code>
     */
    public SC2APIProtocol.Debug.Line getLine() {
      return line_ == null ? SC2APIProtocol.Debug.Line.getDefaultInstance() : line_;
    }
    /**
     * <pre>
     * World space line.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.Line line = 2;</code>
     */
    public SC2APIProtocol.Debug.LineOrBuilder getLineOrBuilder() {
      return line_ == null ? SC2APIProtocol.Debug.Line.getDefaultInstance() : line_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getColor());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getLine());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getColor());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLine());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Debug.DebugLine)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Debug.DebugLine other = (SC2APIProtocol.Debug.DebugLine) obj;

      boolean result = true;
      result = result && (hasColor() == other.hasColor());
      if (hasColor()) {
        result = result && getColor()
            .equals(other.getColor());
      }
      result = result && (hasLine() == other.hasLine());
      if (hasLine()) {
        result = result && getLine()
            .equals(other.getLine());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasColor()) {
        hash = (37 * hash) + COLOR_FIELD_NUMBER;
        hash = (53 * hash) + getColor().hashCode();
      }
      if (hasLine()) {
        hash = (37 * hash) + LINE_FIELD_NUMBER;
        hash = (53 * hash) + getLine().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Debug.DebugLine parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugLine parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugLine parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugLine parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugLine parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugLine parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugLine parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugLine parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugLine parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugLine parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Debug.DebugLine prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Display debug lines on screen.
     * </pre>
     *
     * Protobuf type {@code SC2APIProtocol.DebugLine}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.DebugLine)
        SC2APIProtocol.Debug.DebugLineOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugLine_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugLine_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Debug.DebugLine.class, SC2APIProtocol.Debug.DebugLine.Builder.class);
      }

      // Construct using SC2APIProtocol.Debug.DebugLine.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getColorFieldBuilder();
          getLineFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (colorBuilder_ == null) {
          color_ = null;
        } else {
          colorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (lineBuilder_ == null) {
          line_ = null;
        } else {
          lineBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugLine_descriptor;
      }

      public SC2APIProtocol.Debug.DebugLine getDefaultInstanceForType() {
        return SC2APIProtocol.Debug.DebugLine.getDefaultInstance();
      }

      public SC2APIProtocol.Debug.DebugLine build() {
        SC2APIProtocol.Debug.DebugLine result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SC2APIProtocol.Debug.DebugLine buildPartial() {
        SC2APIProtocol.Debug.DebugLine result = new SC2APIProtocol.Debug.DebugLine(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (colorBuilder_ == null) {
          result.color_ = color_;
        } else {
          result.color_ = colorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (lineBuilder_ == null) {
          result.line_ = line_;
        } else {
          result.line_ = lineBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Debug.DebugLine) {
          return mergeFrom((SC2APIProtocol.Debug.DebugLine)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Debug.DebugLine other) {
        if (other == SC2APIProtocol.Debug.DebugLine.getDefaultInstance()) return this;
        if (other.hasColor()) {
          mergeColor(other.getColor());
        }
        if (other.hasLine()) {
          mergeLine(other.getLine());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Debug.DebugLine parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Debug.DebugLine) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private SC2APIProtocol.Debug.Color color_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.Color, SC2APIProtocol.Debug.Color.Builder, SC2APIProtocol.Debug.ColorOrBuilder> colorBuilder_;
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public boolean hasColor() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public SC2APIProtocol.Debug.Color getColor() {
        if (colorBuilder_ == null) {
          return color_ == null ? SC2APIProtocol.Debug.Color.getDefaultInstance() : color_;
        } else {
          return colorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public Builder setColor(SC2APIProtocol.Debug.Color value) {
        if (colorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          color_ = value;
          onChanged();
        } else {
          colorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public Builder setColor(
          SC2APIProtocol.Debug.Color.Builder builderForValue) {
        if (colorBuilder_ == null) {
          color_ = builderForValue.build();
          onChanged();
        } else {
          colorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public Builder mergeColor(SC2APIProtocol.Debug.Color value) {
        if (colorBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              color_ != null &&
              color_ != SC2APIProtocol.Debug.Color.getDefaultInstance()) {
            color_ =
              SC2APIProtocol.Debug.Color.newBuilder(color_).mergeFrom(value).buildPartial();
          } else {
            color_ = value;
          }
          onChanged();
        } else {
          colorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public Builder clearColor() {
        if (colorBuilder_ == null) {
          color_ = null;
          onChanged();
        } else {
          colorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public SC2APIProtocol.Debug.Color.Builder getColorBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getColorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public SC2APIProtocol.Debug.ColorOrBuilder getColorOrBuilder() {
        if (colorBuilder_ != null) {
          return colorBuilder_.getMessageOrBuilder();
        } else {
          return color_ == null ?
              SC2APIProtocol.Debug.Color.getDefaultInstance() : color_;
        }
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.Color, SC2APIProtocol.Debug.Color.Builder, SC2APIProtocol.Debug.ColorOrBuilder> 
          getColorFieldBuilder() {
        if (colorBuilder_ == null) {
          colorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SC2APIProtocol.Debug.Color, SC2APIProtocol.Debug.Color.Builder, SC2APIProtocol.Debug.ColorOrBuilder>(
                  getColor(),
                  getParentForChildren(),
                  isClean());
          color_ = null;
        }
        return colorBuilder_;
      }

      private SC2APIProtocol.Debug.Line line_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.Line, SC2APIProtocol.Debug.Line.Builder, SC2APIProtocol.Debug.LineOrBuilder> lineBuilder_;
      /**
       * <pre>
       * World space line.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Line line = 2;</code>
       */
      public boolean hasLine() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * World space line.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Line line = 2;</code>
       */
      public SC2APIProtocol.Debug.Line getLine() {
        if (lineBuilder_ == null) {
          return line_ == null ? SC2APIProtocol.Debug.Line.getDefaultInstance() : line_;
        } else {
          return lineBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * World space line.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Line line = 2;</code>
       */
      public Builder setLine(SC2APIProtocol.Debug.Line value) {
        if (lineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          line_ = value;
          onChanged();
        } else {
          lineBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * World space line.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Line line = 2;</code>
       */
      public Builder setLine(
          SC2APIProtocol.Debug.Line.Builder builderForValue) {
        if (lineBuilder_ == null) {
          line_ = builderForValue.build();
          onChanged();
        } else {
          lineBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * World space line.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Line line = 2;</code>
       */
      public Builder mergeLine(SC2APIProtocol.Debug.Line value) {
        if (lineBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              line_ != null &&
              line_ != SC2APIProtocol.Debug.Line.getDefaultInstance()) {
            line_ =
              SC2APIProtocol.Debug.Line.newBuilder(line_).mergeFrom(value).buildPartial();
          } else {
            line_ = value;
          }
          onChanged();
        } else {
          lineBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * World space line.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Line line = 2;</code>
       */
      public Builder clearLine() {
        if (lineBuilder_ == null) {
          line_ = null;
          onChanged();
        } else {
          lineBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       * World space line.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Line line = 2;</code>
       */
      public SC2APIProtocol.Debug.Line.Builder getLineBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getLineFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * World space line.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Line line = 2;</code>
       */
      public SC2APIProtocol.Debug.LineOrBuilder getLineOrBuilder() {
        if (lineBuilder_ != null) {
          return lineBuilder_.getMessageOrBuilder();
        } else {
          return line_ == null ?
              SC2APIProtocol.Debug.Line.getDefaultInstance() : line_;
        }
      }
      /**
       * <pre>
       * World space line.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.Line line = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.Line, SC2APIProtocol.Debug.Line.Builder, SC2APIProtocol.Debug.LineOrBuilder> 
          getLineFieldBuilder() {
        if (lineBuilder_ == null) {
          lineBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SC2APIProtocol.Debug.Line, SC2APIProtocol.Debug.Line.Builder, SC2APIProtocol.Debug.LineOrBuilder>(
                  getLine(),
                  getParentForChildren(),
                  isClean());
          line_ = null;
        }
        return lineBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.DebugLine)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.DebugLine)
    private static final SC2APIProtocol.Debug.DebugLine DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Debug.DebugLine();
    }

    public static SC2APIProtocol.Debug.DebugLine getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DebugLine>
        PARSER = new com.google.protobuf.AbstractParser<DebugLine>() {
      public DebugLine parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DebugLine(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DebugLine> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DebugLine> getParserForType() {
      return PARSER;
    }

    public SC2APIProtocol.Debug.DebugLine getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DebugBoxOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.DebugBox)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .SC2APIProtocol.Color color = 1;</code>
     */
    boolean hasColor();
    /**
     * <code>optional .SC2APIProtocol.Color color = 1;</code>
     */
    SC2APIProtocol.Debug.Color getColor();
    /**
     * <code>optional .SC2APIProtocol.Color color = 1;</code>
     */
    SC2APIProtocol.Debug.ColorOrBuilder getColorOrBuilder();

    /**
     * <code>optional .SC2APIProtocol.Point min = 2;</code>
     */
    boolean hasMin();
    /**
     * <code>optional .SC2APIProtocol.Point min = 2;</code>
     */
    SC2APIProtocol.Common.Point getMin();
    /**
     * <code>optional .SC2APIProtocol.Point min = 2;</code>
     */
    SC2APIProtocol.Common.PointOrBuilder getMinOrBuilder();

    /**
     * <code>optional .SC2APIProtocol.Point max = 3;</code>
     */
    boolean hasMax();
    /**
     * <code>optional .SC2APIProtocol.Point max = 3;</code>
     */
    SC2APIProtocol.Common.Point getMax();
    /**
     * <code>optional .SC2APIProtocol.Point max = 3;</code>
     */
    SC2APIProtocol.Common.PointOrBuilder getMaxOrBuilder();
  }
  /**
   * <pre>
   * Display debug boxes on screen.
   * </pre>
   *
   * Protobuf type {@code SC2APIProtocol.DebugBox}
   */
  public  static final class DebugBox extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.DebugBox)
      DebugBoxOrBuilder {
    // Use DebugBox.newBuilder() to construct.
    private DebugBox(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DebugBox() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DebugBox(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              SC2APIProtocol.Debug.Color.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = color_.toBuilder();
              }
              color_ = input.readMessage(SC2APIProtocol.Debug.Color.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(color_);
                color_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              SC2APIProtocol.Common.Point.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = min_.toBuilder();
              }
              min_ = input.readMessage(SC2APIProtocol.Common.Point.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(min_);
                min_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              SC2APIProtocol.Common.Point.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = max_.toBuilder();
              }
              max_ = input.readMessage(SC2APIProtocol.Common.Point.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(max_);
                max_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugBox_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugBox_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Debug.DebugBox.class, SC2APIProtocol.Debug.DebugBox.Builder.class);
    }

    private int bitField0_;
    public static final int COLOR_FIELD_NUMBER = 1;
    private SC2APIProtocol.Debug.Color color_;
    /**
     * <code>optional .SC2APIProtocol.Color color = 1;</code>
     */
    public boolean hasColor() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .SC2APIProtocol.Color color = 1;</code>
     */
    public SC2APIProtocol.Debug.Color getColor() {
      return color_ == null ? SC2APIProtocol.Debug.Color.getDefaultInstance() : color_;
    }
    /**
     * <code>optional .SC2APIProtocol.Color color = 1;</code>
     */
    public SC2APIProtocol.Debug.ColorOrBuilder getColorOrBuilder() {
      return color_ == null ? SC2APIProtocol.Debug.Color.getDefaultInstance() : color_;
    }

    public static final int MIN_FIELD_NUMBER = 2;
    private SC2APIProtocol.Common.Point min_;
    /**
     * <code>optional .SC2APIProtocol.Point min = 2;</code>
     */
    public boolean hasMin() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .SC2APIProtocol.Point min = 2;</code>
     */
    public SC2APIProtocol.Common.Point getMin() {
      return min_ == null ? SC2APIProtocol.Common.Point.getDefaultInstance() : min_;
    }
    /**
     * <code>optional .SC2APIProtocol.Point min = 2;</code>
     */
    public SC2APIProtocol.Common.PointOrBuilder getMinOrBuilder() {
      return min_ == null ? SC2APIProtocol.Common.Point.getDefaultInstance() : min_;
    }

    public static final int MAX_FIELD_NUMBER = 3;
    private SC2APIProtocol.Common.Point max_;
    /**
     * <code>optional .SC2APIProtocol.Point max = 3;</code>
     */
    public boolean hasMax() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .SC2APIProtocol.Point max = 3;</code>
     */
    public SC2APIProtocol.Common.Point getMax() {
      return max_ == null ? SC2APIProtocol.Common.Point.getDefaultInstance() : max_;
    }
    /**
     * <code>optional .SC2APIProtocol.Point max = 3;</code>
     */
    public SC2APIProtocol.Common.PointOrBuilder getMaxOrBuilder() {
      return max_ == null ? SC2APIProtocol.Common.Point.getDefaultInstance() : max_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getColor());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getMin());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getMax());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getColor());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMin());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getMax());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Debug.DebugBox)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Debug.DebugBox other = (SC2APIProtocol.Debug.DebugBox) obj;

      boolean result = true;
      result = result && (hasColor() == other.hasColor());
      if (hasColor()) {
        result = result && getColor()
            .equals(other.getColor());
      }
      result = result && (hasMin() == other.hasMin());
      if (hasMin()) {
        result = result && getMin()
            .equals(other.getMin());
      }
      result = result && (hasMax() == other.hasMax());
      if (hasMax()) {
        result = result && getMax()
            .equals(other.getMax());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasColor()) {
        hash = (37 * hash) + COLOR_FIELD_NUMBER;
        hash = (53 * hash) + getColor().hashCode();
      }
      if (hasMin()) {
        hash = (37 * hash) + MIN_FIELD_NUMBER;
        hash = (53 * hash) + getMin().hashCode();
      }
      if (hasMax()) {
        hash = (37 * hash) + MAX_FIELD_NUMBER;
        hash = (53 * hash) + getMax().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Debug.DebugBox parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugBox parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugBox parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugBox parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugBox parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugBox parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugBox parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugBox parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugBox parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugBox parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Debug.DebugBox prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Display debug boxes on screen.
     * </pre>
     *
     * Protobuf type {@code SC2APIProtocol.DebugBox}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.DebugBox)
        SC2APIProtocol.Debug.DebugBoxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugBox_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugBox_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Debug.DebugBox.class, SC2APIProtocol.Debug.DebugBox.Builder.class);
      }

      // Construct using SC2APIProtocol.Debug.DebugBox.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getColorFieldBuilder();
          getMinFieldBuilder();
          getMaxFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (colorBuilder_ == null) {
          color_ = null;
        } else {
          colorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (minBuilder_ == null) {
          min_ = null;
        } else {
          minBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (maxBuilder_ == null) {
          max_ = null;
        } else {
          maxBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugBox_descriptor;
      }

      public SC2APIProtocol.Debug.DebugBox getDefaultInstanceForType() {
        return SC2APIProtocol.Debug.DebugBox.getDefaultInstance();
      }

      public SC2APIProtocol.Debug.DebugBox build() {
        SC2APIProtocol.Debug.DebugBox result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SC2APIProtocol.Debug.DebugBox buildPartial() {
        SC2APIProtocol.Debug.DebugBox result = new SC2APIProtocol.Debug.DebugBox(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (colorBuilder_ == null) {
          result.color_ = color_;
        } else {
          result.color_ = colorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (minBuilder_ == null) {
          result.min_ = min_;
        } else {
          result.min_ = minBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (maxBuilder_ == null) {
          result.max_ = max_;
        } else {
          result.max_ = maxBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Debug.DebugBox) {
          return mergeFrom((SC2APIProtocol.Debug.DebugBox)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Debug.DebugBox other) {
        if (other == SC2APIProtocol.Debug.DebugBox.getDefaultInstance()) return this;
        if (other.hasColor()) {
          mergeColor(other.getColor());
        }
        if (other.hasMin()) {
          mergeMin(other.getMin());
        }
        if (other.hasMax()) {
          mergeMax(other.getMax());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Debug.DebugBox parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Debug.DebugBox) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private SC2APIProtocol.Debug.Color color_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.Color, SC2APIProtocol.Debug.Color.Builder, SC2APIProtocol.Debug.ColorOrBuilder> colorBuilder_;
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public boolean hasColor() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public SC2APIProtocol.Debug.Color getColor() {
        if (colorBuilder_ == null) {
          return color_ == null ? SC2APIProtocol.Debug.Color.getDefaultInstance() : color_;
        } else {
          return colorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public Builder setColor(SC2APIProtocol.Debug.Color value) {
        if (colorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          color_ = value;
          onChanged();
        } else {
          colorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public Builder setColor(
          SC2APIProtocol.Debug.Color.Builder builderForValue) {
        if (colorBuilder_ == null) {
          color_ = builderForValue.build();
          onChanged();
        } else {
          colorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public Builder mergeColor(SC2APIProtocol.Debug.Color value) {
        if (colorBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              color_ != null &&
              color_ != SC2APIProtocol.Debug.Color.getDefaultInstance()) {
            color_ =
              SC2APIProtocol.Debug.Color.newBuilder(color_).mergeFrom(value).buildPartial();
          } else {
            color_ = value;
          }
          onChanged();
        } else {
          colorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public Builder clearColor() {
        if (colorBuilder_ == null) {
          color_ = null;
          onChanged();
        } else {
          colorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public SC2APIProtocol.Debug.Color.Builder getColorBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getColorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public SC2APIProtocol.Debug.ColorOrBuilder getColorOrBuilder() {
        if (colorBuilder_ != null) {
          return colorBuilder_.getMessageOrBuilder();
        } else {
          return color_ == null ?
              SC2APIProtocol.Debug.Color.getDefaultInstance() : color_;
        }
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.Color, SC2APIProtocol.Debug.Color.Builder, SC2APIProtocol.Debug.ColorOrBuilder> 
          getColorFieldBuilder() {
        if (colorBuilder_ == null) {
          colorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SC2APIProtocol.Debug.Color, SC2APIProtocol.Debug.Color.Builder, SC2APIProtocol.Debug.ColorOrBuilder>(
                  getColor(),
                  getParentForChildren(),
                  isClean());
          color_ = null;
        }
        return colorBuilder_;
      }

      private SC2APIProtocol.Common.Point min_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Common.Point, SC2APIProtocol.Common.Point.Builder, SC2APIProtocol.Common.PointOrBuilder> minBuilder_;
      /**
       * <code>optional .SC2APIProtocol.Point min = 2;</code>
       */
      public boolean hasMin() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .SC2APIProtocol.Point min = 2;</code>
       */
      public SC2APIProtocol.Common.Point getMin() {
        if (minBuilder_ == null) {
          return min_ == null ? SC2APIProtocol.Common.Point.getDefaultInstance() : min_;
        } else {
          return minBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SC2APIProtocol.Point min = 2;</code>
       */
      public Builder setMin(SC2APIProtocol.Common.Point value) {
        if (minBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          min_ = value;
          onChanged();
        } else {
          minBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Point min = 2;</code>
       */
      public Builder setMin(
          SC2APIProtocol.Common.Point.Builder builderForValue) {
        if (minBuilder_ == null) {
          min_ = builderForValue.build();
          onChanged();
        } else {
          minBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Point min = 2;</code>
       */
      public Builder mergeMin(SC2APIProtocol.Common.Point value) {
        if (minBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              min_ != null &&
              min_ != SC2APIProtocol.Common.Point.getDefaultInstance()) {
            min_ =
              SC2APIProtocol.Common.Point.newBuilder(min_).mergeFrom(value).buildPartial();
          } else {
            min_ = value;
          }
          onChanged();
        } else {
          minBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Point min = 2;</code>
       */
      public Builder clearMin() {
        if (minBuilder_ == null) {
          min_ = null;
          onChanged();
        } else {
          minBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Point min = 2;</code>
       */
      public SC2APIProtocol.Common.Point.Builder getMinBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getMinFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SC2APIProtocol.Point min = 2;</code>
       */
      public SC2APIProtocol.Common.PointOrBuilder getMinOrBuilder() {
        if (minBuilder_ != null) {
          return minBuilder_.getMessageOrBuilder();
        } else {
          return min_ == null ?
              SC2APIProtocol.Common.Point.getDefaultInstance() : min_;
        }
      }
      /**
       * <code>optional .SC2APIProtocol.Point min = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Common.Point, SC2APIProtocol.Common.Point.Builder, SC2APIProtocol.Common.PointOrBuilder> 
          getMinFieldBuilder() {
        if (minBuilder_ == null) {
          minBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SC2APIProtocol.Common.Point, SC2APIProtocol.Common.Point.Builder, SC2APIProtocol.Common.PointOrBuilder>(
                  getMin(),
                  getParentForChildren(),
                  isClean());
          min_ = null;
        }
        return minBuilder_;
      }

      private SC2APIProtocol.Common.Point max_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Common.Point, SC2APIProtocol.Common.Point.Builder, SC2APIProtocol.Common.PointOrBuilder> maxBuilder_;
      /**
       * <code>optional .SC2APIProtocol.Point max = 3;</code>
       */
      public boolean hasMax() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .SC2APIProtocol.Point max = 3;</code>
       */
      public SC2APIProtocol.Common.Point getMax() {
        if (maxBuilder_ == null) {
          return max_ == null ? SC2APIProtocol.Common.Point.getDefaultInstance() : max_;
        } else {
          return maxBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SC2APIProtocol.Point max = 3;</code>
       */
      public Builder setMax(SC2APIProtocol.Common.Point value) {
        if (maxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          max_ = value;
          onChanged();
        } else {
          maxBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Point max = 3;</code>
       */
      public Builder setMax(
          SC2APIProtocol.Common.Point.Builder builderForValue) {
        if (maxBuilder_ == null) {
          max_ = builderForValue.build();
          onChanged();
        } else {
          maxBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Point max = 3;</code>
       */
      public Builder mergeMax(SC2APIProtocol.Common.Point value) {
        if (maxBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              max_ != null &&
              max_ != SC2APIProtocol.Common.Point.getDefaultInstance()) {
            max_ =
              SC2APIProtocol.Common.Point.newBuilder(max_).mergeFrom(value).buildPartial();
          } else {
            max_ = value;
          }
          onChanged();
        } else {
          maxBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Point max = 3;</code>
       */
      public Builder clearMax() {
        if (maxBuilder_ == null) {
          max_ = null;
          onChanged();
        } else {
          maxBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Point max = 3;</code>
       */
      public SC2APIProtocol.Common.Point.Builder getMaxBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getMaxFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SC2APIProtocol.Point max = 3;</code>
       */
      public SC2APIProtocol.Common.PointOrBuilder getMaxOrBuilder() {
        if (maxBuilder_ != null) {
          return maxBuilder_.getMessageOrBuilder();
        } else {
          return max_ == null ?
              SC2APIProtocol.Common.Point.getDefaultInstance() : max_;
        }
      }
      /**
       * <code>optional .SC2APIProtocol.Point max = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Common.Point, SC2APIProtocol.Common.Point.Builder, SC2APIProtocol.Common.PointOrBuilder> 
          getMaxFieldBuilder() {
        if (maxBuilder_ == null) {
          maxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SC2APIProtocol.Common.Point, SC2APIProtocol.Common.Point.Builder, SC2APIProtocol.Common.PointOrBuilder>(
                  getMax(),
                  getParentForChildren(),
                  isClean());
          max_ = null;
        }
        return maxBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.DebugBox)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.DebugBox)
    private static final SC2APIProtocol.Debug.DebugBox DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Debug.DebugBox();
    }

    public static SC2APIProtocol.Debug.DebugBox getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DebugBox>
        PARSER = new com.google.protobuf.AbstractParser<DebugBox>() {
      public DebugBox parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DebugBox(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DebugBox> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DebugBox> getParserForType() {
      return PARSER;
    }

    public SC2APIProtocol.Debug.DebugBox getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DebugSphereOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.DebugSphere)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .SC2APIProtocol.Color color = 1;</code>
     */
    boolean hasColor();
    /**
     * <code>optional .SC2APIProtocol.Color color = 1;</code>
     */
    SC2APIProtocol.Debug.Color getColor();
    /**
     * <code>optional .SC2APIProtocol.Color color = 1;</code>
     */
    SC2APIProtocol.Debug.ColorOrBuilder getColorOrBuilder();

    /**
     * <code>optional .SC2APIProtocol.Point p = 2;</code>
     */
    boolean hasP();
    /**
     * <code>optional .SC2APIProtocol.Point p = 2;</code>
     */
    SC2APIProtocol.Common.Point getP();
    /**
     * <code>optional .SC2APIProtocol.Point p = 2;</code>
     */
    SC2APIProtocol.Common.PointOrBuilder getPOrBuilder();

    /**
     * <code>optional float r = 3;</code>
     */
    boolean hasR();
    /**
     * <code>optional float r = 3;</code>
     */
    float getR();
  }
  /**
   * <pre>
   * Display debug spheres on screen.
   * </pre>
   *
   * Protobuf type {@code SC2APIProtocol.DebugSphere}
   */
  public  static final class DebugSphere extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.DebugSphere)
      DebugSphereOrBuilder {
    // Use DebugSphere.newBuilder() to construct.
    private DebugSphere(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DebugSphere() {
      r_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DebugSphere(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              SC2APIProtocol.Debug.Color.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = color_.toBuilder();
              }
              color_ = input.readMessage(SC2APIProtocol.Debug.Color.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(color_);
                color_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              SC2APIProtocol.Common.Point.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = p_.toBuilder();
              }
              p_ = input.readMessage(SC2APIProtocol.Common.Point.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(p_);
                p_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              r_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugSphere_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugSphere_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Debug.DebugSphere.class, SC2APIProtocol.Debug.DebugSphere.Builder.class);
    }

    private int bitField0_;
    public static final int COLOR_FIELD_NUMBER = 1;
    private SC2APIProtocol.Debug.Color color_;
    /**
     * <code>optional .SC2APIProtocol.Color color = 1;</code>
     */
    public boolean hasColor() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .SC2APIProtocol.Color color = 1;</code>
     */
    public SC2APIProtocol.Debug.Color getColor() {
      return color_ == null ? SC2APIProtocol.Debug.Color.getDefaultInstance() : color_;
    }
    /**
     * <code>optional .SC2APIProtocol.Color color = 1;</code>
     */
    public SC2APIProtocol.Debug.ColorOrBuilder getColorOrBuilder() {
      return color_ == null ? SC2APIProtocol.Debug.Color.getDefaultInstance() : color_;
    }

    public static final int P_FIELD_NUMBER = 2;
    private SC2APIProtocol.Common.Point p_;
    /**
     * <code>optional .SC2APIProtocol.Point p = 2;</code>
     */
    public boolean hasP() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .SC2APIProtocol.Point p = 2;</code>
     */
    public SC2APIProtocol.Common.Point getP() {
      return p_ == null ? SC2APIProtocol.Common.Point.getDefaultInstance() : p_;
    }
    /**
     * <code>optional .SC2APIProtocol.Point p = 2;</code>
     */
    public SC2APIProtocol.Common.PointOrBuilder getPOrBuilder() {
      return p_ == null ? SC2APIProtocol.Common.Point.getDefaultInstance() : p_;
    }

    public static final int R_FIELD_NUMBER = 3;
    private float r_;
    /**
     * <code>optional float r = 3;</code>
     */
    public boolean hasR() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float r = 3;</code>
     */
    public float getR() {
      return r_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getColor());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getP());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, r_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getColor());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getP());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, r_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Debug.DebugSphere)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Debug.DebugSphere other = (SC2APIProtocol.Debug.DebugSphere) obj;

      boolean result = true;
      result = result && (hasColor() == other.hasColor());
      if (hasColor()) {
        result = result && getColor()
            .equals(other.getColor());
      }
      result = result && (hasP() == other.hasP());
      if (hasP()) {
        result = result && getP()
            .equals(other.getP());
      }
      result = result && (hasR() == other.hasR());
      if (hasR()) {
        result = result && (
            java.lang.Float.floatToIntBits(getR())
            == java.lang.Float.floatToIntBits(
                other.getR()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasColor()) {
        hash = (37 * hash) + COLOR_FIELD_NUMBER;
        hash = (53 * hash) + getColor().hashCode();
      }
      if (hasP()) {
        hash = (37 * hash) + P_FIELD_NUMBER;
        hash = (53 * hash) + getP().hashCode();
      }
      if (hasR()) {
        hash = (37 * hash) + R_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getR());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Debug.DebugSphere parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugSphere parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugSphere parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugSphere parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugSphere parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugSphere parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugSphere parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugSphere parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugSphere parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugSphere parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Debug.DebugSphere prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Display debug spheres on screen.
     * </pre>
     *
     * Protobuf type {@code SC2APIProtocol.DebugSphere}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.DebugSphere)
        SC2APIProtocol.Debug.DebugSphereOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugSphere_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugSphere_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Debug.DebugSphere.class, SC2APIProtocol.Debug.DebugSphere.Builder.class);
      }

      // Construct using SC2APIProtocol.Debug.DebugSphere.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getColorFieldBuilder();
          getPFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (colorBuilder_ == null) {
          color_ = null;
        } else {
          colorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (pBuilder_ == null) {
          p_ = null;
        } else {
          pBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        r_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugSphere_descriptor;
      }

      public SC2APIProtocol.Debug.DebugSphere getDefaultInstanceForType() {
        return SC2APIProtocol.Debug.DebugSphere.getDefaultInstance();
      }

      public SC2APIProtocol.Debug.DebugSphere build() {
        SC2APIProtocol.Debug.DebugSphere result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SC2APIProtocol.Debug.DebugSphere buildPartial() {
        SC2APIProtocol.Debug.DebugSphere result = new SC2APIProtocol.Debug.DebugSphere(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (colorBuilder_ == null) {
          result.color_ = color_;
        } else {
          result.color_ = colorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (pBuilder_ == null) {
          result.p_ = p_;
        } else {
          result.p_ = pBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.r_ = r_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Debug.DebugSphere) {
          return mergeFrom((SC2APIProtocol.Debug.DebugSphere)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Debug.DebugSphere other) {
        if (other == SC2APIProtocol.Debug.DebugSphere.getDefaultInstance()) return this;
        if (other.hasColor()) {
          mergeColor(other.getColor());
        }
        if (other.hasP()) {
          mergeP(other.getP());
        }
        if (other.hasR()) {
          setR(other.getR());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Debug.DebugSphere parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Debug.DebugSphere) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private SC2APIProtocol.Debug.Color color_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.Color, SC2APIProtocol.Debug.Color.Builder, SC2APIProtocol.Debug.ColorOrBuilder> colorBuilder_;
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public boolean hasColor() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public SC2APIProtocol.Debug.Color getColor() {
        if (colorBuilder_ == null) {
          return color_ == null ? SC2APIProtocol.Debug.Color.getDefaultInstance() : color_;
        } else {
          return colorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public Builder setColor(SC2APIProtocol.Debug.Color value) {
        if (colorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          color_ = value;
          onChanged();
        } else {
          colorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public Builder setColor(
          SC2APIProtocol.Debug.Color.Builder builderForValue) {
        if (colorBuilder_ == null) {
          color_ = builderForValue.build();
          onChanged();
        } else {
          colorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public Builder mergeColor(SC2APIProtocol.Debug.Color value) {
        if (colorBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              color_ != null &&
              color_ != SC2APIProtocol.Debug.Color.getDefaultInstance()) {
            color_ =
              SC2APIProtocol.Debug.Color.newBuilder(color_).mergeFrom(value).buildPartial();
          } else {
            color_ = value;
          }
          onChanged();
        } else {
          colorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public Builder clearColor() {
        if (colorBuilder_ == null) {
          color_ = null;
          onChanged();
        } else {
          colorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public SC2APIProtocol.Debug.Color.Builder getColorBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getColorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      public SC2APIProtocol.Debug.ColorOrBuilder getColorOrBuilder() {
        if (colorBuilder_ != null) {
          return colorBuilder_.getMessageOrBuilder();
        } else {
          return color_ == null ?
              SC2APIProtocol.Debug.Color.getDefaultInstance() : color_;
        }
      }
      /**
       * <code>optional .SC2APIProtocol.Color color = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Debug.Color, SC2APIProtocol.Debug.Color.Builder, SC2APIProtocol.Debug.ColorOrBuilder> 
          getColorFieldBuilder() {
        if (colorBuilder_ == null) {
          colorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SC2APIProtocol.Debug.Color, SC2APIProtocol.Debug.Color.Builder, SC2APIProtocol.Debug.ColorOrBuilder>(
                  getColor(),
                  getParentForChildren(),
                  isClean());
          color_ = null;
        }
        return colorBuilder_;
      }

      private SC2APIProtocol.Common.Point p_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Common.Point, SC2APIProtocol.Common.Point.Builder, SC2APIProtocol.Common.PointOrBuilder> pBuilder_;
      /**
       * <code>optional .SC2APIProtocol.Point p = 2;</code>
       */
      public boolean hasP() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .SC2APIProtocol.Point p = 2;</code>
       */
      public SC2APIProtocol.Common.Point getP() {
        if (pBuilder_ == null) {
          return p_ == null ? SC2APIProtocol.Common.Point.getDefaultInstance() : p_;
        } else {
          return pBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SC2APIProtocol.Point p = 2;</code>
       */
      public Builder setP(SC2APIProtocol.Common.Point value) {
        if (pBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          p_ = value;
          onChanged();
        } else {
          pBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Point p = 2;</code>
       */
      public Builder setP(
          SC2APIProtocol.Common.Point.Builder builderForValue) {
        if (pBuilder_ == null) {
          p_ = builderForValue.build();
          onChanged();
        } else {
          pBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Point p = 2;</code>
       */
      public Builder mergeP(SC2APIProtocol.Common.Point value) {
        if (pBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              p_ != null &&
              p_ != SC2APIProtocol.Common.Point.getDefaultInstance()) {
            p_ =
              SC2APIProtocol.Common.Point.newBuilder(p_).mergeFrom(value).buildPartial();
          } else {
            p_ = value;
          }
          onChanged();
        } else {
          pBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Point p = 2;</code>
       */
      public Builder clearP() {
        if (pBuilder_ == null) {
          p_ = null;
          onChanged();
        } else {
          pBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Point p = 2;</code>
       */
      public SC2APIProtocol.Common.Point.Builder getPBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SC2APIProtocol.Point p = 2;</code>
       */
      public SC2APIProtocol.Common.PointOrBuilder getPOrBuilder() {
        if (pBuilder_ != null) {
          return pBuilder_.getMessageOrBuilder();
        } else {
          return p_ == null ?
              SC2APIProtocol.Common.Point.getDefaultInstance() : p_;
        }
      }
      /**
       * <code>optional .SC2APIProtocol.Point p = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Common.Point, SC2APIProtocol.Common.Point.Builder, SC2APIProtocol.Common.PointOrBuilder> 
          getPFieldBuilder() {
        if (pBuilder_ == null) {
          pBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SC2APIProtocol.Common.Point, SC2APIProtocol.Common.Point.Builder, SC2APIProtocol.Common.PointOrBuilder>(
                  getP(),
                  getParentForChildren(),
                  isClean());
          p_ = null;
        }
        return pBuilder_;
      }

      private float r_ ;
      /**
       * <code>optional float r = 3;</code>
       */
      public boolean hasR() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float r = 3;</code>
       */
      public float getR() {
        return r_;
      }
      /**
       * <code>optional float r = 3;</code>
       */
      public Builder setR(float value) {
        bitField0_ |= 0x00000004;
        r_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float r = 3;</code>
       */
      public Builder clearR() {
        bitField0_ = (bitField0_ & ~0x00000004);
        r_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.DebugSphere)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.DebugSphere)
    private static final SC2APIProtocol.Debug.DebugSphere DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Debug.DebugSphere();
    }

    public static SC2APIProtocol.Debug.DebugSphere getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DebugSphere>
        PARSER = new com.google.protobuf.AbstractParser<DebugSphere>() {
      public DebugSphere parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DebugSphere(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DebugSphere> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DebugSphere> getParserForType() {
      return PARSER;
    }

    public SC2APIProtocol.Debug.DebugSphere getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DebugCreateUnitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.DebugCreateUnit)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 unit_type = 1;</code>
     */
    boolean hasUnitType();
    /**
     * <code>optional uint32 unit_type = 1;</code>
     */
    int getUnitType();

    /**
     * <code>optional int32 owner = 2;</code>
     */
    boolean hasOwner();
    /**
     * <code>optional int32 owner = 2;</code>
     */
    int getOwner();

    /**
     * <code>optional .SC2APIProtocol.Point2D pos = 3;</code>
     */
    boolean hasPos();
    /**
     * <code>optional .SC2APIProtocol.Point2D pos = 3;</code>
     */
    SC2APIProtocol.Common.Point2D getPos();
    /**
     * <code>optional .SC2APIProtocol.Point2D pos = 3;</code>
     */
    SC2APIProtocol.Common.Point2DOrBuilder getPosOrBuilder();

    /**
     * <code>optional uint32 quantity = 4;</code>
     */
    boolean hasQuantity();
    /**
     * <code>optional uint32 quantity = 4;</code>
     */
    int getQuantity();
  }
  /**
   * Protobuf type {@code SC2APIProtocol.DebugCreateUnit}
   */
  public  static final class DebugCreateUnit extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.DebugCreateUnit)
      DebugCreateUnitOrBuilder {
    // Use DebugCreateUnit.newBuilder() to construct.
    private DebugCreateUnit(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DebugCreateUnit() {
      unitType_ = 0;
      owner_ = 0;
      quantity_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DebugCreateUnit(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              unitType_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              owner_ = input.readInt32();
              break;
            }
            case 26: {
              SC2APIProtocol.Common.Point2D.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = pos_.toBuilder();
              }
              pos_ = input.readMessage(SC2APIProtocol.Common.Point2D.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pos_);
                pos_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              quantity_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugCreateUnit_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugCreateUnit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Debug.DebugCreateUnit.class, SC2APIProtocol.Debug.DebugCreateUnit.Builder.class);
    }

    private int bitField0_;
    public static final int UNIT_TYPE_FIELD_NUMBER = 1;
    private int unitType_;
    /**
     * <code>optional uint32 unit_type = 1;</code>
     */
    public boolean hasUnitType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 unit_type = 1;</code>
     */
    public int getUnitType() {
      return unitType_;
    }

    public static final int OWNER_FIELD_NUMBER = 2;
    private int owner_;
    /**
     * <code>optional int32 owner = 2;</code>
     */
    public boolean hasOwner() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 owner = 2;</code>
     */
    public int getOwner() {
      return owner_;
    }

    public static final int POS_FIELD_NUMBER = 3;
    private SC2APIProtocol.Common.Point2D pos_;
    /**
     * <code>optional .SC2APIProtocol.Point2D pos = 3;</code>
     */
    public boolean hasPos() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .SC2APIProtocol.Point2D pos = 3;</code>
     */
    public SC2APIProtocol.Common.Point2D getPos() {
      return pos_ == null ? SC2APIProtocol.Common.Point2D.getDefaultInstance() : pos_;
    }
    /**
     * <code>optional .SC2APIProtocol.Point2D pos = 3;</code>
     */
    public SC2APIProtocol.Common.Point2DOrBuilder getPosOrBuilder() {
      return pos_ == null ? SC2APIProtocol.Common.Point2D.getDefaultInstance() : pos_;
    }

    public static final int QUANTITY_FIELD_NUMBER = 4;
    private int quantity_;
    /**
     * <code>optional uint32 quantity = 4;</code>
     */
    public boolean hasQuantity() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 quantity = 4;</code>
     */
    public int getQuantity() {
      return quantity_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, unitType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, owner_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getPos());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, quantity_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, unitType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, owner_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getPos());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, quantity_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Debug.DebugCreateUnit)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Debug.DebugCreateUnit other = (SC2APIProtocol.Debug.DebugCreateUnit) obj;

      boolean result = true;
      result = result && (hasUnitType() == other.hasUnitType());
      if (hasUnitType()) {
        result = result && (getUnitType()
            == other.getUnitType());
      }
      result = result && (hasOwner() == other.hasOwner());
      if (hasOwner()) {
        result = result && (getOwner()
            == other.getOwner());
      }
      result = result && (hasPos() == other.hasPos());
      if (hasPos()) {
        result = result && getPos()
            .equals(other.getPos());
      }
      result = result && (hasQuantity() == other.hasQuantity());
      if (hasQuantity()) {
        result = result && (getQuantity()
            == other.getQuantity());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasUnitType()) {
        hash = (37 * hash) + UNIT_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getUnitType();
      }
      if (hasOwner()) {
        hash = (37 * hash) + OWNER_FIELD_NUMBER;
        hash = (53 * hash) + getOwner();
      }
      if (hasPos()) {
        hash = (37 * hash) + POS_FIELD_NUMBER;
        hash = (53 * hash) + getPos().hashCode();
      }
      if (hasQuantity()) {
        hash = (37 * hash) + QUANTITY_FIELD_NUMBER;
        hash = (53 * hash) + getQuantity();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Debug.DebugCreateUnit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugCreateUnit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugCreateUnit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugCreateUnit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugCreateUnit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugCreateUnit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugCreateUnit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugCreateUnit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugCreateUnit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugCreateUnit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Debug.DebugCreateUnit prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC2APIProtocol.DebugCreateUnit}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.DebugCreateUnit)
        SC2APIProtocol.Debug.DebugCreateUnitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugCreateUnit_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugCreateUnit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Debug.DebugCreateUnit.class, SC2APIProtocol.Debug.DebugCreateUnit.Builder.class);
      }

      // Construct using SC2APIProtocol.Debug.DebugCreateUnit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPosFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        unitType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        owner_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (posBuilder_ == null) {
          pos_ = null;
        } else {
          posBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        quantity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugCreateUnit_descriptor;
      }

      public SC2APIProtocol.Debug.DebugCreateUnit getDefaultInstanceForType() {
        return SC2APIProtocol.Debug.DebugCreateUnit.getDefaultInstance();
      }

      public SC2APIProtocol.Debug.DebugCreateUnit build() {
        SC2APIProtocol.Debug.DebugCreateUnit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SC2APIProtocol.Debug.DebugCreateUnit buildPartial() {
        SC2APIProtocol.Debug.DebugCreateUnit result = new SC2APIProtocol.Debug.DebugCreateUnit(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.unitType_ = unitType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.owner_ = owner_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (posBuilder_ == null) {
          result.pos_ = pos_;
        } else {
          result.pos_ = posBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.quantity_ = quantity_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Debug.DebugCreateUnit) {
          return mergeFrom((SC2APIProtocol.Debug.DebugCreateUnit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Debug.DebugCreateUnit other) {
        if (other == SC2APIProtocol.Debug.DebugCreateUnit.getDefaultInstance()) return this;
        if (other.hasUnitType()) {
          setUnitType(other.getUnitType());
        }
        if (other.hasOwner()) {
          setOwner(other.getOwner());
        }
        if (other.hasPos()) {
          mergePos(other.getPos());
        }
        if (other.hasQuantity()) {
          setQuantity(other.getQuantity());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Debug.DebugCreateUnit parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Debug.DebugCreateUnit) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int unitType_ ;
      /**
       * <code>optional uint32 unit_type = 1;</code>
       */
      public boolean hasUnitType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 unit_type = 1;</code>
       */
      public int getUnitType() {
        return unitType_;
      }
      /**
       * <code>optional uint32 unit_type = 1;</code>
       */
      public Builder setUnitType(int value) {
        bitField0_ |= 0x00000001;
        unitType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 unit_type = 1;</code>
       */
      public Builder clearUnitType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        unitType_ = 0;
        onChanged();
        return this;
      }

      private int owner_ ;
      /**
       * <code>optional int32 owner = 2;</code>
       */
      public boolean hasOwner() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 owner = 2;</code>
       */
      public int getOwner() {
        return owner_;
      }
      /**
       * <code>optional int32 owner = 2;</code>
       */
      public Builder setOwner(int value) {
        bitField0_ |= 0x00000002;
        owner_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 owner = 2;</code>
       */
      public Builder clearOwner() {
        bitField0_ = (bitField0_ & ~0x00000002);
        owner_ = 0;
        onChanged();
        return this;
      }

      private SC2APIProtocol.Common.Point2D pos_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Common.Point2D, SC2APIProtocol.Common.Point2D.Builder, SC2APIProtocol.Common.Point2DOrBuilder> posBuilder_;
      /**
       * <code>optional .SC2APIProtocol.Point2D pos = 3;</code>
       */
      public boolean hasPos() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .SC2APIProtocol.Point2D pos = 3;</code>
       */
      public SC2APIProtocol.Common.Point2D getPos() {
        if (posBuilder_ == null) {
          return pos_ == null ? SC2APIProtocol.Common.Point2D.getDefaultInstance() : pos_;
        } else {
          return posBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SC2APIProtocol.Point2D pos = 3;</code>
       */
      public Builder setPos(SC2APIProtocol.Common.Point2D value) {
        if (posBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pos_ = value;
          onChanged();
        } else {
          posBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Point2D pos = 3;</code>
       */
      public Builder setPos(
          SC2APIProtocol.Common.Point2D.Builder builderForValue) {
        if (posBuilder_ == null) {
          pos_ = builderForValue.build();
          onChanged();
        } else {
          posBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Point2D pos = 3;</code>
       */
      public Builder mergePos(SC2APIProtocol.Common.Point2D value) {
        if (posBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              pos_ != null &&
              pos_ != SC2APIProtocol.Common.Point2D.getDefaultInstance()) {
            pos_ =
              SC2APIProtocol.Common.Point2D.newBuilder(pos_).mergeFrom(value).buildPartial();
          } else {
            pos_ = value;
          }
          onChanged();
        } else {
          posBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Point2D pos = 3;</code>
       */
      public Builder clearPos() {
        if (posBuilder_ == null) {
          pos_ = null;
          onChanged();
        } else {
          posBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Point2D pos = 3;</code>
       */
      public SC2APIProtocol.Common.Point2D.Builder getPosBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getPosFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SC2APIProtocol.Point2D pos = 3;</code>
       */
      public SC2APIProtocol.Common.Point2DOrBuilder getPosOrBuilder() {
        if (posBuilder_ != null) {
          return posBuilder_.getMessageOrBuilder();
        } else {
          return pos_ == null ?
              SC2APIProtocol.Common.Point2D.getDefaultInstance() : pos_;
        }
      }
      /**
       * <code>optional .SC2APIProtocol.Point2D pos = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          SC2APIProtocol.Common.Point2D, SC2APIProtocol.Common.Point2D.Builder, SC2APIProtocol.Common.Point2DOrBuilder> 
          getPosFieldBuilder() {
        if (posBuilder_ == null) {
          posBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              SC2APIProtocol.Common.Point2D, SC2APIProtocol.Common.Point2D.Builder, SC2APIProtocol.Common.Point2DOrBuilder>(
                  getPos(),
                  getParentForChildren(),
                  isClean());
          pos_ = null;
        }
        return posBuilder_;
      }

      private int quantity_ ;
      /**
       * <code>optional uint32 quantity = 4;</code>
       */
      public boolean hasQuantity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 quantity = 4;</code>
       */
      public int getQuantity() {
        return quantity_;
      }
      /**
       * <code>optional uint32 quantity = 4;</code>
       */
      public Builder setQuantity(int value) {
        bitField0_ |= 0x00000008;
        quantity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 quantity = 4;</code>
       */
      public Builder clearQuantity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        quantity_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.DebugCreateUnit)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.DebugCreateUnit)
    private static final SC2APIProtocol.Debug.DebugCreateUnit DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Debug.DebugCreateUnit();
    }

    public static SC2APIProtocol.Debug.DebugCreateUnit getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DebugCreateUnit>
        PARSER = new com.google.protobuf.AbstractParser<DebugCreateUnit>() {
      public DebugCreateUnit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DebugCreateUnit(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DebugCreateUnit> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DebugCreateUnit> getParserForType() {
      return PARSER;
    }

    public SC2APIProtocol.Debug.DebugCreateUnit getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DebugKillUnitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.DebugKillUnit)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated uint64 tag = 1;</code>
     */
    java.util.List<java.lang.Long> getTagList();
    /**
     * <code>repeated uint64 tag = 1;</code>
     */
    int getTagCount();
    /**
     * <code>repeated uint64 tag = 1;</code>
     */
    long getTag(int index);
  }
  /**
   * Protobuf type {@code SC2APIProtocol.DebugKillUnit}
   */
  public  static final class DebugKillUnit extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.DebugKillUnit)
      DebugKillUnitOrBuilder {
    // Use DebugKillUnit.newBuilder() to construct.
    private DebugKillUnit(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DebugKillUnit() {
      tag_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DebugKillUnit(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                tag_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              tag_.add(input.readUInt64());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                tag_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                tag_.add(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          tag_ = java.util.Collections.unmodifiableList(tag_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugKillUnit_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugKillUnit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Debug.DebugKillUnit.class, SC2APIProtocol.Debug.DebugKillUnit.Builder.class);
    }

    public static final int TAG_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Long> tag_;
    /**
     * <code>repeated uint64 tag = 1;</code>
     */
    public java.util.List<java.lang.Long>
        getTagList() {
      return tag_;
    }
    /**
     * <code>repeated uint64 tag = 1;</code>
     */
    public int getTagCount() {
      return tag_.size();
    }
    /**
     * <code>repeated uint64 tag = 1;</code>
     */
    public long getTag(int index) {
      return tag_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < tag_.size(); i++) {
        output.writeUInt64(1, tag_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < tag_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(tag_.get(i));
        }
        size += dataSize;
        size += 1 * getTagList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Debug.DebugKillUnit)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Debug.DebugKillUnit other = (SC2APIProtocol.Debug.DebugKillUnit) obj;

      boolean result = true;
      result = result && getTagList()
          .equals(other.getTagList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getTagCount() > 0) {
        hash = (37 * hash) + TAG_FIELD_NUMBER;
        hash = (53 * hash) + getTagList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Debug.DebugKillUnit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugKillUnit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugKillUnit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugKillUnit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugKillUnit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugKillUnit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugKillUnit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugKillUnit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugKillUnit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugKillUnit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Debug.DebugKillUnit prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC2APIProtocol.DebugKillUnit}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.DebugKillUnit)
        SC2APIProtocol.Debug.DebugKillUnitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugKillUnit_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugKillUnit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Debug.DebugKillUnit.class, SC2APIProtocol.Debug.DebugKillUnit.Builder.class);
      }

      // Construct using SC2APIProtocol.Debug.DebugKillUnit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        tag_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugKillUnit_descriptor;
      }

      public SC2APIProtocol.Debug.DebugKillUnit getDefaultInstanceForType() {
        return SC2APIProtocol.Debug.DebugKillUnit.getDefaultInstance();
      }

      public SC2APIProtocol.Debug.DebugKillUnit build() {
        SC2APIProtocol.Debug.DebugKillUnit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SC2APIProtocol.Debug.DebugKillUnit buildPartial() {
        SC2APIProtocol.Debug.DebugKillUnit result = new SC2APIProtocol.Debug.DebugKillUnit(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          tag_ = java.util.Collections.unmodifiableList(tag_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tag_ = tag_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Debug.DebugKillUnit) {
          return mergeFrom((SC2APIProtocol.Debug.DebugKillUnit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Debug.DebugKillUnit other) {
        if (other == SC2APIProtocol.Debug.DebugKillUnit.getDefaultInstance()) return this;
        if (!other.tag_.isEmpty()) {
          if (tag_.isEmpty()) {
            tag_ = other.tag_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTagIsMutable();
            tag_.addAll(other.tag_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Debug.DebugKillUnit parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Debug.DebugKillUnit) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Long> tag_ = java.util.Collections.emptyList();
      private void ensureTagIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          tag_ = new java.util.ArrayList<java.lang.Long>(tag_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint64 tag = 1;</code>
       */
      public java.util.List<java.lang.Long>
          getTagList() {
        return java.util.Collections.unmodifiableList(tag_);
      }
      /**
       * <code>repeated uint64 tag = 1;</code>
       */
      public int getTagCount() {
        return tag_.size();
      }
      /**
       * <code>repeated uint64 tag = 1;</code>
       */
      public long getTag(int index) {
        return tag_.get(index);
      }
      /**
       * <code>repeated uint64 tag = 1;</code>
       */
      public Builder setTag(
          int index, long value) {
        ensureTagIsMutable();
        tag_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 tag = 1;</code>
       */
      public Builder addTag(long value) {
        ensureTagIsMutable();
        tag_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 tag = 1;</code>
       */
      public Builder addAllTag(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureTagIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tag_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 tag = 1;</code>
       */
      public Builder clearTag() {
        tag_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.DebugKillUnit)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.DebugKillUnit)
    private static final SC2APIProtocol.Debug.DebugKillUnit DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Debug.DebugKillUnit();
    }

    public static SC2APIProtocol.Debug.DebugKillUnit getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DebugKillUnit>
        PARSER = new com.google.protobuf.AbstractParser<DebugKillUnit>() {
      public DebugKillUnit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DebugKillUnit(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DebugKillUnit> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DebugKillUnit> getParserForType() {
      return PARSER;
    }

    public SC2APIProtocol.Debug.DebugKillUnit getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DebugTestProcessOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.DebugTestProcess)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .SC2APIProtocol.DebugTestProcess.Test test = 1;</code>
     */
    boolean hasTest();
    /**
     * <code>optional .SC2APIProtocol.DebugTestProcess.Test test = 1;</code>
     */
    SC2APIProtocol.Debug.DebugTestProcess.Test getTest();

    /**
     * <code>optional int32 delay_ms = 2;</code>
     */
    boolean hasDelayMs();
    /**
     * <code>optional int32 delay_ms = 2;</code>
     */
    int getDelayMs();
  }
  /**
   * Protobuf type {@code SC2APIProtocol.DebugTestProcess}
   */
  public  static final class DebugTestProcess extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.DebugTestProcess)
      DebugTestProcessOrBuilder {
    // Use DebugTestProcess.newBuilder() to construct.
    private DebugTestProcess(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DebugTestProcess() {
      test_ = 1;
      delayMs_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DebugTestProcess(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              SC2APIProtocol.Debug.DebugTestProcess.Test value = SC2APIProtocol.Debug.DebugTestProcess.Test.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                test_ = rawValue;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              delayMs_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugTestProcess_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugTestProcess_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Debug.DebugTestProcess.class, SC2APIProtocol.Debug.DebugTestProcess.Builder.class);
    }

    /**
     * Protobuf enum {@code SC2APIProtocol.DebugTestProcess.Test}
     */
    public enum Test
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>hang = 1;</code>
       */
      hang(1),
      /**
       * <code>crash = 2;</code>
       */
      crash(2),
      /**
       * <code>exit = 3;</code>
       */
      exit(3),
      ;

      /**
       * <code>hang = 1;</code>
       */
      public static final int hang_VALUE = 1;
      /**
       * <code>crash = 2;</code>
       */
      public static final int crash_VALUE = 2;
      /**
       * <code>exit = 3;</code>
       */
      public static final int exit_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Test valueOf(int value) {
        return forNumber(value);
      }

      public static Test forNumber(int value) {
        switch (value) {
          case 1: return hang;
          case 2: return crash;
          case 3: return exit;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Test>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Test> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Test>() {
              public Test findValueByNumber(int number) {
                return Test.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return SC2APIProtocol.Debug.DebugTestProcess.getDescriptor().getEnumTypes().get(0);
      }

      private static final Test[] VALUES = values();

      public static Test valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Test(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:SC2APIProtocol.DebugTestProcess.Test)
    }

    private int bitField0_;
    public static final int TEST_FIELD_NUMBER = 1;
    private int test_;
    /**
     * <code>optional .SC2APIProtocol.DebugTestProcess.Test test = 1;</code>
     */
    public boolean hasTest() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .SC2APIProtocol.DebugTestProcess.Test test = 1;</code>
     */
    public SC2APIProtocol.Debug.DebugTestProcess.Test getTest() {
      SC2APIProtocol.Debug.DebugTestProcess.Test result = SC2APIProtocol.Debug.DebugTestProcess.Test.valueOf(test_);
      return result == null ? SC2APIProtocol.Debug.DebugTestProcess.Test.hang : result;
    }

    public static final int DELAY_MS_FIELD_NUMBER = 2;
    private int delayMs_;
    /**
     * <code>optional int32 delay_ms = 2;</code>
     */
    public boolean hasDelayMs() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 delay_ms = 2;</code>
     */
    public int getDelayMs() {
      return delayMs_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, test_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, delayMs_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, test_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, delayMs_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Debug.DebugTestProcess)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Debug.DebugTestProcess other = (SC2APIProtocol.Debug.DebugTestProcess) obj;

      boolean result = true;
      result = result && (hasTest() == other.hasTest());
      if (hasTest()) {
        result = result && test_ == other.test_;
      }
      result = result && (hasDelayMs() == other.hasDelayMs());
      if (hasDelayMs()) {
        result = result && (getDelayMs()
            == other.getDelayMs());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasTest()) {
        hash = (37 * hash) + TEST_FIELD_NUMBER;
        hash = (53 * hash) + test_;
      }
      if (hasDelayMs()) {
        hash = (37 * hash) + DELAY_MS_FIELD_NUMBER;
        hash = (53 * hash) + getDelayMs();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Debug.DebugTestProcess parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugTestProcess parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugTestProcess parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugTestProcess parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugTestProcess parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugTestProcess parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugTestProcess parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugTestProcess parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugTestProcess parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugTestProcess parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Debug.DebugTestProcess prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC2APIProtocol.DebugTestProcess}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.DebugTestProcess)
        SC2APIProtocol.Debug.DebugTestProcessOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugTestProcess_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugTestProcess_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Debug.DebugTestProcess.class, SC2APIProtocol.Debug.DebugTestProcess.Builder.class);
      }

      // Construct using SC2APIProtocol.Debug.DebugTestProcess.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        test_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        delayMs_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugTestProcess_descriptor;
      }

      public SC2APIProtocol.Debug.DebugTestProcess getDefaultInstanceForType() {
        return SC2APIProtocol.Debug.DebugTestProcess.getDefaultInstance();
      }

      public SC2APIProtocol.Debug.DebugTestProcess build() {
        SC2APIProtocol.Debug.DebugTestProcess result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SC2APIProtocol.Debug.DebugTestProcess buildPartial() {
        SC2APIProtocol.Debug.DebugTestProcess result = new SC2APIProtocol.Debug.DebugTestProcess(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.test_ = test_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.delayMs_ = delayMs_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Debug.DebugTestProcess) {
          return mergeFrom((SC2APIProtocol.Debug.DebugTestProcess)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Debug.DebugTestProcess other) {
        if (other == SC2APIProtocol.Debug.DebugTestProcess.getDefaultInstance()) return this;
        if (other.hasTest()) {
          setTest(other.getTest());
        }
        if (other.hasDelayMs()) {
          setDelayMs(other.getDelayMs());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Debug.DebugTestProcess parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Debug.DebugTestProcess) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int test_ = 1;
      /**
       * <code>optional .SC2APIProtocol.DebugTestProcess.Test test = 1;</code>
       */
      public boolean hasTest() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .SC2APIProtocol.DebugTestProcess.Test test = 1;</code>
       */
      public SC2APIProtocol.Debug.DebugTestProcess.Test getTest() {
        SC2APIProtocol.Debug.DebugTestProcess.Test result = SC2APIProtocol.Debug.DebugTestProcess.Test.valueOf(test_);
        return result == null ? SC2APIProtocol.Debug.DebugTestProcess.Test.hang : result;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugTestProcess.Test test = 1;</code>
       */
      public Builder setTest(SC2APIProtocol.Debug.DebugTestProcess.Test value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        test_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugTestProcess.Test test = 1;</code>
       */
      public Builder clearTest() {
        bitField0_ = (bitField0_ & ~0x00000001);
        test_ = 1;
        onChanged();
        return this;
      }

      private int delayMs_ ;
      /**
       * <code>optional int32 delay_ms = 2;</code>
       */
      public boolean hasDelayMs() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 delay_ms = 2;</code>
       */
      public int getDelayMs() {
        return delayMs_;
      }
      /**
       * <code>optional int32 delay_ms = 2;</code>
       */
      public Builder setDelayMs(int value) {
        bitField0_ |= 0x00000002;
        delayMs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 delay_ms = 2;</code>
       */
      public Builder clearDelayMs() {
        bitField0_ = (bitField0_ & ~0x00000002);
        delayMs_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.DebugTestProcess)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.DebugTestProcess)
    private static final SC2APIProtocol.Debug.DebugTestProcess DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Debug.DebugTestProcess();
    }

    public static SC2APIProtocol.Debug.DebugTestProcess getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DebugTestProcess>
        PARSER = new com.google.protobuf.AbstractParser<DebugTestProcess>() {
      public DebugTestProcess parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DebugTestProcess(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DebugTestProcess> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DebugTestProcess> getParserForType() {
      return PARSER;
    }

    public SC2APIProtocol.Debug.DebugTestProcess getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DebugSetScoreOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.DebugSetScore)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional float score = 1;</code>
     */
    boolean hasScore();
    /**
     * <code>optional float score = 1;</code>
     */
    float getScore();
  }
  /**
   * Protobuf type {@code SC2APIProtocol.DebugSetScore}
   */
  public  static final class DebugSetScore extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.DebugSetScore)
      DebugSetScoreOrBuilder {
    // Use DebugSetScore.newBuilder() to construct.
    private DebugSetScore(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DebugSetScore() {
      score_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DebugSetScore(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              score_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugSetScore_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugSetScore_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Debug.DebugSetScore.class, SC2APIProtocol.Debug.DebugSetScore.Builder.class);
    }

    private int bitField0_;
    public static final int SCORE_FIELD_NUMBER = 1;
    private float score_;
    /**
     * <code>optional float score = 1;</code>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional float score = 1;</code>
     */
    public float getScore() {
      return score_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, score_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, score_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Debug.DebugSetScore)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Debug.DebugSetScore other = (SC2APIProtocol.Debug.DebugSetScore) obj;

      boolean result = true;
      result = result && (hasScore() == other.hasScore());
      if (hasScore()) {
        result = result && (
            java.lang.Float.floatToIntBits(getScore())
            == java.lang.Float.floatToIntBits(
                other.getScore()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasScore()) {
        hash = (37 * hash) + SCORE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getScore());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Debug.DebugSetScore parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugSetScore parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugSetScore parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugSetScore parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugSetScore parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugSetScore parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugSetScore parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugSetScore parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugSetScore parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugSetScore parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Debug.DebugSetScore prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC2APIProtocol.DebugSetScore}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.DebugSetScore)
        SC2APIProtocol.Debug.DebugSetScoreOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugSetScore_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugSetScore_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Debug.DebugSetScore.class, SC2APIProtocol.Debug.DebugSetScore.Builder.class);
      }

      // Construct using SC2APIProtocol.Debug.DebugSetScore.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        score_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugSetScore_descriptor;
      }

      public SC2APIProtocol.Debug.DebugSetScore getDefaultInstanceForType() {
        return SC2APIProtocol.Debug.DebugSetScore.getDefaultInstance();
      }

      public SC2APIProtocol.Debug.DebugSetScore build() {
        SC2APIProtocol.Debug.DebugSetScore result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SC2APIProtocol.Debug.DebugSetScore buildPartial() {
        SC2APIProtocol.Debug.DebugSetScore result = new SC2APIProtocol.Debug.DebugSetScore(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.score_ = score_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Debug.DebugSetScore) {
          return mergeFrom((SC2APIProtocol.Debug.DebugSetScore)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Debug.DebugSetScore other) {
        if (other == SC2APIProtocol.Debug.DebugSetScore.getDefaultInstance()) return this;
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Debug.DebugSetScore parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Debug.DebugSetScore) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float score_ ;
      /**
       * <code>optional float score = 1;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional float score = 1;</code>
       */
      public float getScore() {
        return score_;
      }
      /**
       * <code>optional float score = 1;</code>
       */
      public Builder setScore(float value) {
        bitField0_ |= 0x00000001;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float score = 1;</code>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000001);
        score_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.DebugSetScore)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.DebugSetScore)
    private static final SC2APIProtocol.Debug.DebugSetScore DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Debug.DebugSetScore();
    }

    public static SC2APIProtocol.Debug.DebugSetScore getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DebugSetScore>
        PARSER = new com.google.protobuf.AbstractParser<DebugSetScore>() {
      public DebugSetScore parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DebugSetScore(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DebugSetScore> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DebugSetScore> getParserForType() {
      return PARSER;
    }

    public SC2APIProtocol.Debug.DebugSetScore getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DebugEndGameOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.DebugEndGame)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .SC2APIProtocol.DebugEndGame.EndResult end_result = 1;</code>
     */
    boolean hasEndResult();
    /**
     * <code>optional .SC2APIProtocol.DebugEndGame.EndResult end_result = 1;</code>
     */
    SC2APIProtocol.Debug.DebugEndGame.EndResult getEndResult();
  }
  /**
   * Protobuf type {@code SC2APIProtocol.DebugEndGame}
   */
  public  static final class DebugEndGame extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.DebugEndGame)
      DebugEndGameOrBuilder {
    // Use DebugEndGame.newBuilder() to construct.
    private DebugEndGame(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DebugEndGame() {
      endResult_ = 1;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DebugEndGame(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              SC2APIProtocol.Debug.DebugEndGame.EndResult value = SC2APIProtocol.Debug.DebugEndGame.EndResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                endResult_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugEndGame_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugEndGame_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Debug.DebugEndGame.class, SC2APIProtocol.Debug.DebugEndGame.Builder.class);
    }

    /**
     * Protobuf enum {@code SC2APIProtocol.DebugEndGame.EndResult}
     */
    public enum EndResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Default if nothing is set. The current player admits defeat.
       * </pre>
       *
       * <code>Surrender = 1;</code>
       */
      Surrender(1),
      /**
       * <code>DeclareVictory = 2;</code>
       */
      DeclareVictory(2),
      ;

      /**
       * <pre>
       * Default if nothing is set. The current player admits defeat.
       * </pre>
       *
       * <code>Surrender = 1;</code>
       */
      public static final int Surrender_VALUE = 1;
      /**
       * <code>DeclareVictory = 2;</code>
       */
      public static final int DeclareVictory_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EndResult valueOf(int value) {
        return forNumber(value);
      }

      public static EndResult forNumber(int value) {
        switch (value) {
          case 1: return Surrender;
          case 2: return DeclareVictory;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EndResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EndResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EndResult>() {
              public EndResult findValueByNumber(int number) {
                return EndResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return SC2APIProtocol.Debug.DebugEndGame.getDescriptor().getEnumTypes().get(0);
      }

      private static final EndResult[] VALUES = values();

      public static EndResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EndResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:SC2APIProtocol.DebugEndGame.EndResult)
    }

    private int bitField0_;
    public static final int END_RESULT_FIELD_NUMBER = 1;
    private int endResult_;
    /**
     * <code>optional .SC2APIProtocol.DebugEndGame.EndResult end_result = 1;</code>
     */
    public boolean hasEndResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .SC2APIProtocol.DebugEndGame.EndResult end_result = 1;</code>
     */
    public SC2APIProtocol.Debug.DebugEndGame.EndResult getEndResult() {
      SC2APIProtocol.Debug.DebugEndGame.EndResult result = SC2APIProtocol.Debug.DebugEndGame.EndResult.valueOf(endResult_);
      return result == null ? SC2APIProtocol.Debug.DebugEndGame.EndResult.Surrender : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, endResult_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, endResult_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Debug.DebugEndGame)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Debug.DebugEndGame other = (SC2APIProtocol.Debug.DebugEndGame) obj;

      boolean result = true;
      result = result && (hasEndResult() == other.hasEndResult());
      if (hasEndResult()) {
        result = result && endResult_ == other.endResult_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasEndResult()) {
        hash = (37 * hash) + END_RESULT_FIELD_NUMBER;
        hash = (53 * hash) + endResult_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Debug.DebugEndGame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugEndGame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugEndGame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugEndGame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugEndGame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugEndGame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugEndGame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugEndGame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugEndGame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugEndGame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Debug.DebugEndGame prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC2APIProtocol.DebugEndGame}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.DebugEndGame)
        SC2APIProtocol.Debug.DebugEndGameOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugEndGame_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugEndGame_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Debug.DebugEndGame.class, SC2APIProtocol.Debug.DebugEndGame.Builder.class);
      }

      // Construct using SC2APIProtocol.Debug.DebugEndGame.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        endResult_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugEndGame_descriptor;
      }

      public SC2APIProtocol.Debug.DebugEndGame getDefaultInstanceForType() {
        return SC2APIProtocol.Debug.DebugEndGame.getDefaultInstance();
      }

      public SC2APIProtocol.Debug.DebugEndGame build() {
        SC2APIProtocol.Debug.DebugEndGame result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SC2APIProtocol.Debug.DebugEndGame buildPartial() {
        SC2APIProtocol.Debug.DebugEndGame result = new SC2APIProtocol.Debug.DebugEndGame(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.endResult_ = endResult_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Debug.DebugEndGame) {
          return mergeFrom((SC2APIProtocol.Debug.DebugEndGame)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Debug.DebugEndGame other) {
        if (other == SC2APIProtocol.Debug.DebugEndGame.getDefaultInstance()) return this;
        if (other.hasEndResult()) {
          setEndResult(other.getEndResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Debug.DebugEndGame parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Debug.DebugEndGame) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int endResult_ = 1;
      /**
       * <code>optional .SC2APIProtocol.DebugEndGame.EndResult end_result = 1;</code>
       */
      public boolean hasEndResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .SC2APIProtocol.DebugEndGame.EndResult end_result = 1;</code>
       */
      public SC2APIProtocol.Debug.DebugEndGame.EndResult getEndResult() {
        SC2APIProtocol.Debug.DebugEndGame.EndResult result = SC2APIProtocol.Debug.DebugEndGame.EndResult.valueOf(endResult_);
        return result == null ? SC2APIProtocol.Debug.DebugEndGame.EndResult.Surrender : result;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugEndGame.EndResult end_result = 1;</code>
       */
      public Builder setEndResult(SC2APIProtocol.Debug.DebugEndGame.EndResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        endResult_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugEndGame.EndResult end_result = 1;</code>
       */
      public Builder clearEndResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        endResult_ = 1;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.DebugEndGame)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.DebugEndGame)
    private static final SC2APIProtocol.Debug.DebugEndGame DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Debug.DebugEndGame();
    }

    public static SC2APIProtocol.Debug.DebugEndGame getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DebugEndGame>
        PARSER = new com.google.protobuf.AbstractParser<DebugEndGame>() {
      public DebugEndGame parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DebugEndGame(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DebugEndGame> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DebugEndGame> getParserForType() {
      return PARSER;
    }

    public SC2APIProtocol.Debug.DebugEndGame getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DebugSetUnitValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.DebugSetUnitValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .SC2APIProtocol.DebugSetUnitValue.UnitValue unit_value = 1;</code>
     */
    boolean hasUnitValue();
    /**
     * <code>optional .SC2APIProtocol.DebugSetUnitValue.UnitValue unit_value = 1;</code>
     */
    SC2APIProtocol.Debug.DebugSetUnitValue.UnitValue getUnitValue();

    /**
     * <code>optional float value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional float value = 2;</code>
     */
    float getValue();

    /**
     * <code>optional uint64 unit_tag = 3;</code>
     */
    boolean hasUnitTag();
    /**
     * <code>optional uint64 unit_tag = 3;</code>
     */
    long getUnitTag();
  }
  /**
   * Protobuf type {@code SC2APIProtocol.DebugSetUnitValue}
   */
  public  static final class DebugSetUnitValue extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.DebugSetUnitValue)
      DebugSetUnitValueOrBuilder {
    // Use DebugSetUnitValue.newBuilder() to construct.
    private DebugSetUnitValue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DebugSetUnitValue() {
      unitValue_ = 1;
      value_ = 0F;
      unitTag_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DebugSetUnitValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              SC2APIProtocol.Debug.DebugSetUnitValue.UnitValue value = SC2APIProtocol.Debug.DebugSetUnitValue.UnitValue.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                unitValue_ = rawValue;
              }
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              value_ = input.readFloat();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              unitTag_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugSetUnitValue_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugSetUnitValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Debug.DebugSetUnitValue.class, SC2APIProtocol.Debug.DebugSetUnitValue.Builder.class);
    }

    /**
     * Protobuf enum {@code SC2APIProtocol.DebugSetUnitValue.UnitValue}
     */
    public enum UnitValue
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>Energy = 1;</code>
       */
      Energy(1),
      /**
       * <code>Life = 2;</code>
       */
      Life(2),
      /**
       * <code>Shields = 3;</code>
       */
      Shields(3),
      ;

      /**
       * <code>Energy = 1;</code>
       */
      public static final int Energy_VALUE = 1;
      /**
       * <code>Life = 2;</code>
       */
      public static final int Life_VALUE = 2;
      /**
       * <code>Shields = 3;</code>
       */
      public static final int Shields_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static UnitValue valueOf(int value) {
        return forNumber(value);
      }

      public static UnitValue forNumber(int value) {
        switch (value) {
          case 1: return Energy;
          case 2: return Life;
          case 3: return Shields;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<UnitValue>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          UnitValue> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<UnitValue>() {
              public UnitValue findValueByNumber(int number) {
                return UnitValue.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return SC2APIProtocol.Debug.DebugSetUnitValue.getDescriptor().getEnumTypes().get(0);
      }

      private static final UnitValue[] VALUES = values();

      public static UnitValue valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private UnitValue(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:SC2APIProtocol.DebugSetUnitValue.UnitValue)
    }

    private int bitField0_;
    public static final int UNIT_VALUE_FIELD_NUMBER = 1;
    private int unitValue_;
    /**
     * <code>optional .SC2APIProtocol.DebugSetUnitValue.UnitValue unit_value = 1;</code>
     */
    public boolean hasUnitValue() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .SC2APIProtocol.DebugSetUnitValue.UnitValue unit_value = 1;</code>
     */
    public SC2APIProtocol.Debug.DebugSetUnitValue.UnitValue getUnitValue() {
      SC2APIProtocol.Debug.DebugSetUnitValue.UnitValue result = SC2APIProtocol.Debug.DebugSetUnitValue.UnitValue.valueOf(unitValue_);
      return result == null ? SC2APIProtocol.Debug.DebugSetUnitValue.UnitValue.Energy : result;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private float value_;
    /**
     * <code>optional float value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float value = 2;</code>
     */
    public float getValue() {
      return value_;
    }

    public static final int UNIT_TAG_FIELD_NUMBER = 3;
    private long unitTag_;
    /**
     * <code>optional uint64 unit_tag = 3;</code>
     */
    public boolean hasUnitTag() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint64 unit_tag = 3;</code>
     */
    public long getUnitTag() {
      return unitTag_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, unitValue_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, value_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, unitTag_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, unitValue_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, value_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, unitTag_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Debug.DebugSetUnitValue)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Debug.DebugSetUnitValue other = (SC2APIProtocol.Debug.DebugSetUnitValue) obj;

      boolean result = true;
      result = result && (hasUnitValue() == other.hasUnitValue());
      if (hasUnitValue()) {
        result = result && unitValue_ == other.unitValue_;
      }
      result = result && (hasValue() == other.hasValue());
      if (hasValue()) {
        result = result && (
            java.lang.Float.floatToIntBits(getValue())
            == java.lang.Float.floatToIntBits(
                other.getValue()));
      }
      result = result && (hasUnitTag() == other.hasUnitTag());
      if (hasUnitTag()) {
        result = result && (getUnitTag()
            == other.getUnitTag());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasUnitValue()) {
        hash = (37 * hash) + UNIT_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + unitValue_;
      }
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getValue());
      }
      if (hasUnitTag()) {
        hash = (37 * hash) + UNIT_TAG_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getUnitTag());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Debug.DebugSetUnitValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugSetUnitValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugSetUnitValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugSetUnitValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugSetUnitValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugSetUnitValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugSetUnitValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugSetUnitValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugSetUnitValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugSetUnitValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Debug.DebugSetUnitValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC2APIProtocol.DebugSetUnitValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.DebugSetUnitValue)
        SC2APIProtocol.Debug.DebugSetUnitValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugSetUnitValue_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugSetUnitValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Debug.DebugSetUnitValue.class, SC2APIProtocol.Debug.DebugSetUnitValue.Builder.class);
      }

      // Construct using SC2APIProtocol.Debug.DebugSetUnitValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        unitValue_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        unitTag_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugSetUnitValue_descriptor;
      }

      public SC2APIProtocol.Debug.DebugSetUnitValue getDefaultInstanceForType() {
        return SC2APIProtocol.Debug.DebugSetUnitValue.getDefaultInstance();
      }

      public SC2APIProtocol.Debug.DebugSetUnitValue build() {
        SC2APIProtocol.Debug.DebugSetUnitValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SC2APIProtocol.Debug.DebugSetUnitValue buildPartial() {
        SC2APIProtocol.Debug.DebugSetUnitValue result = new SC2APIProtocol.Debug.DebugSetUnitValue(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.unitValue_ = unitValue_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.unitTag_ = unitTag_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Debug.DebugSetUnitValue) {
          return mergeFrom((SC2APIProtocol.Debug.DebugSetUnitValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Debug.DebugSetUnitValue other) {
        if (other == SC2APIProtocol.Debug.DebugSetUnitValue.getDefaultInstance()) return this;
        if (other.hasUnitValue()) {
          setUnitValue(other.getUnitValue());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        if (other.hasUnitTag()) {
          setUnitTag(other.getUnitTag());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Debug.DebugSetUnitValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Debug.DebugSetUnitValue) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int unitValue_ = 1;
      /**
       * <code>optional .SC2APIProtocol.DebugSetUnitValue.UnitValue unit_value = 1;</code>
       */
      public boolean hasUnitValue() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .SC2APIProtocol.DebugSetUnitValue.UnitValue unit_value = 1;</code>
       */
      public SC2APIProtocol.Debug.DebugSetUnitValue.UnitValue getUnitValue() {
        SC2APIProtocol.Debug.DebugSetUnitValue.UnitValue result = SC2APIProtocol.Debug.DebugSetUnitValue.UnitValue.valueOf(unitValue_);
        return result == null ? SC2APIProtocol.Debug.DebugSetUnitValue.UnitValue.Energy : result;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugSetUnitValue.UnitValue unit_value = 1;</code>
       */
      public Builder setUnitValue(SC2APIProtocol.Debug.DebugSetUnitValue.UnitValue value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        unitValue_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.DebugSetUnitValue.UnitValue unit_value = 1;</code>
       */
      public Builder clearUnitValue() {
        bitField0_ = (bitField0_ & ~0x00000001);
        unitValue_ = 1;
        onChanged();
        return this;
      }

      private float value_ ;
      /**
       * <code>optional float value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float value = 2;</code>
       */
      public float getValue() {
        return value_;
      }
      /**
       * <code>optional float value = 2;</code>
       */
      public Builder setValue(float value) {
        bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0F;
        onChanged();
        return this;
      }

      private long unitTag_ ;
      /**
       * <code>optional uint64 unit_tag = 3;</code>
       */
      public boolean hasUnitTag() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 unit_tag = 3;</code>
       */
      public long getUnitTag() {
        return unitTag_;
      }
      /**
       * <code>optional uint64 unit_tag = 3;</code>
       */
      public Builder setUnitTag(long value) {
        bitField0_ |= 0x00000004;
        unitTag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 unit_tag = 3;</code>
       */
      public Builder clearUnitTag() {
        bitField0_ = (bitField0_ & ~0x00000004);
        unitTag_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.DebugSetUnitValue)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.DebugSetUnitValue)
    private static final SC2APIProtocol.Debug.DebugSetUnitValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Debug.DebugSetUnitValue();
    }

    public static SC2APIProtocol.Debug.DebugSetUnitValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DebugSetUnitValue>
        PARSER = new com.google.protobuf.AbstractParser<DebugSetUnitValue>() {
      public DebugSetUnitValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DebugSetUnitValue(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DebugSetUnitValue> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DebugSetUnitValue> getParserForType() {
      return PARSER;
    }

    public SC2APIProtocol.Debug.DebugSetUnitValue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DebugChatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.DebugChat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string message = 1;</code>
     */
    boolean hasMessage();
    /**
     * <code>optional string message = 1;</code>
     */
    java.lang.String getMessage();
    /**
     * <code>optional string message = 1;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * Protobuf type {@code SC2APIProtocol.DebugChat}
   */
  public  static final class DebugChat extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.DebugChat)
      DebugChatOrBuilder {
    // Use DebugChat.newBuilder() to construct.
    private DebugChat(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DebugChat() {
      message_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DebugChat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              message_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugChat_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugChat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Debug.DebugChat.class, SC2APIProtocol.Debug.DebugChat.Builder.class);
    }

    private int bitField0_;
    public static final int MESSAGE_FIELD_NUMBER = 1;
    private volatile java.lang.Object message_;
    /**
     * <code>optional string message = 1;</code>
     */
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string message = 1;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          message_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string message = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, message_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, message_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Debug.DebugChat)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Debug.DebugChat other = (SC2APIProtocol.Debug.DebugChat) obj;

      boolean result = true;
      result = result && (hasMessage() == other.hasMessage());
      if (hasMessage()) {
        result = result && getMessage()
            .equals(other.getMessage());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasMessage()) {
        hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getMessage().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Debug.DebugChat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugChat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugChat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Debug.DebugChat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugChat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugChat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugChat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugChat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Debug.DebugChat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Debug.DebugChat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Debug.DebugChat prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC2APIProtocol.DebugChat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.DebugChat)
        SC2APIProtocol.Debug.DebugChatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugChat_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugChat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Debug.DebugChat.class, SC2APIProtocol.Debug.DebugChat.Builder.class);
      }

      // Construct using SC2APIProtocol.Debug.DebugChat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Debug.internal_static_SC2APIProtocol_DebugChat_descriptor;
      }

      public SC2APIProtocol.Debug.DebugChat getDefaultInstanceForType() {
        return SC2APIProtocol.Debug.DebugChat.getDefaultInstance();
      }

      public SC2APIProtocol.Debug.DebugChat build() {
        SC2APIProtocol.Debug.DebugChat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SC2APIProtocol.Debug.DebugChat buildPartial() {
        SC2APIProtocol.Debug.DebugChat result = new SC2APIProtocol.Debug.DebugChat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.message_ = message_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Debug.DebugChat) {
          return mergeFrom((SC2APIProtocol.Debug.DebugChat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Debug.DebugChat other) {
        if (other == SC2APIProtocol.Debug.DebugChat.getDefaultInstance()) return this;
        if (other.hasMessage()) {
          bitField0_ |= 0x00000001;
          message_ = other.message_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Debug.DebugChat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Debug.DebugChat) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object message_ = "";
      /**
       * <code>optional string message = 1;</code>
       */
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            message_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.DebugChat)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.DebugChat)
    private static final SC2APIProtocol.Debug.DebugChat DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Debug.DebugChat();
    }

    public static SC2APIProtocol.Debug.DebugChat getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DebugChat>
        PARSER = new com.google.protobuf.AbstractParser<DebugChat>() {
      public DebugChat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DebugChat(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DebugChat> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DebugChat> getParserForType() {
      return PARSER;
    }

    public SC2APIProtocol.Debug.DebugChat getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_DebugCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_DebugCommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_DebugDraw_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_DebugDraw_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_Line_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_Line_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_Color_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_Color_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_DebugText_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_DebugText_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_DebugLine_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_DebugLine_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_DebugBox_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_DebugBox_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_DebugSphere_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_DebugSphere_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_DebugCreateUnit_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_DebugCreateUnit_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_DebugKillUnit_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_DebugKillUnit_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_DebugTestProcess_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_DebugTestProcess_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_DebugSetScore_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_DebugSetScore_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_DebugEndGame_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_DebugEndGame_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_DebugSetUnitValue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_DebugSetUnitValue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_DebugChat_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_DebugChat_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013debug.proto\022\016SC2APIProtocol\032\014common.pr" +
      "oto\"\346\003\n\014DebugCommand\022)\n\004draw\030\001 \001(\0132\031.SC2" +
      "APIProtocol.DebugDrawH\000\0224\n\ngame_state\030\002 " +
      "\001(\0162\036.SC2APIProtocol.DebugGameStateH\000\0226\n" +
      "\013create_unit\030\003 \001(\0132\037.SC2APIProtocol.Debu" +
      "gCreateUnitH\000\0222\n\tkill_unit\030\004 \001(\0132\035.SC2AP" +
      "IProtocol.DebugKillUnitH\000\0228\n\014test_proces" +
      "s\030\005 \001(\0132 .SC2APIProtocol.DebugTestProces" +
      "sH\000\022.\n\005score\030\006 \001(\0132\035.SC2APIProtocol.Debu" +
      "gSetScoreH\000\0220\n\010end_game\030\007 \001(\0132\034.SC2APIPr",
      "otocol.DebugEndGameH\000\0227\n\nunit_value\030\010 \001(" +
      "\0132!.SC2APIProtocol.DebugSetUnitValueH\000\022)" +
      "\n\004chat\030\t \001(\0132\031.SC2APIProtocol.DebugChatH" +
      "\000B\t\n\007command\"\265\001\n\tDebugDraw\022\'\n\004text\030\001 \003(\013" +
      "2\031.SC2APIProtocol.DebugText\022(\n\005lines\030\002 \003" +
      "(\0132\031.SC2APIProtocol.DebugLine\022\'\n\005boxes\030\003" +
      " \003(\0132\030.SC2APIProtocol.DebugBox\022,\n\007sphere" +
      "s\030\004 \003(\0132\033.SC2APIProtocol.DebugSphere\"L\n\004" +
      "Line\022!\n\002p0\030\001 \001(\0132\025.SC2APIProtocol.Point\022" +
      "!\n\002p1\030\002 \001(\0132\025.SC2APIProtocol.Point\"(\n\005Co",
      "lor\022\t\n\001r\030\001 \001(\r\022\t\n\001g\030\002 \001(\r\022\t\n\001b\030\003 \001(\r\"\225\001\n" +
      "\tDebugText\022$\n\005color\030\001 \001(\0132\025.SC2APIProtoc" +
      "ol.Color\022\014\n\004text\030\002 \001(\t\022*\n\013virtual_pos\030\003 " +
      "\001(\0132\025.SC2APIProtocol.Point\022(\n\tworld_pos\030" +
      "\004 \001(\0132\025.SC2APIProtocol.Point\"U\n\tDebugLin" +
      "e\022$\n\005color\030\001 \001(\0132\025.SC2APIProtocol.Color\022" +
      "\"\n\004line\030\002 \001(\0132\024.SC2APIProtocol.Line\"x\n\010D" +
      "ebugBox\022$\n\005color\030\001 \001(\0132\025.SC2APIProtocol." +
      "Color\022\"\n\003min\030\002 \001(\0132\025.SC2APIProtocol.Poin" +
      "t\022\"\n\003max\030\003 \001(\0132\025.SC2APIProtocol.Point\"`\n",
      "\013DebugSphere\022$\n\005color\030\001 \001(\0132\025.SC2APIProt" +
      "ocol.Color\022 \n\001p\030\002 \001(\0132\025.SC2APIProtocol.P" +
      "oint\022\t\n\001r\030\003 \001(\002\"k\n\017DebugCreateUnit\022\021\n\tun" +
      "it_type\030\001 \001(\r\022\r\n\005owner\030\002 \001(\005\022$\n\003pos\030\003 \001(" +
      "\0132\027.SC2APIProtocol.Point2D\022\020\n\010quantity\030\004" +
      " \001(\r\"\034\n\rDebugKillUnit\022\013\n\003tag\030\001 \003(\004\"\200\001\n\020D" +
      "ebugTestProcess\0223\n\004test\030\001 \001(\0162%.SC2APIPr" +
      "otocol.DebugTestProcess.Test\022\020\n\010delay_ms" +
      "\030\002 \001(\005\"%\n\004Test\022\010\n\004hang\020\001\022\t\n\005crash\020\002\022\010\n\004e" +
      "xit\020\003\"\036\n\rDebugSetScore\022\r\n\005score\030\001 \001(\002\"z\n",
      "\014DebugEndGame\022:\n\nend_result\030\001 \001(\0162&.SC2A" +
      "PIProtocol.DebugEndGame.EndResult\".\n\tEnd" +
      "Result\022\r\n\tSurrender\020\001\022\022\n\016DeclareVictory\020" +
      "\002\"\245\001\n\021DebugSetUnitValue\022?\n\nunit_value\030\001 " +
      "\001(\0162+.SC2APIProtocol.DebugSetUnitValue.U" +
      "nitValue\022\r\n\005value\030\002 \001(\002\022\020\n\010unit_tag\030\003 \001(" +
      "\004\".\n\tUnitValue\022\n\n\006Energy\020\001\022\010\n\004Life\020\002\022\013\n\007" +
      "Shields\020\003\"\034\n\tDebugChat\022\017\n\007message\030\001 \001(\t*" +
      "\262\001\n\016DebugGameState\022\014\n\010show_map\020\001\022\021\n\rcont" +
      "rol_enemy\020\002\022\010\n\004food\020\003\022\010\n\004free\020\004\022\021\n\rall_r",
      "esources\020\005\022\007\n\003god\020\006\022\014\n\010minerals\020\007\022\007\n\003gas" +
      "\020\010\022\014\n\010cooldown\020\t\022\r\n\ttech_tree\020\n\022\013\n\007upgra" +
      "de\020\013\022\016\n\nfast_build\020\014"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          SC2APIProtocol.Common.getDescriptor(),
        }, assigner);
    internal_static_SC2APIProtocol_DebugCommand_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SC2APIProtocol_DebugCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_DebugCommand_descriptor,
        new java.lang.String[] { "Draw", "GameState", "CreateUnit", "KillUnit", "TestProcess", "Score", "EndGame", "UnitValue", "Chat", "Command", });
    internal_static_SC2APIProtocol_DebugDraw_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_SC2APIProtocol_DebugDraw_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_DebugDraw_descriptor,
        new java.lang.String[] { "Text", "Lines", "Boxes", "Spheres", });
    internal_static_SC2APIProtocol_Line_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_SC2APIProtocol_Line_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_Line_descriptor,
        new java.lang.String[] { "P0", "P1", });
    internal_static_SC2APIProtocol_Color_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_SC2APIProtocol_Color_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_Color_descriptor,
        new java.lang.String[] { "R", "G", "B", });
    internal_static_SC2APIProtocol_DebugText_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_SC2APIProtocol_DebugText_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_DebugText_descriptor,
        new java.lang.String[] { "Color", "Text", "VirtualPos", "WorldPos", });
    internal_static_SC2APIProtocol_DebugLine_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_SC2APIProtocol_DebugLine_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_DebugLine_descriptor,
        new java.lang.String[] { "Color", "Line", });
    internal_static_SC2APIProtocol_DebugBox_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_SC2APIProtocol_DebugBox_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_DebugBox_descriptor,
        new java.lang.String[] { "Color", "Min", "Max", });
    internal_static_SC2APIProtocol_DebugSphere_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_SC2APIProtocol_DebugSphere_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_DebugSphere_descriptor,
        new java.lang.String[] { "Color", "P", "R", });
    internal_static_SC2APIProtocol_DebugCreateUnit_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_SC2APIProtocol_DebugCreateUnit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_DebugCreateUnit_descriptor,
        new java.lang.String[] { "UnitType", "Owner", "Pos", "Quantity", });
    internal_static_SC2APIProtocol_DebugKillUnit_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_SC2APIProtocol_DebugKillUnit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_DebugKillUnit_descriptor,
        new java.lang.String[] { "Tag", });
    internal_static_SC2APIProtocol_DebugTestProcess_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_SC2APIProtocol_DebugTestProcess_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_DebugTestProcess_descriptor,
        new java.lang.String[] { "Test", "DelayMs", });
    internal_static_SC2APIProtocol_DebugSetScore_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_SC2APIProtocol_DebugSetScore_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_DebugSetScore_descriptor,
        new java.lang.String[] { "Score", });
    internal_static_SC2APIProtocol_DebugEndGame_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_SC2APIProtocol_DebugEndGame_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_DebugEndGame_descriptor,
        new java.lang.String[] { "EndResult", });
    internal_static_SC2APIProtocol_DebugSetUnitValue_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_SC2APIProtocol_DebugSetUnitValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_DebugSetUnitValue_descriptor,
        new java.lang.String[] { "UnitValue", "Value", "UnitTag", });
    internal_static_SC2APIProtocol_DebugChat_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_SC2APIProtocol_DebugChat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_DebugChat_descriptor,
        new java.lang.String[] { "Message", });
    SC2APIProtocol.Common.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
